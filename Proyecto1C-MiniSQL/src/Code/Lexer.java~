/* The following code was generated by JFlex 1.7.0 */

package Code;
import static Code.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/Sthephan/Documents/GitHub/Proyect1Compi/Proyecto1C/src/Code/Lexer.flex</tt>
 */
public class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\10\1\3\1\2\1\70\1\3\1\1\16\10\4\0\1\53\1\55"+
    "\1\0\1\67\1\7\1\54\1\57\1\23\1\63\1\64\1\5\1\22"+
    "\1\54\1\6\1\20\1\4\1\13\1\12\10\17\1\0\1\54\1\55"+
    "\1\56\1\55\1\0\1\54\1\24\1\37\1\34\1\25\1\26\1\35"+
    "\1\43\1\36\1\40\1\51\1\45\1\16\1\46\1\14\1\33\1\32"+
    "\1\52\1\31\1\41\1\30\1\15\1\50\1\47\1\27\1\42\1\44"+
    "\1\61\1\0\1\62\1\0\1\11\1\0\4\7\1\21\25\7\1\65"+
    "\1\60\1\66\1\0\6\10\1\71\32\10\2\0\4\7\4\0\1\7"+
    "\2\0\1\10\7\0\1\7\4\0\1\7\5\0\27\7\1\0\37\7"+
    "\1\0\u01ca\7\4\0\14\7\16\0\5\7\7\0\1\7\1\0\1\7"+
    "\21\0\160\10\5\7\1\0\2\7\2\0\4\7\10\0\1\7\1\0"+
    "\3\7\1\0\1\7\1\0\24\7\1\0\123\7\1\0\213\7\1\0"+
    "\5\10\2\0\236\7\11\0\46\7\2\0\1\7\7\0\47\7\7\0"+
    "\1\7\1\0\55\10\1\0\1\10\1\0\2\10\1\0\2\10\1\0"+
    "\1\10\10\0\33\7\5\0\3\7\15\0\5\10\6\0\1\7\4\0"+
    "\13\10\5\0\53\7\37\10\4\0\2\7\1\10\143\7\1\0\1\7"+
    "\10\10\1\0\6\10\2\7\2\10\1\0\4\10\2\7\12\10\3\7"+
    "\2\0\1\7\17\0\1\10\1\7\1\10\36\7\33\10\2\0\131\7"+
    "\13\10\1\7\16\0\12\10\41\7\11\10\2\7\4\0\1\7\5\0"+
    "\26\7\4\10\1\7\11\10\1\7\3\10\1\7\5\10\22\0\31\7"+
    "\3\10\104\0\1\7\1\0\13\7\67\0\33\10\1\0\4\10\66\7"+
    "\3\10\1\7\22\10\1\7\7\10\12\7\2\10\2\0\12\10\1\0"+
    "\7\7\1\0\7\7\1\0\3\10\1\0\10\7\2\0\2\7\2\0"+
    "\26\7\1\0\7\7\1\0\1\7\3\0\4\7\2\0\1\10\1\7"+
    "\7\10\2\0\2\10\2\0\3\10\1\7\10\0\1\10\4\0\2\7"+
    "\1\0\3\7\2\10\2\0\12\10\4\7\7\0\1\7\5\0\3\10"+
    "\1\0\6\7\4\0\2\7\2\0\26\7\1\0\7\7\1\0\2\7"+
    "\1\0\2\7\1\0\2\7\2\0\1\10\1\0\5\10\4\0\2\10"+
    "\2\0\3\10\3\0\1\10\7\0\4\7\1\0\1\7\7\0\14\10"+
    "\3\7\1\10\13\0\3\10\1\0\11\7\1\0\3\7\1\0\26\7"+
    "\1\0\7\7\1\0\2\7\1\0\5\7\2\0\1\10\1\7\10\10"+
    "\1\0\3\10\1\0\3\10\2\0\1\7\17\0\2\7\2\10\2\0"+
    "\12\10\1\0\1\7\17\0\3\10\1\0\10\7\2\0\2\7\2\0"+
    "\26\7\1\0\7\7\1\0\2\7\1\0\5\7\2\0\1\10\1\7"+
    "\7\10\2\0\2\10\2\0\3\10\10\0\2\10\4\0\2\7\1\0"+
    "\3\7\2\10\2\0\12\10\1\0\1\7\20\0\1\10\1\7\1\0"+
    "\6\7\3\0\3\7\1\0\4\7\3\0\2\7\1\0\1\7\1\0"+
    "\2\7\3\0\2\7\3\0\3\7\3\0\14\7\4\0\5\10\3\0"+
    "\3\10\1\0\4\10\2\0\1\7\6\0\1\10\16\0\12\10\11\0"+
    "\1\7\7\0\3\10\1\0\10\7\1\0\3\7\1\0\27\7\1\0"+
    "\12\7\1\0\5\7\3\0\1\7\7\10\1\0\3\10\1\0\4\10"+
    "\7\0\2\10\1\0\2\7\6\0\2\7\2\10\2\0\12\10\22\0"+
    "\2\10\1\0\10\7\1\0\3\7\1\0\27\7\1\0\12\7\1\0"+
    "\5\7\2\0\1\10\1\7\7\10\1\0\3\10\1\0\4\10\7\0"+
    "\2\10\7\0\1\7\1\0\2\7\2\10\2\0\12\10\1\0\2\7"+
    "\17\0\2\10\1\0\10\7\1\0\3\7\1\0\51\7\2\0\1\7"+
    "\7\10\1\0\3\10\1\0\4\10\1\7\10\0\1\10\10\0\2\7"+
    "\2\10\2\0\12\10\12\0\6\7\2\0\2\10\1\0\22\7\3\0"+
    "\30\7\1\0\11\7\1\0\1\7\2\0\7\7\3\0\1\10\4\0"+
    "\6\10\1\0\1\10\1\0\10\10\22\0\2\10\15\0\60\7\1\10"+
    "\2\7\7\10\4\0\10\7\10\10\1\0\12\10\47\0\2\7\1\0"+
    "\1\7\2\0\2\7\1\0\1\7\2\0\1\7\6\0\4\7\1\0"+
    "\7\7\1\0\3\7\1\0\1\7\1\0\1\7\2\0\2\7\1\0"+
    "\4\7\1\10\2\7\6\10\1\0\2\10\1\7\2\0\5\7\1\0"+
    "\1\7\1\0\6\10\2\0\12\10\2\0\4\7\40\0\1\7\27\0"+
    "\2\10\6\0\12\10\13\0\1\10\1\0\1\10\1\0\1\10\4\0"+
    "\2\10\10\7\1\0\44\7\4\0\24\10\1\0\2\10\5\7\13\10"+
    "\1\0\44\10\11\0\1\10\71\0\53\7\24\10\1\7\12\10\6\0"+
    "\6\7\4\10\4\7\3\10\1\7\3\10\2\7\7\10\3\7\4\10"+
    "\15\7\14\10\1\7\17\10\2\0\46\7\1\0\1\7\5\0\1\7"+
    "\2\0\53\7\1\0\u014d\7\1\0\4\7\2\0\7\7\1\0\1\7"+
    "\1\0\4\7\2\0\51\7\1\0\4\7\2\0\41\7\1\0\4\7"+
    "\2\0\7\7\1\0\1\7\1\0\4\7\2\0\17\7\1\0\71\7"+
    "\1\0\4\7\2\0\103\7\2\0\3\10\40\0\20\7\20\0\125\7"+
    "\14\0\u026c\7\2\0\21\7\1\0\32\7\5\0\113\7\3\0\3\7"+
    "\17\0\15\7\1\0\4\7\3\10\13\0\22\7\3\10\13\0\22\7"+
    "\2\10\14\0\15\7\1\0\3\7\1\0\2\10\14\0\64\7\40\10"+
    "\3\0\1\7\3\0\2\7\1\10\2\0\12\10\41\0\3\10\2\0"+
    "\12\10\6\0\130\7\10\0\51\7\1\10\1\7\5\0\106\7\12\0"+
    "\35\7\3\0\14\10\4\0\14\10\12\0\12\10\36\7\2\0\5\7"+
    "\13\0\54\7\4\0\21\10\7\7\2\10\6\0\12\10\46\0\27\7"+
    "\5\10\4\0\65\7\12\10\1\0\35\10\2\0\13\10\6\0\12\10"+
    "\15\0\1\7\130\0\5\10\57\7\21\10\7\7\4\0\12\10\21\0"+
    "\11\10\14\0\3\10\36\7\15\10\2\7\12\10\54\7\16\10\14\0"+
    "\44\7\24\10\10\0\12\10\3\0\3\7\12\10\44\7\122\0\3\10"+
    "\1\0\25\10\4\7\1\10\4\7\3\10\2\7\11\0\300\7\47\10"+
    "\25\0\4\10\u0116\7\2\0\6\7\2\0\46\7\2\0\6\7\2\0"+
    "\10\7\1\0\1\7\1\0\1\7\1\0\1\7\1\0\37\7\2\0"+
    "\65\7\1\0\7\7\1\0\1\7\3\0\3\7\1\0\7\7\3\0"+
    "\4\7\2\0\6\7\4\0\15\7\5\0\3\7\1\0\7\7\16\0"+
    "\5\10\30\0\1\70\1\70\5\10\20\0\2\7\23\0\1\7\13\0"+
    "\5\10\5\0\6\10\1\0\1\7\15\0\1\7\20\0\15\7\3\0"+
    "\33\7\25\0\15\10\4\0\1\10\3\0\14\10\21\0\1\7\4\0"+
    "\1\7\2\0\12\7\1\0\1\7\3\0\5\7\6\0\1\7\1\0"+
    "\1\7\1\0\1\7\1\0\4\7\1\0\13\7\2\0\4\7\5\0"+
    "\5\7\4\0\1\7\21\0\51\7\u0a77\0\57\7\1\0\57\7\1\0"+
    "\205\7\6\0\4\7\3\10\2\7\14\0\46\7\1\0\1\7\5\0"+
    "\1\7\2\0\70\7\7\0\1\7\17\0\1\10\27\7\11\0\7\7"+
    "\1\0\7\7\1\0\7\7\1\0\7\7\1\0\7\7\1\0\7\7"+
    "\1\0\7\7\1\0\7\7\1\0\40\10\57\0\1\7\u01d5\0\3\7"+
    "\31\0\11\7\6\10\1\0\5\7\2\0\5\7\4\0\126\7\2\0"+
    "\2\10\2\0\3\7\1\0\132\7\1\0\4\7\5\0\51\7\3\0"+
    "\136\7\21\0\33\7\65\0\20\7\u0200\0\u19b6\7\112\0\u51cd\7\63\0"+
    "\u048d\7\103\0\56\7\2\0\u010d\7\3\0\20\7\12\10\2\7\24\0"+
    "\57\7\1\10\4\0\12\10\1\0\31\7\7\0\1\10\120\7\2\10"+
    "\45\0\11\7\2\0\147\7\2\0\4\7\1\0\4\7\14\0\13\7"+
    "\115\0\12\7\1\10\3\7\1\10\4\7\1\10\27\7\5\10\20\0"+
    "\1\7\7\0\64\7\14\0\2\10\62\7\21\10\13\0\12\10\6\0"+
    "\22\10\6\7\3\0\1\7\4\0\12\10\34\7\10\10\2\0\27\7"+
    "\15\10\14\0\35\7\3\0\4\10\57\7\16\10\16\0\1\7\12\10"+
    "\46\0\51\7\16\10\11\0\3\7\1\10\10\7\2\10\2\0\12\10"+
    "\6\0\27\7\3\0\1\7\1\10\4\0\60\7\1\10\1\7\3\10"+
    "\2\7\2\10\5\7\2\10\1\7\1\10\1\7\30\0\3\7\2\0"+
    "\13\7\5\10\2\0\3\7\2\10\12\0\6\7\2\0\6\7\2\0"+
    "\6\7\11\0\7\7\1\0\7\7\221\0\43\7\10\10\1\0\2\10"+
    "\2\0\12\10\6\0\u2ba4\7\14\0\27\7\4\0\61\7\u2104\0\u016e\7"+
    "\2\0\152\7\46\0\7\7\14\0\5\7\5\0\1\7\1\10\12\7"+
    "\1\0\15\7\1\0\5\7\1\0\1\7\1\0\2\7\1\0\2\7"+
    "\1\0\154\7\41\0\u016b\7\22\0\100\7\2\0\66\7\50\0\15\7"+
    "\3\0\20\10\20\0\7\10\14\0\2\7\30\0\3\7\31\0\1\7"+
    "\6\0\5\7\1\0\207\7\2\0\1\10\4\0\1\7\13\0\12\10"+
    "\7\0\32\7\4\0\1\7\1\0\32\7\13\0\131\7\3\0\6\7"+
    "\2\0\6\7\2\0\6\7\2\0\3\7\3\0\2\7\3\0\2\7"+
    "\22\0\3\10\4\0\14\7\1\0\32\7\1\0\23\7\1\0\2\7"+
    "\1\0\17\7\2\0\16\7\42\0\173\7\105\0\65\7\210\0\1\10"+
    "\202\0\35\7\3\0\61\7\57\0\37\7\21\0\33\7\65\0\36\7"+
    "\2\0\44\7\4\0\10\7\1\0\5\7\52\0\236\7\2\0\12\10"+
    "\u0356\0\6\7\2\0\1\7\1\0\54\7\1\0\2\7\3\0\1\7"+
    "\2\0\27\7\252\0\26\7\12\0\32\7\106\0\70\7\6\0\2\7"+
    "\100\0\1\7\3\10\1\0\2\10\5\0\4\10\4\7\1\0\3\7"+
    "\1\0\33\7\4\0\3\10\4\0\1\10\40\0\35\7\203\0\66\7"+
    "\12\0\26\7\12\0\23\7\215\0\111\7\u03b7\0\3\10\65\7\17\10"+
    "\37\0\12\10\20\0\3\10\55\7\13\10\2\0\1\10\22\0\31\7"+
    "\7\0\12\10\6\0\3\10\44\7\16\10\1\0\12\10\100\0\3\10"+
    "\60\7\16\10\4\7\13\0\12\10\u04a6\0\53\7\15\10\10\0\12\10"+
    "\u0936\0\u036f\7\221\0\143\7\u0b9d\0\u042f\7\u33d1\0\u0239\7\u04c7\0\105\7"+
    "\13\0\1\7\56\10\20\0\4\10\15\7\u4060\0\2\7\u2163\0\5\10"+
    "\3\0\26\10\2\0\7\10\36\0\4\10\224\0\3\10\u01bb\0\125\7"+
    "\1\0\107\7\1\0\2\7\2\0\1\7\2\0\2\7\2\0\4\7"+
    "\1\0\14\7\1\0\1\7\1\0\7\7\1\0\101\7\1\0\4\7"+
    "\2\0\10\7\1\0\7\7\1\0\34\7\1\0\4\7\1\0\5\7"+
    "\1\0\1\7\3\0\7\7\1\0\u0154\7\2\0\31\7\1\0\31\7"+
    "\1\0\37\7\1\0\31\7\1\0\37\7\1\0\31\7\1\0\37\7"+
    "\1\0\31\7\1\0\37\7\1\0\31\7\1\0\10\7\2\0\62\10"+
    "\u1600\0\4\7\1\0\33\7\1\0\2\7\1\0\1\7\2\0\1\7"+
    "\1\0\12\7\1\0\4\7\1\0\1\7\1\0\1\7\6\0\1\7"+
    "\4\0\1\7\1\0\1\7\1\0\1\7\1\0\3\7\1\0\2\7"+
    "\1\0\1\7\2\0\1\7\1\0\1\7\1\0\1\7\1\0\1\7"+
    "\1\0\1\7\1\0\2\7\1\0\1\7\2\0\4\7\1\0\7\7"+
    "\1\0\4\7\1\0\4\7\1\0\1\7\1\0\12\7\1\0\21\7"+
    "\5\0\3\7\1\0\5\7\1\0\21\7\u1144\0\ua6d7\7\51\0\u1035\7"+
    "\13\0\336\7\u3fe2\0\u021e\7\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05ee\0"+
    "\1\10\36\0\140\10\200\0\360\10\uffff\0\uffff\0\ufe12\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\3\3\1\4\2\5\3\4\1\6"+
    "\1\7\23\4\1\3\2\1\4\3\1\10\1\11\1\12"+
    "\1\0\1\12\11\4\2\7\1\13\4\4\1\14\16\4"+
    "\1\14\14\4\1\14\1\4\1\14\1\4\1\14\22\4"+
    "\1\14\24\4\3\10\2\11\1\0\1\12\7\4\1\14"+
    "\56\4\1\14\20\4\1\14\15\4\1\14\22\4\1\10"+
    "\2\0\1\14\15\4\1\14\10\4\1\14\4\4\1\14"+
    "\15\4\1\14\1\4\1\14\44\4\1\14\1\4\1\10"+
    "\14\4\1\14\33\4\1\14\20\4\2\10\50\4\1\14"+
    "\12\4\1\0\6\4\2\14\3\4\1\0\7\4\1\0"+
    "\6\4\1\0\5\4\1\0\1\14\2\4\1\14\23\4";

  private static int [] zzUnpackAction() {
    int [] result = new int[498];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\72\0\164\0\256\0\72\0\350\0\u0122\0\u015c"+
    "\0\u0196\0\u01d0\0\u020a\0\u0244\0\u015c\0\u027e\0\u02b8\0\u02f2"+
    "\0\u032c\0\u0366\0\u03a0\0\u03da\0\u0414\0\u044e\0\u0488\0\u04c2"+
    "\0\u04fc\0\u0536\0\u0570\0\u05aa\0\u05e4\0\u061e\0\u0658\0\u0692"+
    "\0\u06cc\0\u0706\0\u0740\0\u077a\0\u07b4\0\u07ee\0\u0828\0\u0862"+
    "\0\u089c\0\u08d6\0\u0910\0\u094a\0\u0196\0\u0984\0\u09be\0\u09f8"+
    "\0\u0a32\0\u0a6c\0\u0aa6\0\u0ae0\0\u0b1a\0\u0b54\0\u0b8e\0\72"+
    "\0\72\0\u0bc8\0\u0c02\0\u0c3c\0\u0c76\0\u0cb0\0\u0cea\0\u0d24"+
    "\0\u0d5e\0\u0d98\0\u0dd2\0\u0e0c\0\u0e46\0\u0e80\0\u0eba\0\u0ef4"+
    "\0\u0f2e\0\u0f68\0\u0fa2\0\u0fdc\0\u1016\0\u1050\0\u108a\0\u10c4"+
    "\0\u10fe\0\u1138\0\u1172\0\u11ac\0\u11e6\0\u1220\0\u125a\0\u1294"+
    "\0\u12ce\0\u0122\0\u1308\0\u1342\0\u137c\0\u13b6\0\u13f0\0\u142a"+
    "\0\u1464\0\u149e\0\u14d8\0\u1512\0\u154c\0\u1586\0\u15c0\0\u15fa"+
    "\0\u1634\0\u166e\0\u16a8\0\u16e2\0\u171c\0\u1756\0\u1790\0\u17ca"+
    "\0\u1804\0\u183e\0\u1878\0\u18b2\0\u18ec\0\u1926\0\u1960\0\u199a"+
    "\0\u19d4\0\u1a0e\0\u1a48\0\u1a82\0\u1abc\0\u1af6\0\u1b30\0\u1b6a"+
    "\0\u1ba4\0\u1bde\0\u1c18\0\u1c52\0\u1c8c\0\u1cc6\0\u1d00\0\u1d3a"+
    "\0\u1d74\0\72\0\u1dae\0\u1dae\0\u1de8\0\u1e22\0\u1e5c\0\u1e96"+
    "\0\u1ed0\0\u1f0a\0\u1f44\0\u1f7e\0\u1fb8\0\u1ff2\0\u202c\0\u2066"+
    "\0\u1016\0\u20a0\0\u20da\0\u2114\0\u214e\0\u2188\0\u0cb0\0\u21c2"+
    "\0\u21fc\0\u2236\0\u2270\0\u22aa\0\u22e4\0\u231e\0\u2358\0\u2392"+
    "\0\u23cc\0\u2406\0\u2440\0\u247a\0\u24b4\0\u24ee\0\u2528\0\u2562"+
    "\0\u259c\0\u25d6\0\u2610\0\u264a\0\u2684\0\u26be\0\u26f8\0\u2732"+
    "\0\u276c\0\u27a6\0\u27e0\0\u281a\0\u2854\0\u288e\0\u28c8\0\u2902"+
    "\0\u293c\0\u2976\0\u29b0\0\u1f7e\0\u29ea\0\u2a24\0\u2a5e\0\u2a98"+
    "\0\u2ad2\0\u2b0c\0\u2b46\0\u2b80\0\u2bba\0\u2bf4\0\u2c2e\0\u2c68"+
    "\0\u2ca2\0\u2cdc\0\u2d16\0\u2d50\0\u2d8a\0\u2dc4\0\u2dfe\0\u2e38"+
    "\0\u2e72\0\u2eac\0\u2ee6\0\u2f20\0\u2f5a\0\u2f94\0\u2fce\0\u3008"+
    "\0\u3042\0\u307c\0\u30b6\0\u30f0\0\u312a\0\u3164\0\u319e\0\u31d8"+
    "\0\u3212\0\u324c\0\u3286\0\u32c0\0\u32fa\0\u3334\0\u336e\0\u33a8"+
    "\0\u33e2\0\u341c\0\u3456\0\u3490\0\u34ca\0\u1d3a\0\u3504\0\u353e"+
    "\0\u3578\0\u35b2\0\u35ec\0\u3626\0\u3660\0\u369a\0\u36d4\0\u370e"+
    "\0\u3748\0\u3782\0\u37bc\0\u37f6\0\u3830\0\u386a\0\u38a4\0\u38de"+
    "\0\u3918\0\u3952\0\u398c\0\u39c6\0\u3a00\0\u3a3a\0\u3a74\0\u3aae"+
    "\0\u3ae8\0\u3b22\0\u3b5c\0\u3b96\0\u3bd0\0\u3c0a\0\u3c44\0\u3c7e"+
    "\0\u3cb8\0\u3cf2\0\u3d2c\0\u3d66\0\u3da0\0\u3dda\0\u3e14\0\u3e4e"+
    "\0\u3e88\0\u3ec2\0\u3efc\0\u3f36\0\u3f70\0\u3faa\0\u3fe4\0\u401e"+
    "\0\u4058\0\u4092\0\u40cc\0\u4106\0\u4140\0\u417a\0\u41b4\0\u386a"+
    "\0\u41ee\0\u4228\0\u4262\0\u429c\0\u42d6\0\u4310\0\u434a\0\u4384"+
    "\0\u43be\0\u43f8\0\u4432\0\u446c\0\u44a6\0\u44e0\0\u451a\0\u4554"+
    "\0\u458e\0\u45c8\0\u4602\0\u463c\0\u4676\0\u46b0\0\u46ea\0\u4724"+
    "\0\u475e\0\u4798\0\u47d2\0\u480c\0\u4846\0\u4880\0\u48ba\0\u48f4"+
    "\0\u492e\0\u4968\0\u49a2\0\u49dc\0\u4a16\0\u4a50\0\u4a8a\0\u4ac4"+
    "\0\u4afe\0\u4b38\0\u4b72\0\u4bac\0\u4be6\0\u4c20\0\u4c5a\0\u4c94"+
    "\0\u4cce\0\u4d08\0\u4d42\0\u4d7c\0\u4db6\0\u4df0\0\u4e2a\0\u4e64"+
    "\0\u4e9e\0\u4ed8\0\u4f12\0\u4f4c\0\u4f86\0\u4fc0\0\u4ffa\0\u5034"+
    "\0\u506e\0\u50a8\0\u50e2\0\u511c\0\u5156\0\u5190\0\u51ca\0\u5204"+
    "\0\u523e\0\u5278\0\u52b2\0\u52ec\0\u5326\0\u5360\0\u539a\0\u53d4"+
    "\0\u540e\0\u5448\0\u3b96\0\u5482\0\u54bc\0\72\0\u54f6\0\u5530"+
    "\0\u556a\0\u55a4\0\u55de\0\u5618\0\u5652\0\u568c\0\u56c6\0\u5700"+
    "\0\u573a\0\u5774\0\u57ae\0\u57e8\0\u5822\0\u585c\0\u5896\0\u58d0"+
    "\0\u590a\0\u5944\0\u597e\0\u59b8\0\u59f2\0\u5a2c\0\u5a66\0\u5aa0"+
    "\0\u5ada\0\u5b14\0\u5b4e\0\u5b88\0\u5bc2\0\u5bfc\0\u5c36\0\u5c70"+
    "\0\u5caa\0\u5ce4\0\u5d1e\0\u5d58\0\u5d92\0\u5dcc\0\u5e06\0\u5e40"+
    "\0\u5e7a\0\u5eb4\0\u5eee\0\u5f28\0\u5f62\0\u5f9c\0\u5fd6\0\u6010"+
    "\0\u307c\0\u604a\0\u6084\0\u60be\0\u60f8\0\u6132\0\u616c\0\u61a6"+
    "\0\u61e0\0\u621a\0\u6254\0\u628e\0\u62c8\0\u6302\0\u633c\0\u6376"+
    "\0\u63b0\0\u63ea\0\u6424\0\u645e\0\u6498\0\u64d2\0\u650c\0\u6546"+
    "\0\u6580\0\u65ba\0\u65f4\0\u662e\0\u6668\0\u66a2\0\u66dc\0\u6716"+
    "\0\u6750\0\u678a\0\u67c4\0\u67fe\0\u6838\0\u6872\0\72\0\u68ac"+
    "\0\u68e6\0\u6920\0\u695a\0\u6994\0\u69ce\0\u6a08\0\u6a42\0\u6a7c"+
    "\0\u6ab6\0\u6af0\0\u61e0\0\u6b2a\0\u6b64\0\u6b9e\0\u6bd8\0\u6c12"+
    "\0\u6c4c\0\u6c86";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[498];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\3\3\1\4\1\5\1\6\1\7\1\2\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\1\15\1\5\1\7"+
    "\1\5\1\16\1\17\1\20\1\21\1\7\1\22\1\23"+
    "\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33"+
    "\1\7\1\34\1\7\1\35\1\36\1\37\1\40\1\41"+
    "\1\7\1\3\1\5\2\42\1\43\1\44\1\45\1\5"+
    "\1\46\1\5\1\47\1\5\1\50\75\0\3\3\47\0"+
    "\1\3\23\0\1\51\72\0\1\52\72\0\11\7\1\0"+
    "\1\7\2\0\27\7\16\0\1\7\12\0\2\15\3\0"+
    "\1\15\1\53\1\54\4\0\1\54\55\0\2\55\3\0"+
    "\1\55\1\53\1\54\4\0\1\54\52\0\6\7\1\56"+
    "\2\7\1\0\1\7\2\0\1\57\6\7\1\60\17\7"+
    "\16\0\1\7\7\0\5\7\1\61\3\7\1\0\1\7"+
    "\2\0\6\7\1\62\6\7\1\63\11\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\2\7\1\64\4\7"+
    "\1\65\4\7\1\66\12\7\16\0\1\7\1\16\1\67"+
    "\1\70\20\16\1\71\46\16\7\0\5\7\1\72\1\73"+
    "\1\74\1\7\1\0\1\7\2\0\1\7\1\75\13\7"+
    "\1\76\11\7\16\0\1\7\7\0\6\7\1\77\2\7"+
    "\1\0\1\7\2\0\1\100\1\7\1\101\2\7\1\102"+
    "\1\7\1\103\3\7\1\104\1\105\12\7\16\0\1\7"+
    "\7\0\5\7\1\75\1\7\1\106\1\7\1\0\1\7"+
    "\2\0\3\7\1\107\1\7\1\110\7\7\1\111\11\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\1\112"+
    "\1\7\1\113\2\7\1\114\1\7\1\115\2\7\1\116"+
    "\2\7\1\117\11\7\16\0\1\7\7\0\6\7\1\120"+
    "\2\7\1\0\1\7\2\0\1\121\1\7\1\122\4\7"+
    "\1\123\4\7\1\124\12\7\16\0\1\7\7\0\6\7"+
    "\1\125\1\126\1\7\1\0\1\7\2\0\2\7\1\127"+
    "\2\7\1\130\6\7\1\131\12\7\16\0\1\7\7\0"+
    "\5\7\1\132\1\133\2\7\1\0\1\7\2\0\5\7"+
    "\1\134\1\135\2\7\1\136\12\7\1\137\2\7\16\0"+
    "\1\7\7\0\6\7\1\140\1\141\1\7\1\0\1\7"+
    "\2\0\1\142\4\7\1\143\1\7\1\144\2\7\1\145"+
    "\14\7\16\0\1\7\7\0\6\7\1\146\2\7\1\0"+
    "\1\7\2\0\2\7\1\147\2\7\1\150\1\7\1\151"+
    "\4\7\1\152\12\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\153\6\7\1\154\17\7\16\0\1\7"+
    "\7\0\6\7\1\155\2\7\1\0\1\7\2\0\1\156"+
    "\1\7\1\157\2\7\1\160\10\7\1\132\10\7\16\0"+
    "\1\7\7\0\5\7\1\161\3\7\1\0\1\7\2\0"+
    "\1\7\1\162\7\7\1\132\3\7\1\132\11\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\163\1\7"+
    "\1\164\1\7\1\165\2\7\1\166\1\167\1\7\1\170"+
    "\3\7\1\171\10\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\172\1\7\1\173\17\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\174"+
    "\11\7\1\175\12\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\176\24\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\1\177\4\7\1\200\4\7"+
    "\1\201\1\7\1\202\12\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\203\13\7\1\204\12\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\205"+
    "\17\7\16\0\1\7\56\0\1\5\72\0\1\5\72\0"+
    "\1\5\73\0\1\5\73\0\1\5\73\0\1\5\72\0"+
    "\1\5\2\0\1\206\1\207\1\210\67\206\1\52\1\211"+
    "\1\212\67\52\12\0\2\53\3\0\1\53\1\0\1\54"+
    "\4\0\1\54\51\0\1\213\3\0\2\214\3\0\1\214"+
    "\2\0\1\213\56\0\7\7\1\215\1\7\1\0\1\7"+
    "\2\0\27\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\4\7\1\216\22\7\16\0\1\7\7\0\5\7"+
    "\1\217\3\7\1\0\1\7\2\0\4\7\1\132\3\7"+
    "\1\220\16\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\6\7\1\221\5\7\1\222\12\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\7\1\223\25\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\224\24\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\11\7\1\225\15\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\75\26\7\16\0\1\7\7\0"+
    "\5\7\1\226\3\7\1\0\1\7\2\0\21\7\1\227"+
    "\5\7\16\0\1\7\2\0\1\70\76\0\11\7\1\0"+
    "\1\7\2\0\1\7\1\132\14\7\1\132\10\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\230"+
    "\22\7\16\0\1\7\7\0\7\7\1\132\1\7\1\0"+
    "\1\7\2\0\4\7\1\137\22\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\1\7\1\132\25\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\10\7\1\132"+
    "\16\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\22\7\1\231\4\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\232\22\7\16\0\1\7\7\0"+
    "\5\7\1\174\1\7\1\233\1\7\1\0\1\7\2\0"+
    "\1\234\7\7\1\235\1\236\3\7\1\237\11\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\231"+
    "\17\7\16\0\1\7\7\0\6\7\1\240\2\7\1\0"+
    "\1\7\2\0\27\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\10\7\1\237\16\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\15\7\1\241\11\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\15\7\1\227"+
    "\11\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\242\1\7\1\243\3\7\1\244\3\7\1\245"+
    "\12\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\5\7\1\246\21\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\10\7\1\247\16\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\13\7\1\250\13\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\3\7\1\251"+
    "\23\7\16\0\1\7\7\0\6\7\1\252\2\7\1\0"+
    "\1\7\2\0\1\253\13\7\1\254\1\7\1\255\10\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\6\7"+
    "\1\132\20\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\2\7\1\256\24\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\257\24\7\16\0\1\7"+
    "\7\0\7\7\1\227\1\7\1\0\1\7\2\0\27\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\14\7"+
    "\1\260\12\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\261\3\7\1\262\1\7\1\263\1\7\1\264"+
    "\1\265\3\7\1\266\6\7\1\267\2\7\16\0\1\7"+
    "\7\0\7\7\1\270\1\7\1\0\1\7\2\0\23\7"+
    "\1\271\3\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\17\7\1\272\7\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\13\7\1\273\13\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\256\26\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\5\7\1\274"+
    "\21\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\275\4\7\1\276\4\7\1\277\12\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\24\7\1\300"+
    "\2\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\137\22\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\7\1\137\25\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\301\1\7\1\302"+
    "\22\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\11\7\1\303\15\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\304\24\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\305\21\7\16\0"+
    "\1\7\7\0\6\7\1\306\2\7\1\0\1\7\2\0"+
    "\7\7\1\106\17\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\307\11\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\310\4\7\1\311"+
    "\17\7\16\0\1\7\7\0\5\7\1\312\1\7\1\313"+
    "\1\7\1\0\1\7\2\0\1\314\21\7\1\315\4\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\316\24\7\16\0\1\7\7\0\5\7\1\317\1\7"+
    "\1\320\1\7\1\0\1\7\2\0\27\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\4\7\1\321\22\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\322\4\7\1\323\17\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\5\7\1\324\21\7\16\0\1\7"+
    "\7\0\7\7\1\325\1\7\1\0\1\7\2\0\27\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\24\7"+
    "\1\326\2\7\16\0\1\7\7\0\7\7\1\327\1\7"+
    "\1\0\1\7\2\0\27\7\16\0\1\7\7\0\7\7"+
    "\1\330\1\7\1\0\1\7\2\0\27\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\10\7\1\331\16\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\4\7"+
    "\1\332\12\7\1\205\7\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\333\4\7\1\334\17\7"+
    "\16\0\1\7\7\0\5\7\1\137\3\7\1\0\1\7"+
    "\2\0\1\7\1\335\2\7\1\336\10\7\1\337\11\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\340\24\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\24\7\1\227\2\7\16\0\1\7\7\0\7\7"+
    "\1\341\1\7\1\0\1\7\2\0\4\7\1\342\3\7"+
    "\1\343\4\7\1\344\4\7\1\345\4\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\346\26\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\22\7\1\227"+
    "\4\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\12\7\1\347\14\7\16\0\1\7\7\0\6\7\1\350"+
    "\2\7\1\0\1\7\2\0\27\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\15\7\1\351\11\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\352\6\7"+
    "\1\353\17\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\4\7\1\354\22\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\16\7\1\132\10\7\16\0\1\7"+
    "\7\0\7\7\1\320\1\7\1\0\1\7\2\0\27\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\5\7"+
    "\1\355\21\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\356\12\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\14\7\1\357\12\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\2\7\1\360\11\7"+
    "\1\120\12\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\4\7\1\361\22\7\16\0\1\7\7\0\7\7"+
    "\1\362\1\7\1\0\1\7\2\0\5\7\1\363\21\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\364\24\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\256\12\7\16\0\1\7\1\206\1\207"+
    "\1\210\2\206\1\365\64\206\2\366\1\210\2\366\1\367"+
    "\71\366\1\367\64\366\2\0\1\212\101\0\2\214\3\0"+
    "\1\214\61\0\7\7\1\370\1\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\14\7\1\371\12\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\10\7\1\372\16\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\12\7\1\373\14\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\131"+
    "\12\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\7\7\1\256\16\7\1\374\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\375\26\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\132\21\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\132"+
    "\22\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\376\24\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\132\24\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\12\7\1\377\14\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\u0100\26\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\u0101\24\7\16\0\1\7\7\0\7\7\1\u0102\1\7"+
    "\1\0\1\7\2\0\27\7\16\0\1\7\7\0\7\7"+
    "\1\u0103\1\7\1\0\1\7\2\0\27\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\u0104\26\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\13\7\1\120"+
    "\13\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u0105\14\7\1\132\5\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\u0106\16\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u0107"+
    "\24\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u0108\24\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\132\10\7\1\u0109\11\7\16\0"+
    "\1\7\7\0\7\7\1\u010a\1\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\u010b\26\7\16\0\1\7\7\0\7\7\1\u010c\1\7"+
    "\1\0\1\7\2\0\27\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u010d\22\7\16\0\1\7"+
    "\7\0\5\7\1\u010e\3\7\1\0\1\7\2\0\27\7"+
    "\16\0\1\7\7\0\5\7\1\u010f\3\7\1\0\1\7"+
    "\2\0\27\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\17\7\1\u0110\7\7\16\0\1\7\7\0\2\7"+
    "\1\u0111\6\7\1\0\1\7\2\0\27\7\16\0\1\7"+
    "\7\0\5\7\1\132\3\7\1\0\1\7\2\0\27\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\26\7"+
    "\1\u0112\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\15\7\1\u0113\11\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\7\1\u0114\25\7\16\0\1\7\7\0"+
    "\6\7\1\u0115\2\7\1\0\1\7\2\0\27\7\16\0"+
    "\1\7\7\0\7\7\1\u0116\1\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\7\7\1\u0117\17\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u0118\24\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u0119\22\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u011a"+
    "\4\7\1\u011b\17\7\16\0\1\7\7\0\7\7\1\u011c"+
    "\1\7\1\0\1\7\2\0\27\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\u011d\6\7\1\u011e"+
    "\7\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\12\7\1\225\14\7\16\0\1\7\7\0\7\7\1\u011f"+
    "\1\7\1\0\1\7\2\0\27\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\u0120\16\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\10\7\1\u0121"+
    "\16\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\10\7\1\u0122\16\7\16\0\1\7\7\0\5\7\1\225"+
    "\3\7\1\0\1\7\2\0\22\7\1\u0123\4\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\225"+
    "\17\7\16\0\1\7\7\0\5\7\1\u0124\3\7\1\0"+
    "\1\7\2\0\27\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u0125\12\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\15\7\1\u0126\11\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\5\7\1\u0127"+
    "\7\7\1\u0128\11\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\u0129\11\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\132\5\7\1\u012a"+
    "\16\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\u0101\26\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\15\7\1\u012b\11\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u012c\10\7\1\u012d\6\7"+
    "\1\337\2\7\16\0\1\7\7\0\6\7\1\u012e\1\310"+
    "\1\7\1\0\1\7\2\0\27\7\16\0\1\7\7\0"+
    "\7\7\1\u012f\1\7\1\0\1\7\2\0\27\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\6\7\1\u0130"+
    "\13\7\1\u0131\4\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\10\7\1\u0132\16\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\u0133\16\7\16\0"+
    "\1\7\7\0\7\7\1\132\1\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\10\7\1\u0134\16\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u0135\24\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\22\7\1\132\4\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u0136"+
    "\24\7\16\0\1\7\7\0\7\7\1\u0137\1\7\1\0"+
    "\1\7\2\0\2\7\1\132\24\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\14\7\1\u0138\12\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\7\1\u0139"+
    "\25\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\21\7\1\132\5\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\21\7\1\353\5\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\23\7\1\u013a\3\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\330\26\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\23\7"+
    "\1\106\3\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\2\7\1\u013b\24\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\u013c\4\7\1\132\17\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\u011a\24\7\16\0\1\7\7\0\5\7\1\u013d\3\7"+
    "\1\0\1\7\2\0\27\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\u013e\24\7\16\0\1\7"+
    "\7\0\6\7\1\u013f\2\7\1\0\1\7\2\0\27\7"+
    "\16\0\1\7\7\0\6\7\1\u0140\2\7\1\0\1\7"+
    "\2\0\27\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\15\7\1\u0141\11\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\u0142\26\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u0143\22\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u0144"+
    "\24\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u0145\22\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\u0146\22\7\16\0\1\7\7\0"+
    "\5\7\1\225\3\7\1\0\1\7\2\0\27\7\16\0"+
    "\1\7\7\0\6\7\1\231\2\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\7\7\1\132\17\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\17\7\1\227\7\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u0147\22\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\u0148"+
    "\22\7\16\0\1\7\7\0\5\7\1\132\3\7\1\0"+
    "\1\7\2\0\5\7\1\227\21\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\12\7\1\u0149\14\7\16\0"+
    "\1\7\7\0\6\7\1\u014a\2\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\16\7\1\326\10\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\23\7\1\132\3\7\16\0\1\7\1\206"+
    "\1\207\1\210\1\206\1\u014b\1\365\64\206\4\366\1\212"+
    "\1\367\64\366\7\0\11\7\1\0\1\7\2\0\14\7"+
    "\1\u014c\12\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\7\7\1\u014d\17\7\16\0\1\7\7\0\7\7"+
    "\1\u014e\1\7\1\0\1\7\2\0\27\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\2\7\1\u014f\24\7"+
    "\16\0\1\7\7\0\6\7\1\227\2\7\1\0\1\7"+
    "\2\0\27\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\4\7\1\u0150\22\7\16\0\1\7\7\0\5\7"+
    "\1\354\3\7\1\0\1\7\2\0\27\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\7\7\1\u0151\17\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\13\7"+
    "\1\u0152\13\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\4\7\1\227\22\7\16\0\1\7\7\0\7\7"+
    "\1\u0153\1\7\1\0\1\7\2\0\27\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\u0154\26\7\16\0"+
    "\1\7\7\0\6\7\1\u0155\2\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\5\7\1\u0156\6\7\1\u0157\12\7\16\0\1\7\7\0"+
    "\6\7\1\u0101\2\7\1\0\1\7\2\0\27\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\5\7\1\u014d"+
    "\21\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\6\7\1\225\20\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\u012b\22\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\24\7\1\320\2\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\6\7\1\227"+
    "\20\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u0158\24\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\u0159\11\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\310\16\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\15\7\1\u015a"+
    "\11\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\17\7\1\137\7\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\10\7\1\u015b\16\7\16\0\1\7\7\0"+
    "\6\7\1\u015c\2\7\1\0\1\7\2\0\27\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u015d"+
    "\24\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u015e\22\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\256\21\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\14\7\1\u015f\12\7\16\0"+
    "\1\7\7\0\5\7\1\u0160\3\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\5\7\1\u0161\21\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\u0162\1\7\1\u0154\17\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\5\7\1\225"+
    "\21\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\21\7\1\227\5\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\13\7\1\u0163\13\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\7\7\1\u0164\17\7\16\0"+
    "\1\7\7\0\6\7\1\u0165\2\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\14\7\1\237\12\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\352\24\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\14\7\1\u0166\12\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u0167"+
    "\24\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\u0168\26\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\7\1\u0169\1\7\1\u016a\1\7\1\u016b\20\7"+
    "\1\u016c\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\7\7\1\256\17\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u0109\24\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\u016d\24\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\304"+
    "\17\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u016e\22\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\u016f\26\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\15\7\1\132\11\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\u0170\13\7\1\u0171"+
    "\12\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u0172\22\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\22\7\1\256\4\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\u0173\24\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\225"+
    "\12\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\21\7\1\u0174\5\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\302\22\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\12\7\1\132\14\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\u0175"+
    "\22\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\14\7\1\u0176\12\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\11\7\1\u0177\15\7\16\0\1\7\7\0"+
    "\5\7\1\u0178\3\7\1\0\1\7\2\0\27\7\16\0"+
    "\1\7\7\0\7\7\1\u0179\1\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\116\24\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\3\7\1\132\23\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\u017a\21\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\u017b"+
    "\22\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\10\7\1\225\16\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\137\11\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\u017c\21\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\u017d"+
    "\12\7\16\0\1\7\7\0\5\7\1\u017e\3\7\1\0"+
    "\1\7\2\0\27\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u017f\12\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\22\7\1\u0180\4\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\7\1\u0181"+
    "\25\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u0182\24\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\11\7\1\u0128\15\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\u0183\24\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\u0184"+
    "\12\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u012b\24\7\16\0\1\7\1\u014b\1\u0185\1\u0186"+
    "\67\u014b\7\0\11\7\1\0\1\7\2\0\11\7\1\132"+
    "\15\7\16\0\1\7\7\0\5\7\1\u015c\3\7\1\0"+
    "\1\7\2\0\27\7\16\0\1\7\7\0\6\7\1\306"+
    "\2\7\1\0\1\7\2\0\27\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\330\16\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u0114"+
    "\24\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\5\7\1\u0187\21\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\106\26\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\7\7\1\u010e\17\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\5\7\1\227\21\7"+
    "\16\0\1\7\7\0\7\7\1\225\1\7\1\0\1\7"+
    "\2\0\27\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\u0188\12\7\16\0\1\7\7\0\5\7"+
    "\1\u013e\3\7\1\0\1\7\2\0\27\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\15\7\1\u0189\11\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\14\7"+
    "\1\u018a\12\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\317\26\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\7\7\1\u018b\17\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\1\320\26\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\5\7\1\u018c\21\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\u018d\24\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\10\7\1\u018e\16\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\11\7\1\u018f\15\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\2\7\1\u0190\24\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\14\7"+
    "\1\u013e\12\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\u014f\26\7\16\0\1\7\7\0\6\7\1\352"+
    "\2\7\1\0\1\7\2\0\27\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\14\7\1\u0191\12\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\15\7\1\302"+
    "\11\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\7\1\u0192\25\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\174\21\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\1\u0193\26\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\22\7\1\320\4\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\7\7"+
    "\1\u0194\17\7\16\0\1\7\7\0\6\7\1\u0195\2\7"+
    "\1\0\1\7\2\0\27\7\16\0\1\7\7\0\5\7"+
    "\1\u0196\3\7\1\0\1\7\2\0\27\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\2\7\1\u0197\24\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\1\7"+
    "\1\227\25\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\u0198\12\7\16\0\1\7\7\0\5\7"+
    "\1\374\3\7\1\0\1\7\2\0\27\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\5\7\1\u0199\21\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\15\7"+
    "\1\u019a\11\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\6\7\1\u019b\20\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\u019c\24\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\17\7\1\256\7\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\1\u019d"+
    "\26\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\17\7\1\132\7\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\7\7\1\u014f\17\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\15\7\1\341\11\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\u019e"+
    "\12\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\14\7\1\u019f\12\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\7\7\1\u01a0\17\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u01a1\22\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\15\7\1\u01a2"+
    "\11\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\132\26\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\7\7\1\u01a3\17\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\22\7\1\u01a4\4\7\16\0\1\7"+
    "\7\0\5\7\1\u01a5\3\7\1\0\1\7\2\0\27\7"+
    "\16\0\1\7\2\0\1\u0186\76\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\u01a6\12\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\13\7\1\u01a7\13\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\u01a8\26\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\20\7\1\227"+
    "\6\7\16\0\1\7\7\0\5\7\1\u01a9\3\7\1\0"+
    "\1\7\2\0\27\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\u0128\21\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\3\7\1\225\23\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\u0133\26\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\14\7"+
    "\1\u01aa\12\7\16\0\1\7\7\0\5\7\1\u01ab\3\7"+
    "\1\0\1\7\2\0\27\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\7\1\u01ac\25\7\16\0\1\7"+
    "\7\0\6\7\1\u0154\2\7\1\0\1\7\2\0\27\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\4\7"+
    "\1\u01ad\22\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\23\7\1\u01ae\3\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\u0168\24\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\4\7\1\u01af\22\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\5\7"+
    "\1\u01b0\21\7\16\0\1\7\7\0\5\7\1\u01b1\3\7"+
    "\1\0\1\7\2\0\27\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\u01b2\26\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\227\16\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\u01b2"+
    "\17\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\3\7\1\u01b3\23\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\10\7\1\u01b4\16\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u01b5\22\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\u01b6"+
    "\22\7\16\0\1\7\7\0\5\7\1\u01a4\3\7\1\0"+
    "\1\7\2\0\27\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u01b7\12\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u01b8\22\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\23\7\1\256"+
    "\3\7\16\0\1\7\7\0\2\7\1\u01b9\6\7\1\0"+
    "\1\7\2\0\27\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\27\7\1\u01ba\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\20\7\1\u018e\6\7\16\0\1\7"+
    "\7\0\6\7\1\u01bb\2\7\1\0\1\7\2\0\27\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\22\7"+
    "\1\u01bc\4\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\24\7\1\337\2\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\17\7\1\u0192\7\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\10\7\1\u014a\16\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\10\7"+
    "\1\u01bd\16\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\u01be\26\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\u01bf\11\7\16\0\1\7\7\0"+
    "\2\7\1\u01c0\6\7\1\0\1\7\2\0\27\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\75"+
    "\24\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\15\7\1\u01c1\11\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\352\12\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u01c1\22\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\u0128"+
    "\22\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\16\7\1\u01c2\10\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\16\7\1\u01c3\10\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\u01c4\16\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\u01c5"+
    "\12\7\16\0\1\7\43\0\1\u01c6\35\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\u01b0\22\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\6\7\1\120\20\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\320"+
    "\17\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\15\7\1\u01c7\11\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\225\24\7\16\0\1\7\7\0"+
    "\6\7\1\u013f\2\7\1\0\1\7\2\0\1\7\1\310"+
    "\2\7\1\u01c8\22\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\u01c9\22\7\16\0\1\7\7\0"+
    "\2\7\1\u01ca\6\7\1\0\1\7\2\0\10\7\1\u01bd"+
    "\16\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\u01cb\26\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\15\7\1\u01cc\3\7\1\u01cd\5\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\10\7\1\u012b\16\7"+
    "\16\0\1\7\31\0\1\u01ce\47\0\11\7\1\0\1\7"+
    "\2\0\7\7\1\u01cf\17\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\14\7\1\u01d0\12\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\240\26\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\u01d1"+
    "\12\7\16\0\1\7\7\0\6\7\1\u01d2\2\7\1\0"+
    "\1\7\2\0\27\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u01d3\12\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\u01d4\24\7\16\0"+
    "\1\7\33\0\1\u01d5\45\0\6\7\1\u01d6\2\7\1\0"+
    "\1\7\2\0\27\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\22\7\1\u01d7\4\7\16\0\1\7\7\0"+
    "\5\7\1\u01d8\3\7\1\0\1\7\2\0\27\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\7\1\u0131"+
    "\25\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\22\7\1\u01d9\4\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\16\7\1\u01da\10\7\16\0\1\7\15\0"+
    "\1\u01db\63\0\11\7\1\0\1\7\2\0\5\7\1\u019a"+
    "\21\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u01dc\24\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\337\11\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\14\7\1\u01dd\12\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\6\7\1\u01de"+
    "\20\7\16\0\1\7\32\0\1\u01df\46\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\u01e0\11\7\16\0\1\7\7\0"+
    "\7\7\1\u01e1\1\7\1\0\1\7\2\0\27\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\12\7\1\u01e2"+
    "\14\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u01e3\22\7\16\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\u01e4\26\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\5\7\1\u01e5\21\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\77\26\7\16\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\5\7\1\u01e6"+
    "\21\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\u01e7\26\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\u01e8\12\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\15\7\1\u01e9\11\7\16\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\4\7\1\u01ea\22\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\u01eb\24\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\16\7\1\u01ec\10\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\7\1\u01ed\2\7\1\u01c9\22\7"+
    "\16\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\u01ee\24\7\16\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\4\7\1\u01ef\22\7\16\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\u01f0\26\7\16\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\14\7\1\u01f1\12\7\16\0"+
    "\1\7\7\0\7\7\1\u01f2\1\7\1\0\1\7\2\0"+
    "\27\7\16\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\15\7\1\u01eb\11\7\16\0\1\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[27840];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\1\11\46\1\1\0\13\1\2\11"+
    "\120\1\1\11\1\0\152\1\2\0\216\1\1\11\63\1"+
    "\1\0\13\1\1\0\7\1\1\0\6\1\1\0\5\1"+
    "\1\0\3\1\1\11\23\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[498];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String lexeme;
    public int lin;
    public int col;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2868) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return ERROR;
            } 
            // fall through
          case 13: break;
          case 2: 
            { /* skip */
            } 
            // fall through
          case 14: break;
          case 3: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Operador;
            } 
            // fall through
          case 15: break;
          case 4: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Identificador;
            } 
            // fall through
          case 16: break;
          case 5: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Bit;
            } 
            // fall through
          case 17: break;
          case 6: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Integer;
            } 
            // fall through
          case 18: break;
          case 7: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return VarcharError;
            } 
            // fall through
          case 19: break;
          case 8: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return ComentarioError;
            } 
            // fall through
          case 20: break;
          case 9: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Comentario;
            } 
            // fall through
          case 21: break;
          case 10: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Float;
            } 
            // fall through
          case 22: break;
          case 11: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Varchar;
            } 
            // fall through
          case 23: break;
          case 12: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Reservada;
            } 
            // fall through
          case 24: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
