/* The following code was generated by JFlex 1.7.0 */

package Code;
import static Code.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/Sthephan/Documents/GitHub/Proyect1Compi/Proyecto1C-MiniSQL/src/Code/Lexer.flex</tt>
 */
public class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\10\1\3\1\2\1\71\1\3\1\1\16\10\4\0\1\53\1\65"+
    "\1\0\1\64\1\7\1\55\1\67\1\23\1\60\1\61\1\5\1\22"+
    "\1\55\1\6\1\20\1\4\1\13\1\12\1\54\7\17\1\0\1\55"+
    "\1\65\1\66\1\65\1\0\1\55\1\24\1\37\1\34\1\25\1\26"+
    "\1\35\1\43\1\36\1\40\1\51\1\45\1\16\1\46\1\14\1\33"+
    "\1\32\1\52\1\31\1\41\1\30\1\15\1\50\1\47\1\27\1\42"+
    "\1\44\1\56\1\0\1\57\1\0\1\11\1\0\4\7\1\21\25\7"+
    "\1\62\1\70\1\63\1\0\6\10\1\72\32\10\2\0\4\7\4\0"+
    "\1\7\2\0\1\10\7\0\1\7\4\0\1\7\5\0\27\7\1\0"+
    "\37\7\1\0\u01ca\7\4\0\14\7\16\0\5\7\7\0\1\7\1\0"+
    "\1\7\21\0\160\10\5\7\1\0\2\7\2\0\4\7\10\0\1\7"+
    "\1\0\3\7\1\0\1\7\1\0\24\7\1\0\123\7\1\0\213\7"+
    "\1\0\5\10\2\0\236\7\11\0\46\7\2\0\1\7\7\0\47\7"+
    "\7\0\1\7\1\0\55\10\1\0\1\10\1\0\2\10\1\0\2\10"+
    "\1\0\1\10\10\0\33\7\5\0\3\7\15\0\5\10\6\0\1\7"+
    "\4\0\13\10\5\0\53\7\37\10\4\0\2\7\1\10\143\7\1\0"+
    "\1\7\10\10\1\0\6\10\2\7\2\10\1\0\4\10\2\7\12\10"+
    "\3\7\2\0\1\7\17\0\1\10\1\7\1\10\36\7\33\10\2\0"+
    "\131\7\13\10\1\7\16\0\12\10\41\7\11\10\2\7\4\0\1\7"+
    "\5\0\26\7\4\10\1\7\11\10\1\7\3\10\1\7\5\10\22\0"+
    "\31\7\3\10\104\0\1\7\1\0\13\7\67\0\33\10\1\0\4\10"+
    "\66\7\3\10\1\7\22\10\1\7\7\10\12\7\2\10\2\0\12\10"+
    "\1\0\7\7\1\0\7\7\1\0\3\10\1\0\10\7\2\0\2\7"+
    "\2\0\26\7\1\0\7\7\1\0\1\7\3\0\4\7\2\0\1\10"+
    "\1\7\7\10\2\0\2\10\2\0\3\10\1\7\10\0\1\10\4\0"+
    "\2\7\1\0\3\7\2\10\2\0\12\10\4\7\7\0\1\7\5\0"+
    "\3\10\1\0\6\7\4\0\2\7\2\0\26\7\1\0\7\7\1\0"+
    "\2\7\1\0\2\7\1\0\2\7\2\0\1\10\1\0\5\10\4\0"+
    "\2\10\2\0\3\10\3\0\1\10\7\0\4\7\1\0\1\7\7\0"+
    "\14\10\3\7\1\10\13\0\3\10\1\0\11\7\1\0\3\7\1\0"+
    "\26\7\1\0\7\7\1\0\2\7\1\0\5\7\2\0\1\10\1\7"+
    "\10\10\1\0\3\10\1\0\3\10\2\0\1\7\17\0\2\7\2\10"+
    "\2\0\12\10\1\0\1\7\17\0\3\10\1\0\10\7\2\0\2\7"+
    "\2\0\26\7\1\0\7\7\1\0\2\7\1\0\5\7\2\0\1\10"+
    "\1\7\7\10\2\0\2\10\2\0\3\10\10\0\2\10\4\0\2\7"+
    "\1\0\3\7\2\10\2\0\12\10\1\0\1\7\20\0\1\10\1\7"+
    "\1\0\6\7\3\0\3\7\1\0\4\7\3\0\2\7\1\0\1\7"+
    "\1\0\2\7\3\0\2\7\3\0\3\7\3\0\14\7\4\0\5\10"+
    "\3\0\3\10\1\0\4\10\2\0\1\7\6\0\1\10\16\0\12\10"+
    "\11\0\1\7\7\0\3\10\1\0\10\7\1\0\3\7\1\0\27\7"+
    "\1\0\12\7\1\0\5\7\3\0\1\7\7\10\1\0\3\10\1\0"+
    "\4\10\7\0\2\10\1\0\2\7\6\0\2\7\2\10\2\0\12\10"+
    "\22\0\2\10\1\0\10\7\1\0\3\7\1\0\27\7\1\0\12\7"+
    "\1\0\5\7\2\0\1\10\1\7\7\10\1\0\3\10\1\0\4\10"+
    "\7\0\2\10\7\0\1\7\1\0\2\7\2\10\2\0\12\10\1\0"+
    "\2\7\17\0\2\10\1\0\10\7\1\0\3\7\1\0\51\7\2\0"+
    "\1\7\7\10\1\0\3\10\1\0\4\10\1\7\10\0\1\10\10\0"+
    "\2\7\2\10\2\0\12\10\12\0\6\7\2\0\2\10\1\0\22\7"+
    "\3\0\30\7\1\0\11\7\1\0\1\7\2\0\7\7\3\0\1\10"+
    "\4\0\6\10\1\0\1\10\1\0\10\10\22\0\2\10\15\0\60\7"+
    "\1\10\2\7\7\10\4\0\10\7\10\10\1\0\12\10\47\0\2\7"+
    "\1\0\1\7\2\0\2\7\1\0\1\7\2\0\1\7\6\0\4\7"+
    "\1\0\7\7\1\0\3\7\1\0\1\7\1\0\1\7\2\0\2\7"+
    "\1\0\4\7\1\10\2\7\6\10\1\0\2\10\1\7\2\0\5\7"+
    "\1\0\1\7\1\0\6\10\2\0\12\10\2\0\4\7\40\0\1\7"+
    "\27\0\2\10\6\0\12\10\13\0\1\10\1\0\1\10\1\0\1\10"+
    "\4\0\2\10\10\7\1\0\44\7\4\0\24\10\1\0\2\10\5\7"+
    "\13\10\1\0\44\10\11\0\1\10\71\0\53\7\24\10\1\7\12\10"+
    "\6\0\6\7\4\10\4\7\3\10\1\7\3\10\2\7\7\10\3\7"+
    "\4\10\15\7\14\10\1\7\17\10\2\0\46\7\1\0\1\7\5\0"+
    "\1\7\2\0\53\7\1\0\u014d\7\1\0\4\7\2\0\7\7\1\0"+
    "\1\7\1\0\4\7\2\0\51\7\1\0\4\7\2\0\41\7\1\0"+
    "\4\7\2\0\7\7\1\0\1\7\1\0\4\7\2\0\17\7\1\0"+
    "\71\7\1\0\4\7\2\0\103\7\2\0\3\10\40\0\20\7\20\0"+
    "\125\7\14\0\u026c\7\2\0\21\7\1\0\32\7\5\0\113\7\3\0"+
    "\3\7\17\0\15\7\1\0\4\7\3\10\13\0\22\7\3\10\13\0"+
    "\22\7\2\10\14\0\15\7\1\0\3\7\1\0\2\10\14\0\64\7"+
    "\40\10\3\0\1\7\3\0\2\7\1\10\2\0\12\10\41\0\3\10"+
    "\2\0\12\10\6\0\130\7\10\0\51\7\1\10\1\7\5\0\106\7"+
    "\12\0\35\7\3\0\14\10\4\0\14\10\12\0\12\10\36\7\2\0"+
    "\5\7\13\0\54\7\4\0\21\10\7\7\2\10\6\0\12\10\46\0"+
    "\27\7\5\10\4\0\65\7\12\10\1\0\35\10\2\0\13\10\6\0"+
    "\12\10\15\0\1\7\130\0\5\10\57\7\21\10\7\7\4\0\12\10"+
    "\21\0\11\10\14\0\3\10\36\7\15\10\2\7\12\10\54\7\16\10"+
    "\14\0\44\7\24\10\10\0\12\10\3\0\3\7\12\10\44\7\122\0"+
    "\3\10\1\0\25\10\4\7\1\10\4\7\3\10\2\7\11\0\300\7"+
    "\47\10\25\0\4\10\u0116\7\2\0\6\7\2\0\46\7\2\0\6\7"+
    "\2\0\10\7\1\0\1\7\1\0\1\7\1\0\1\7\1\0\37\7"+
    "\2\0\65\7\1\0\7\7\1\0\1\7\3\0\3\7\1\0\7\7"+
    "\3\0\4\7\2\0\6\7\4\0\15\7\5\0\3\7\1\0\7\7"+
    "\16\0\5\10\30\0\1\71\1\71\5\10\20\0\2\7\23\0\1\7"+
    "\13\0\5\10\5\0\6\10\1\0\1\7\15\0\1\7\20\0\15\7"+
    "\3\0\33\7\25\0\15\10\4\0\1\10\3\0\14\10\21\0\1\7"+
    "\4\0\1\7\2\0\12\7\1\0\1\7\3\0\5\7\6\0\1\7"+
    "\1\0\1\7\1\0\1\7\1\0\4\7\1\0\13\7\2\0\4\7"+
    "\5\0\5\7\4\0\1\7\21\0\51\7\u0a77\0\57\7\1\0\57\7"+
    "\1\0\205\7\6\0\4\7\3\10\2\7\14\0\46\7\1\0\1\7"+
    "\5\0\1\7\2\0\70\7\7\0\1\7\17\0\1\10\27\7\11\0"+
    "\7\7\1\0\7\7\1\0\7\7\1\0\7\7\1\0\7\7\1\0"+
    "\7\7\1\0\7\7\1\0\7\7\1\0\40\10\57\0\1\7\u01d5\0"+
    "\3\7\31\0\11\7\6\10\1\0\5\7\2\0\5\7\4\0\126\7"+
    "\2\0\2\10\2\0\3\7\1\0\132\7\1\0\4\7\5\0\51\7"+
    "\3\0\136\7\21\0\33\7\65\0\20\7\u0200\0\u19b6\7\112\0\u51cd\7"+
    "\63\0\u048d\7\103\0\56\7\2\0\u010d\7\3\0\20\7\12\10\2\7"+
    "\24\0\57\7\1\10\4\0\12\10\1\0\31\7\7\0\1\10\120\7"+
    "\2\10\45\0\11\7\2\0\147\7\2\0\4\7\1\0\4\7\14\0"+
    "\13\7\115\0\12\7\1\10\3\7\1\10\4\7\1\10\27\7\5\10"+
    "\20\0\1\7\7\0\64\7\14\0\2\10\62\7\21\10\13\0\12\10"+
    "\6\0\22\10\6\7\3\0\1\7\4\0\12\10\34\7\10\10\2\0"+
    "\27\7\15\10\14\0\35\7\3\0\4\10\57\7\16\10\16\0\1\7"+
    "\12\10\46\0\51\7\16\10\11\0\3\7\1\10\10\7\2\10\2\0"+
    "\12\10\6\0\27\7\3\0\1\7\1\10\4\0\60\7\1\10\1\7"+
    "\3\10\2\7\2\10\5\7\2\10\1\7\1\10\1\7\30\0\3\7"+
    "\2\0\13\7\5\10\2\0\3\7\2\10\12\0\6\7\2\0\6\7"+
    "\2\0\6\7\11\0\7\7\1\0\7\7\221\0\43\7\10\10\1\0"+
    "\2\10\2\0\12\10\6\0\u2ba4\7\14\0\27\7\4\0\61\7\u2104\0"+
    "\u016e\7\2\0\152\7\46\0\7\7\14\0\5\7\5\0\1\7\1\10"+
    "\12\7\1\0\15\7\1\0\5\7\1\0\1\7\1\0\2\7\1\0"+
    "\2\7\1\0\154\7\41\0\u016b\7\22\0\100\7\2\0\66\7\50\0"+
    "\15\7\3\0\20\10\20\0\7\10\14\0\2\7\30\0\3\7\31\0"+
    "\1\7\6\0\5\7\1\0\207\7\2\0\1\10\4\0\1\7\13\0"+
    "\12\10\7\0\32\7\4\0\1\7\1\0\32\7\13\0\131\7\3\0"+
    "\6\7\2\0\6\7\2\0\6\7\2\0\3\7\3\0\2\7\3\0"+
    "\2\7\22\0\3\10\4\0\14\7\1\0\32\7\1\0\23\7\1\0"+
    "\2\7\1\0\17\7\2\0\16\7\42\0\173\7\105\0\65\7\210\0"+
    "\1\10\202\0\35\7\3\0\61\7\57\0\37\7\21\0\33\7\65\0"+
    "\36\7\2\0\44\7\4\0\10\7\1\0\5\7\52\0\236\7\2\0"+
    "\12\10\u0356\0\6\7\2\0\1\7\1\0\54\7\1\0\2\7\3\0"+
    "\1\7\2\0\27\7\252\0\26\7\12\0\32\7\106\0\70\7\6\0"+
    "\2\7\100\0\1\7\3\10\1\0\2\10\5\0\4\10\4\7\1\0"+
    "\3\7\1\0\33\7\4\0\3\10\4\0\1\10\40\0\35\7\203\0"+
    "\66\7\12\0\26\7\12\0\23\7\215\0\111\7\u03b7\0\3\10\65\7"+
    "\17\10\37\0\12\10\20\0\3\10\55\7\13\10\2\0\1\10\22\0"+
    "\31\7\7\0\12\10\6\0\3\10\44\7\16\10\1\0\12\10\100\0"+
    "\3\10\60\7\16\10\4\7\13\0\12\10\u04a6\0\53\7\15\10\10\0"+
    "\12\10\u0936\0\u036f\7\221\0\143\7\u0b9d\0\u042f\7\u33d1\0\u0239\7\u04c7\0"+
    "\105\7\13\0\1\7\56\10\20\0\4\10\15\7\u4060\0\2\7\u2163\0"+
    "\5\10\3\0\26\10\2\0\7\10\36\0\4\10\224\0\3\10\u01bb\0"+
    "\125\7\1\0\107\7\1\0\2\7\2\0\1\7\2\0\2\7\2\0"+
    "\4\7\1\0\14\7\1\0\1\7\1\0\7\7\1\0\101\7\1\0"+
    "\4\7\2\0\10\7\1\0\7\7\1\0\34\7\1\0\4\7\1\0"+
    "\5\7\1\0\1\7\3\0\7\7\1\0\u0154\7\2\0\31\7\1\0"+
    "\31\7\1\0\37\7\1\0\31\7\1\0\37\7\1\0\31\7\1\0"+
    "\37\7\1\0\31\7\1\0\37\7\1\0\31\7\1\0\10\7\2\0"+
    "\62\10\u1600\0\4\7\1\0\33\7\1\0\2\7\1\0\1\7\2\0"+
    "\1\7\1\0\12\7\1\0\4\7\1\0\1\7\1\0\1\7\6\0"+
    "\1\7\4\0\1\7\1\0\1\7\1\0\1\7\1\0\3\7\1\0"+
    "\2\7\1\0\1\7\2\0\1\7\1\0\1\7\1\0\1\7\1\0"+
    "\1\7\1\0\1\7\1\0\2\7\1\0\1\7\2\0\4\7\1\0"+
    "\7\7\1\0\4\7\1\0\4\7\1\0\1\7\1\0\12\7\1\0"+
    "\21\7\5\0\3\7\1\0\5\7\1\0\21\7\u1144\0\ua6d7\7\51\0"+
    "\u1035\7\13\0\336\7\u3fe2\0\u021e\7\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05ee\0"+
    "\1\10\36\0\140\10\200\0\360\10\uffff\0\uffff\0\ufe12\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\3\3\1\4\2\5\3\4\1\6"+
    "\1\7\23\4\4\3\1\10\2\1\2\11\1\12\1\0"+
    "\14\4\2\7\1\13\4\4\1\14\17\4\1\14\15\4"+
    "\1\14\1\4\1\14\1\4\1\14\24\4\1\14\14\4"+
    "\1\14\15\4\1\10\5\11\1\0\13\4\1\14\57\4"+
    "\1\14\22\4\1\14\11\4\1\15\2\4\1\16\6\4"+
    "\1\14\23\4\1\11\3\0\1\12\1\14\13\4\1\17"+
    "\6\4\1\14\6\4\1\20\1\4\1\14\2\4\1\17"+
    "\2\4\1\21\1\14\15\4\1\14\1\4\1\14\15\4"+
    "\1\20\36\4\1\14\21\4\1\14\33\4\1\14\10\4"+
    "\1\22\46\4\1\16\24\4\1\14\13\4\1\0\1\17"+
    "\6\4\2\14\4\4\1\0\11\4\1\0\10\4\1\0"+
    "\7\4\1\0\1\4\1\14\2\4\1\14\24\4";

  private static int [] zzUnpackAction() {
    int [] result = new int[565];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\73\0\166\0\261\0\73\0\354\0\u0127\0\u0162"+
    "\0\u019d\0\u01d8\0\u0213\0\u024e\0\u0162\0\u0289\0\u02c4\0\u02ff"+
    "\0\u033a\0\u0375\0\u03b0\0\u03eb\0\u0426\0\u0461\0\u049c\0\u04d7"+
    "\0\u0512\0\u054d\0\u0588\0\u05c3\0\u05fe\0\u0639\0\u0674\0\u06af"+
    "\0\u06ea\0\u0725\0\u0760\0\u079b\0\u07d6\0\u0811\0\u084c\0\u0887"+
    "\0\u08c2\0\u08fd\0\u0938\0\u019d\0\u0973\0\u09ae\0\u09e9\0\u0a24"+
    "\0\u0a5f\0\u0a9a\0\u0ad5\0\u0b10\0\u0b4b\0\u0b86\0\u0bc1\0\u0bfc"+
    "\0\u0c37\0\73\0\73\0\u0c72\0\u0cad\0\u0ce8\0\u0d23\0\u0d5e"+
    "\0\u0d99\0\u0dd4\0\u0e0f\0\u0e4a\0\u0e85\0\u0ec0\0\u0efb\0\u0f36"+
    "\0\u0f71\0\u0fac\0\u0fe7\0\u1022\0\u105d\0\u1098\0\u10d3\0\u110e"+
    "\0\u1149\0\u1184\0\u11bf\0\u11fa\0\u1235\0\u1270\0\u12ab\0\u12e6"+
    "\0\u1321\0\u135c\0\u1397\0\u13d2\0\u140d\0\u0127\0\u1448\0\u1483"+
    "\0\u14be\0\u14f9\0\u1534\0\u156f\0\u15aa\0\u15e5\0\u1620\0\u165b"+
    "\0\u1696\0\u16d1\0\u170c\0\u1747\0\u1782\0\u17bd\0\u17f8\0\u1833"+
    "\0\u186e\0\u18a9\0\u18e4\0\u191f\0\u195a\0\u1995\0\u19d0\0\u1a0b"+
    "\0\u1a46\0\u1a81\0\u1abc\0\u1af7\0\u1b32\0\u1b6d\0\u1ba8\0\u1be3"+
    "\0\u1c1e\0\u1c59\0\u1c94\0\u1ccf\0\u1d0a\0\u1d45\0\u1d80\0\u1dbb"+
    "\0\u1df6\0\u1e31\0\u1e6c\0\u1ea7\0\u1ee2\0\u1f1d\0\u1f58\0\u1f93"+
    "\0\u1fce\0\73\0\u2009\0\u2044\0\u207f\0\u20ba\0\73\0\u20f5"+
    "\0\u2130\0\u216b\0\u21a6\0\u21e1\0\u221c\0\u2257\0\u2292\0\u22cd"+
    "\0\u2308\0\u2343\0\u237e\0\u23b9\0\u23f4\0\u242f\0\u246a\0\u24a5"+
    "\0\u110e\0\u24e0\0\u251b\0\u2556\0\u2591\0\u25cc\0\u0d5e\0\u2607"+
    "\0\u2642\0\u267d\0\u26b8\0\u26f3\0\u272e\0\u2769\0\u27a4\0\u27df"+
    "\0\u281a\0\u2855\0\u2890\0\u28cb\0\u2906\0\u2941\0\u297c\0\u29b7"+
    "\0\u29f2\0\u2a2d\0\u2a68\0\u2aa3\0\u2ade\0\u2b19\0\u2b54\0\u2b8f"+
    "\0\u2bca\0\u2c05\0\u2c40\0\u2c7b\0\u2cb6\0\u2cf1\0\u2d2c\0\u2d67"+
    "\0\u2da2\0\u2ddd\0\u2e18\0\u2e53\0\u23b9\0\u2e8e\0\u2ec9\0\u2f04"+
    "\0\u2f3f\0\u2f7a\0\u2fb5\0\u2ff0\0\u302b\0\u3066\0\u30a1\0\u30dc"+
    "\0\u3117\0\u3152\0\u318d\0\u31c8\0\u3203\0\u323e\0\u3279\0\u32b4"+
    "\0\u32ef\0\u332a\0\u3365\0\u33a0\0\u33db\0\u3416\0\u3451\0\u348c"+
    "\0\u0127\0\u34c7\0\u3502\0\u353d\0\u3578\0\u35b3\0\u35ee\0\u3629"+
    "\0\u3664\0\u369f\0\u36da\0\u3715\0\u3750\0\u378b\0\u37c6\0\u3801"+
    "\0\u383c\0\u3877\0\u38b2\0\u38ed\0\u3928\0\u3963\0\u399e\0\u39d9"+
    "\0\u3a14\0\u3a4f\0\u3a8a\0\u3ac5\0\u3b00\0\u3b3b\0\u3b76\0\u207f"+
    "\0\u3bb1\0\u3bec\0\u3bec\0\u3c27\0\u3c62\0\u3c9d\0\u3cd8\0\u3d13"+
    "\0\u3d4e\0\u3d89\0\u3dc4\0\u3dff\0\u3e3a\0\u3e75\0\u3eb0\0\u3eeb"+
    "\0\u3f26\0\u3f61\0\u3f9c\0\u3fd7\0\u4012\0\u404d\0\u4088\0\u40c3"+
    "\0\u40fe\0\u4139\0\u4174\0\u41af\0\u41ea\0\u4225\0\u4260\0\u429b"+
    "\0\u42d6\0\u4311\0\u0127\0\u434c\0\u4387\0\u0127\0\u43c2\0\u43fd"+
    "\0\u4438\0\u4473\0\u44ae\0\u44e9\0\u4524\0\u455f\0\u459a\0\u45d5"+
    "\0\u4610\0\u464b\0\u4686\0\u46c1\0\u46fc\0\u4737\0\u4772\0\u47ad"+
    "\0\u47e8\0\u4823\0\u485e\0\u4899\0\u48d4\0\u490f\0\u494a\0\u4985"+
    "\0\u49c0\0\u49fb\0\u4088\0\u4a36\0\u0127\0\u4a71\0\u4aac\0\u4ae7"+
    "\0\u4b22\0\u4b5d\0\u4b98\0\u4bd3\0\u4c0e\0\u4c49\0\u4c84\0\u4cbf"+
    "\0\u4cfa\0\u4d35\0\u4d70\0\u4dab\0\u4de6\0\u4e21\0\u4e5c\0\u4e97"+
    "\0\u4ed2\0\u4f0d\0\u4f48\0\u4f83\0\u4fbe\0\u4ff9\0\u5034\0\u506f"+
    "\0\u50aa\0\u50e5\0\u5120\0\u515b\0\u5196\0\u51d1\0\u520c\0\u5247"+
    "\0\u5282\0\u52bd\0\u52f8\0\u5333\0\u536e\0\u53a9\0\u53e4\0\u541f"+
    "\0\u545a\0\u5495\0\u54d0\0\u550b\0\u5546\0\u5581\0\u55bc\0\u55f7"+
    "\0\u5632\0\u566d\0\u56a8\0\u56e3\0\u571e\0\u5759\0\u5794\0\u57cf"+
    "\0\u580a\0\u5845\0\u5880\0\u58bb\0\u58f6\0\u5931\0\u596c\0\u59a7"+
    "\0\u59e2\0\u5a1d\0\u5a58\0\u5a93\0\u5ace\0\u5b09\0\u5b44\0\u5b7f"+
    "\0\u5bba\0\u5bf5\0\u5c30\0\u5c6b\0\u5ca6\0\u5ce1\0\u5d1c\0\u5d57"+
    "\0\u5d92\0\u5dcd\0\u0127\0\u5e08\0\u5e43\0\u5e7e\0\u5eb9\0\u5ef4"+
    "\0\u5f2f\0\u5f6a\0\u5fa5\0\u5fe0\0\u43c2\0\u601b\0\u6056\0\u6091"+
    "\0\u60cc\0\u6107\0\u6142\0\u617d\0\u61b8\0\u61f3\0\u622e\0\u6269"+
    "\0\u62a4\0\u62df\0\u631a\0\u6355\0\u6390\0\u63cb\0\u6406\0\u6441"+
    "\0\u647c\0\u64b7\0\u64f2\0\u652d\0\u6568\0\u65a3\0\u65de\0\u6619"+
    "\0\u6654\0\u0127\0\u668f\0\u66ca\0\u6705\0\u6740\0\u677b\0\u67b6"+
    "\0\u67f1\0\u682c\0\u6867\0\u68a2\0\u68dd\0\u6918\0\u6953\0\u698e"+
    "\0\u69c9\0\u6a04\0\u6a3f\0\u6a7a\0\u6ab5\0\u6af0\0\u6b2b\0\u6b66"+
    "\0\u6ba1\0\u6bdc\0\u6c17\0\u6c52\0\u6c8d\0\u6cc8\0\u6d03\0\u6d3e"+
    "\0\u36da\0\u6d79\0\u6db4\0\u6def\0\u6e2a\0\u6e65\0\u6ea0\0\u6edb"+
    "\0\u6f16\0\u6f51\0\u6f8c\0\u6fc7\0\u7002\0\u703d\0\u7078\0\u70b3"+
    "\0\u70ee\0\u7129\0\u7164\0\u719f\0\u71da\0\u7215\0\u7250\0\u728b"+
    "\0\u72c6\0\u7301\0\u733c\0\u7377\0\u73b2\0\u73ed\0\u7428\0\u7463"+
    "\0\u749e\0\u74d9\0\u7514\0\u754f\0\u758a\0\u75c5\0\u7600\0\u763b"+
    "\0\u7676\0\u76b1\0\u76ec\0\u7727\0\u7762\0\u779d\0\u77d8\0\u7813"+
    "\0\73\0\u784e\0\u7889\0\u78c4\0\u78ff\0\u793a\0\u7975\0\u79b0"+
    "\0\u79eb\0\u7a26\0\u7a61\0\u7a9c\0\u7ad7\0\u6f8c\0\u7b12\0\u7b4d"+
    "\0\u7b88\0\u7bc3\0\u7bfe\0\u7c39\0\u7c74";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[565];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\3\3\1\4\1\5\1\6\1\7\1\2\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\1\15\1\5\1\7"+
    "\1\5\1\16\1\17\1\20\1\21\1\7\1\22\1\23"+
    "\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33"+
    "\1\7\1\34\1\7\1\35\1\36\1\37\1\40\1\41"+
    "\1\7\1\3\1\15\1\5\1\42\1\5\1\43\1\5"+
    "\1\44\1\5\1\45\2\46\1\47\1\50\76\0\3\3"+
    "\47\0\1\3\24\0\1\51\73\0\1\52\73\0\11\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\15\0\1\7"+
    "\12\0\2\15\3\0\1\15\1\53\33\0\1\15\30\0"+
    "\2\54\3\0\1\54\1\53\33\0\1\54\25\0\6\7"+
    "\1\55\2\7\1\0\1\7\2\0\1\56\3\7\1\57"+
    "\2\7\1\60\1\61\13\7\1\62\2\7\1\0\1\7"+
    "\15\0\1\7\7\0\5\7\1\63\3\7\1\0\1\7"+
    "\2\0\6\7\1\64\6\7\1\65\11\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\66\4\7\1\67\4\7\1\70\12\7\1\0\1\7"+
    "\15\0\1\7\1\16\1\71\1\72\20\16\1\73\47\16"+
    "\7\0\5\7\1\74\1\75\1\76\1\7\1\0\1\7"+
    "\2\0\1\7\1\77\13\7\1\100\6\7\1\101\2\7"+
    "\1\0\1\7\15\0\1\7\7\0\6\7\1\102\2\7"+
    "\1\0\1\7\2\0\1\103\1\7\1\104\2\7\1\105"+
    "\1\7\1\106\3\7\1\107\1\110\12\7\1\0\1\7"+
    "\15\0\1\7\7\0\5\7\1\77\1\7\1\111\1\7"+
    "\1\0\1\7\2\0\3\7\1\112\1\7\1\113\7\7"+
    "\1\114\11\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\115\1\7\1\116\2\7\1\117"+
    "\1\7\1\120\2\7\1\121\1\7\1\122\1\123\11\7"+
    "\1\0\1\7\15\0\1\7\7\0\6\7\1\124\2\7"+
    "\1\0\1\7\2\0\1\125\1\7\1\126\4\7\1\127"+
    "\4\7\1\130\12\7\1\0\1\7\15\0\1\7\7\0"+
    "\6\7\1\131\1\132\1\7\1\0\1\7\2\0\2\7"+
    "\1\133\2\7\1\134\6\7\1\135\12\7\1\0\1\7"+
    "\15\0\1\7\7\0\5\7\1\136\1\137\2\7\1\0"+
    "\1\7\2\0\5\7\1\140\1\141\2\7\1\142\12\7"+
    "\1\143\2\7\1\0\1\7\15\0\1\7\7\0\6\7"+
    "\1\144\1\145\1\7\1\0\1\7\2\0\1\146\4\7"+
    "\1\147\1\7\1\150\2\7\1\151\14\7\1\0\1\7"+
    "\15\0\1\7\7\0\6\7\1\152\1\153\1\7\1\0"+
    "\1\7\2\0\2\7\1\154\2\7\1\155\1\7\1\156"+
    "\4\7\1\157\12\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\1\160\6\7\1\161\17\7"+
    "\1\0\1\7\15\0\1\7\7\0\6\7\1\162\2\7"+
    "\1\0\1\7\2\0\1\163\1\7\1\164\2\7\1\165"+
    "\6\7\1\166\1\7\1\136\10\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\167\3\7\1\0\1\7\2\0"+
    "\1\7\1\170\7\7\1\136\3\7\1\136\4\7\1\171"+
    "\4\7\1\0\1\7\15\0\1\7\7\0\6\7\1\172"+
    "\2\7\1\0\1\7\2\0\1\173\1\7\1\174\1\7"+
    "\1\175\2\7\1\176\1\177\1\7\1\200\3\7\1\201"+
    "\3\7\1\202\4\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\203\1\7\1\204"+
    "\17\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\205\11\7\1\206\12\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\207\1\7\1\210\4\7\1\211\4\7\1\212\12\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\213\4\7\1\214\4\7\1\215\1\7\1\216"+
    "\12\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\217\13\7\1\220\12\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\7\7"+
    "\1\221\17\7\1\0\1\7\15\0\1\7\57\0\1\5"+
    "\74\0\1\5\74\0\1\5\73\0\1\5\74\0\1\222"+
    "\73\0\1\222\73\0\1\222\2\0\1\223\1\224\1\225"+
    "\70\223\1\52\1\226\1\227\70\52\12\0\2\53\3\0"+
    "\1\53\1\0\1\230\4\0\1\230\25\0\1\53\25\0"+
    "\7\7\1\231\1\7\1\0\1\7\2\0\22\7\1\232"+
    "\4\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\233\22\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\234"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\5\7\1\235"+
    "\3\7\1\0\1\7\2\0\4\7\1\136\3\7\1\236"+
    "\16\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\12\7\1\237\14\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\240\26\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\6\7\1\241\5\7\1\242\12\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\7"+
    "\1\243\25\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\244\24\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\11\7"+
    "\1\245\15\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\77\26\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\246\3\7\1\0\1\7\2\0"+
    "\21\7\1\247\5\7\1\0\1\7\15\0\1\7\2\0"+
    "\1\72\77\0\11\7\1\0\1\7\2\0\1\7\1\136"+
    "\14\7\1\136\10\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\250\22\7\1\0"+
    "\1\7\15\0\1\7\7\0\7\7\1\136\1\7\1\0"+
    "\1\7\2\0\4\7\1\143\22\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\7\1\136"+
    "\25\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\10\7\1\136\16\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\17\7\1\136"+
    "\7\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\22\7\1\251\4\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\252"+
    "\22\7\1\0\1\7\15\0\1\7\7\0\5\7\1\205"+
    "\1\7\1\253\1\7\1\0\1\7\2\0\1\254\7\7"+
    "\1\255\1\256\3\7\1\257\11\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\251"+
    "\17\7\1\0\1\7\15\0\1\7\7\0\6\7\1\260"+
    "\2\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\10\7\1\257"+
    "\16\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\261\11\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\15\7\1\247"+
    "\11\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\262\1\7\1\263\3\7\1\264"+
    "\3\7\1\265\12\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\266\21\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\10\7\1\267\16\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\13\7\1\270\13\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\3\7\1\271\23\7\1\0\1\7\15\0\1\7\7\0"+
    "\6\7\1\272\2\7\1\0\1\7\2\0\1\273\13\7"+
    "\1\274\1\7\1\275\10\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\6\7\1\136\20\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\2\7\1\212\24\7\1\0\1\7\15\0\1\7"+
    "\7\0\5\7\1\276\3\7\1\0\1\7\2\0\22\7"+
    "\1\277\4\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\300\24\7\1\0\1\7"+
    "\15\0\1\7\7\0\7\7\1\247\1\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\14\7\1\301\12\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\302"+
    "\3\7\1\303\1\7\1\304\1\7\1\305\1\306\3\7"+
    "\1\307\6\7\1\310\2\7\1\0\1\7\15\0\1\7"+
    "\7\0\7\7\1\311\1\7\1\0\1\7\2\0\23\7"+
    "\1\312\3\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\17\7\1\313\7\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\13\7"+
    "\1\314\13\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\212\26\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\5\7\1\315"+
    "\21\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\316\4\7\1\317\4\7\1\320"+
    "\12\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\24\7\1\321\2\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\143"+
    "\22\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\7\1\143\25\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\322"+
    "\1\7\1\323\22\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\11\7\1\324\15\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\325\24\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\326\21\7\1\0"+
    "\1\7\15\0\1\7\7\0\6\7\1\327\2\7\1\0"+
    "\1\7\2\0\7\7\1\111\17\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\15\7\1\330"+
    "\11\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\331\4\7\1\332\17\7\1\0"+
    "\1\7\15\0\1\7\7\0\5\7\1\333\1\334\1\335"+
    "\1\7\1\0\1\7\2\0\1\336\21\7\1\337\4\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\340\1\7\1\341\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\342\1\7\1\343\1\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\7\7\1\344\17\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\345\22\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\346\4\7\1\172"+
    "\17\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\347\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\7\7\1\350\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\24\7\1\351\2\7\1\0\1\7\15\0"+
    "\1\7\7\0\7\7\1\352\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\7\7\1\353"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\10\7\1\354"+
    "\16\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\355\12\7\1\221\7\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\356\4\7\1\357\17\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\360\3\7\1\0\1\7\2\0"+
    "\4\7\1\361\12\7\1\362\7\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\143\3\7\1\0\1\7\2\0"+
    "\1\7\1\363\2\7\1\364\3\7\1\365\4\7\1\366"+
    "\11\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\367\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\370\21\7"+
    "\1\371\4\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\22\7\1\136\4\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\24\7"+
    "\1\247\2\7\1\0\1\7\15\0\1\7\7\0\7\7"+
    "\1\372\1\7\1\0\1\7\2\0\4\7\1\373\3\7"+
    "\1\374\4\7\1\375\4\7\1\376\4\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\377"+
    "\26\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\22\7\1\247\4\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\12\7\1\u0100"+
    "\14\7\1\0\1\7\15\0\1\7\7\0\6\7\1\u0101"+
    "\2\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\15\7\1\u0102"+
    "\11\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\u0103\26\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\334\6\7\1\u0104"+
    "\17\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\u0105\22\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\16\7\1\136"+
    "\10\7\1\0\1\7\15\0\1\7\7\0\7\7\1\343"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\3\7\1\136"+
    "\23\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\u0106\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\u0107\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\5\7\1\136"+
    "\3\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\u0108"+
    "\12\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u0109\12\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u010a"+
    "\11\7\1\124\12\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u010b\22\7\1\0"+
    "\1\7\15\0\1\7\7\0\7\7\1\u010c\1\7\1\0"+
    "\1\7\2\0\5\7\1\u010d\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u010e"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\212\12\7\1\0\1\7\15\0"+
    "\1\7\1\223\1\224\1\225\2\223\1\u010f\65\223\2\u0110"+
    "\1\225\2\u0110\1\u0111\72\u0110\1\u0111\65\u0110\2\0\1\227"+
    "\76\0\1\u0112\3\0\2\u0113\3\0\1\u0113\2\0\1\u0112"+
    "\31\0\1\u0113\25\0\7\7\1\u0114\1\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\u0115\24\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\14\7"+
    "\1\u0116\12\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\3\7\1\u0117\23\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\10\7"+
    "\1\u0118\16\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\12\7\1\u0119\14\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\340"+
    "\26\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\u011a\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\135"+
    "\12\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\7\7\1\212\16\7\1\u011b\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\u011c"+
    "\26\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\136\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\136"+
    "\22\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u011d\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\136"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\12\7\1\u011e\14\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\u011f\1\7"+
    "\1\u0120\24\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\u0121\24\7\1\0\1\7"+
    "\15\0\1\7\7\0\7\7\1\u0122\1\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\15\0\1\7\7\0\7\7"+
    "\1\u0123\1\7\1\0\1\7\2\0\14\7\1\u0124\12\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\u0125\26\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\13\7\1\124\13\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u0126\14\7\1\136\5\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\10\7\1\u0127"+
    "\16\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u0128\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u0129"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\136\10\7\1\u012a\11\7\1\0"+
    "\1\7\15\0\1\7\7\0\7\7\1\u012b\1\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\1\u012c\26\7\1\0\1\7"+
    "\15\0\1\7\7\0\7\7\1\u012d\1\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u012e\22\7\1\0\1\7"+
    "\15\0\1\7\7\0\5\7\1\u012f\3\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\15\0\1\7\7\0\5\7"+
    "\1\u0130\3\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\17\7"+
    "\1\u0131\7\7\1\0\1\7\15\0\1\7\7\0\2\7"+
    "\1\u0132\6\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\16\7"+
    "\1\362\10\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\u0133\24\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\26\7"+
    "\1\u0134\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\u0135\11\7\1\0\1\7\15\0"+
    "\1\7\7\0\7\7\1\u0136\1\7\1\0\1\7\2\0"+
    "\1\7\1\u0137\25\7\1\0\1\7\15\0\1\7\7\0"+
    "\6\7\1\u0138\2\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\15\0\1\7\7\0\7\7\1\u0139\1\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\7\7\1\u013a\17\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u013b\24\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u013c\22\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u013d\4\7\1\u013e\17\7\1\0\1\7\15\0"+
    "\1\7\7\0\7\7\1\u013f\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\10\7\1\u0140\6\7\1\u0141\7\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\12\7\1\245\14\7\1\0\1\7\15\0\1\7\7\0"+
    "\7\7\1\u0142\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\10\7\1\u0143\16\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\u0144\16\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\10\7\1\u0145\16\7\1\0\1\7\15\0\1\7\7\0"+
    "\5\7\1\245\3\7\1\0\1\7\2\0\22\7\1\u0146"+
    "\4\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\7\7\1\245\17\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\u0147\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u0148\12\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\15\7\1\u0149"+
    "\11\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\u014a\7\7\1\u014b\11\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\15\7\1\u014c\11\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\136\5\7\1\u014d"+
    "\16\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\u0121\26\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\15\7\1\u014e\11\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\4\7\1\u014f\10\7\1\u0150\6\7\1\366\2\7"+
    "\1\0\1\7\15\0\1\7\7\0\5\7\1\245\3\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\15\0\1\7"+
    "\7\0\6\7\1\u0151\1\331\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\7\7\1\u0152"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\6\7\1\u0153"+
    "\13\7\1\u0154\4\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\u0155\21\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\10\7\1\u0156\16\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\u0157\16\7\1\0"+
    "\1\7\15\0\1\7\7\0\7\7\1\136\1\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\1\u0158\26\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\10\7"+
    "\1\u0159\16\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\u015a\24\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\u015b\24\7\1\0\1\7\15\0\1\7\7\0\7\7"+
    "\1\u015c\1\7\1\0\1\7\2\0\2\7\1\136\24\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\u015d\12\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\7\1\u015e\25\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\21\7\1\136\5\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\21\7\1\u0104\5\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\23\7\1\u015f\3\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\353\26\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\23\7\1\111\3\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\1\u0160\26\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\14\7"+
    "\1\u0161\12\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\207\24\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\u0162\4\7\1\136\17\7\1\0\1\7\15\0\1\7"+
    "\7\0\7\7\1\u0163\1\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\2\7\1\u013d\24\7\1\0\1\7\15\0\1\7"+
    "\7\0\5\7\1\u0164\3\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\17\7\1\u0165\7\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\2\7\1\u0166\24\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\2\7\1\u0167\24\7\1\0\1\7\15\0\1\7"+
    "\7\0\6\7\1\u0168\2\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\15\0\1\7\7\0\6\7\1\u0169\2\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\15\7\1\u016a\11\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\u016b\26\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u016c\22\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u016d\24\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u016e\22\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u016f\22\7\1\0\1\7\15\0\1\7\7\0"+
    "\7\7\1\u0170\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\15\0\1\7\7\0\6\7\1\251\2\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\7\7\1\136\17\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\17\7\1\247\7\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\u0171\24\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u0172\22\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u0173\22\7\1\0"+
    "\1\7\15\0\1\7\7\0\5\7\1\136\3\7\1\0"+
    "\1\7\2\0\5\7\1\247\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\12\7\1\u0174"+
    "\14\7\1\0\1\7\15\0\1\7\7\0\6\7\1\u0175"+
    "\2\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\10\7\1\61"+
    "\2\7\1\u0176\2\7\1\351\10\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\23\7\1\136"+
    "\3\7\1\0\1\7\15\0\1\7\1\223\1\224\1\225"+
    "\1\223\1\52\1\u010f\65\223\4\u0110\1\227\1\u0111\65\u0110"+
    "\12\0\2\u0113\3\0\1\u0113\34\0\1\u0113\25\0\11\7"+
    "\1\0\1\7\2\0\14\7\1\u0177\12\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\5\7"+
    "\1\u0178\21\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\7\7\1\u0179\17\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\4\7"+
    "\1\u0155\22\7\1\0\1\7\15\0\1\7\7\0\7\7"+
    "\1\u017a\1\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\u017b\24\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\10\7\1\61\16\7\1\0\1\7"+
    "\15\0\1\7\7\0\6\7\1\247\2\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u017c\22\7\1\0\1\7"+
    "\15\0\1\7\7\0\5\7\1\u0105\3\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\7\7\1\u017d\17\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\13\7"+
    "\1\u017e\13\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u017f\22\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\4\7"+
    "\1\247\22\7\1\0\1\7\15\0\1\7\7\0\7\7"+
    "\1\u0180\1\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\u0181"+
    "\26\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\22\7\1\u0182\4\7\1\0\1\7\15\0"+
    "\1\7\7\0\6\7\1\u0183\2\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\u0184\6\7\1\u0185\12\7\1\0"+
    "\1\7\15\0\1\7\7\0\6\7\1\u0121\2\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\u0179\21\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\6\7\1\245\20\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u014e\22\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\24\7\1\343\2\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\6\7\1\247\20\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u0186\24\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\15\7\1\u0187\11\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\10\7\1\331\16\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\15\7\1\u0188\11\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\17\7\1\143\7\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\u0189\16\7\1\0"+
    "\1\7\15\0\1\7\7\0\6\7\1\u018a\2\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\u018b\24\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u018c\22\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\212\21\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\14\7\1\u018d\12\7\1\0\1\7\15\0\1\7\7\0"+
    "\5\7\1\u018e\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\5\7\1\u018f\21\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\u0190\1\7\1\u0181"+
    "\17\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\245\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\21\7\1\247"+
    "\5\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\13\7\1\u0191\13\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\u0192"+
    "\17\7\1\0\1\7\15\0\1\7\7\0\6\7\1\u0193"+
    "\2\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\257"+
    "\12\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\334\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\u0194"+
    "\12\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u0195\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\u0196\26\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\7\1\u0197\1\7\1\u0198\1\7\1\u0199\20\7"+
    "\1\u019a\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\7\7\1\212\17\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u012a"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u019b\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\325"+
    "\17\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\u019c\22\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\u019d\26\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\15\7\1\136\11\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\u019e\13\7\1\u019f"+
    "\12\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\u01a0\22\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\22\7\1\212"+
    "\4\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u01a1\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\245"+
    "\12\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\21\7\1\u01a2\5\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\323"+
    "\22\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\u0136\22\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\12\7\1\136"+
    "\14\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\u01a3\22\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\u01a4"+
    "\12\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\11\7\1\u01a5\15\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\101\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\7\7\1\u01a6"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\121"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\u01a7\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\u01a8\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\u01a9\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\6\7\1\u019d\2\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\4\7\1\u01aa\22\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u01ab"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\7\1\u01ac\25\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\10\7\1\245"+
    "\16\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\143\11\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\5\7\1\u01ad"+
    "\21\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u01ae\12\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\u01af\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u01b0\12\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\22\7\1\u01b1"+
    "\4\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\7\1\u01b2\25\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u01b3"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\7\7\1\u01b4"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\16\7\1\u0136"+
    "\10\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\11\7\1\u014b\15\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u01b5"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u01b6\12\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u014e"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u01b7\12\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\11\7\1\136"+
    "\15\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u01b8\12\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\u018a\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\6\7\1\327"+
    "\2\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\10\7\1\353"+
    "\16\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u0137\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\5\7\1\u01b9"+
    "\21\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\111\26\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\14\7\1\u01ba\12\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\7\7\1\u012f\17\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\5\7\1\247\21\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\u01bb\26\7\1\0\1\7\15\0\1\7\7\0"+
    "\7\7\1\245\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\14\7\1\u01bc\12\7\1\0\1\7\15\0\1\7\7\0"+
    "\5\7\1\u0167\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\15\7\1\u01bd\11\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\14\7\1\u01be\12\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\342\26\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\7\7\1\u01bf\17\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\343"+
    "\26\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\u01c0\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\2\7\1\u01c1"+
    "\24\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\10\7\1\u01c2\16\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\11\7\1\u01c3"+
    "\15\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u01c4\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\14\7\1\u0167"+
    "\12\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\u017b\26\7\1\0\1\7\15\0\1\7"+
    "\7\0\6\7\1\334\2\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\u01c5\12\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\15\7\1\323\11\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\7\1\u01c6\25\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\5\7\1\205\21\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\1\u01c7\26\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\22\7\1\343\4\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\7\7\1\u01c8\17\7\1\0\1\7\15\0\1\7\7\0"+
    "\6\7\1\u01c9\2\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\15\0\1\7\7\0\5\7\1\u01ca\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\u01cb\24\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\7\1\247\25\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\14\7\1\u01cc\12\7\1\0"+
    "\1\7\15\0\1\7\7\0\5\7\1\u011b\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\5\7\1\u01cd\21\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\15\7\1\u01ce\11\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\6\7\1\u01cf\20\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u01d0\24\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\17\7\1\212\7\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\u01d1\26\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\7\7\1\u017b\17\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\16\7"+
    "\1\u01ab\10\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u01d2\22\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\15\7"+
    "\1\372\11\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\14\7\1\u01d3\12\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\14\7"+
    "\1\331\12\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\14\7\1\u01d4\12\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\7\7"+
    "\1\u01d5\17\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u01d6\22\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\15\7"+
    "\1\u01d7\11\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\1\136\26\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\u01d8"+
    "\17\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\22\7\1\u01d9\4\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\7\1\u01da"+
    "\12\7\1\u0161\5\7\1\u01db\4\7\1\0\1\7\15\0"+
    "\1\7\7\0\5\7\1\u01dc\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\15\0\1\7\7\0\5\7\1\360"+
    "\3\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\10\7\1\u0136"+
    "\16\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u01dd\12\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\22\7\1\u01de"+
    "\4\7\1\0\1\7\15\0\1\7\7\0\7\7\1\u0136"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\13\7\1\u01df"+
    "\13\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\u01e0\26\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\20\7\1\247\6\7"+
    "\1\0\1\7\15\0\1\7\7\0\5\7\1\u01e1\3\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\5\7\1\u014b\21\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\3\7\1\245\23\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\u0157\26\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\14\7\1\u01e2\12\7\1\0\1\7\15\0\1\7\7\0"+
    "\5\7\1\u01e3\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\7\1\u01e4\25\7\1\0\1\7\15\0\1\7\7\0"+
    "\6\7\1\u0181\2\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u01e5\22\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\23\7\1\u01e6\3\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\2\7\1\u0196\24\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\4\7\1\u01e7\22\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\5\7\1\u01e8\21\7\1\0\1\7\15\0\1\7\7\0"+
    "\5\7\1\u01e9\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\u01ea\26\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\10\7\1\247\16\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\7\7"+
    "\1\u01ea\17\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\3\7\1\u01eb\23\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\10\7"+
    "\1\u01ec\16\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u01ed\22\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\4\7"+
    "\1\u01ee\22\7\1\0\1\7\15\0\1\7\7\0\5\7"+
    "\1\u01d9\3\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\14\7"+
    "\1\u01ef\12\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u01f0\22\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\23\7"+
    "\1\212\3\7\1\0\1\7\15\0\1\7\7\0\2\7"+
    "\1\u01f1\6\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\u01f2"+
    "\26\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\7\7\1\211\17\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\27\7\1\u01f3"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\20\7\1\u01c2\6\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\u01f4\24\7\1\0"+
    "\1\7\15\0\1\7\7\0\6\7\1\u01f5\2\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\22\7\1\u01f6\4\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\24\7\1\366\2\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\17\7\1\u01c6\7\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\10\7\1\u0175\16\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\10\7\1\u01f7\16\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\1\u01f8\26\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\15\7\1\u01f9\11\7\1\0\1\7"+
    "\15\0\1\7\7\0\2\7\1\u01fa\6\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\2\7\1\77\24\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\15\7"+
    "\1\u01fb\11\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\14\7\1\334\12\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\4\7"+
    "\1\u01fb\22\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u014b\22\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\16\7"+
    "\1\u01fc\10\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\16\7\1\u01fd\10\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\10\7"+
    "\1\u01fe\16\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\14\7\1\u01ff\12\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\4\7"+
    "\1\u0200\22\7\1\0\1\7\15\0\1\7\43\0\1\u0201"+
    "\36\0\11\7\1\0\1\7\2\0\7\7\1\u0202\17\7"+
    "\1\0\1\u0133\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\4\7\1\u01e8\22\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\6\7\1\124\20\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\7\7\1\343\17\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\15\7\1\u0203\11\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\2\7\1\245\24\7\1\0\1\7\15\0\1\7"+
    "\7\0\6\7\1\u0168\2\7\1\0\1\7\2\0\1\7"+
    "\1\331\2\7\1\u0204\22\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\4\7\1\u0205\22\7"+
    "\1\0\1\7\15\0\1\7\7\0\2\7\1\u0206\6\7"+
    "\1\0\1\7\2\0\10\7\1\u01f7\16\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\u0207"+
    "\26\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\15\7\1\u0208\3\7\1\u0209\5\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\10\7\1\u014e\16\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\u020a\24\7\1\0"+
    "\1\7\15\0\1\7\31\0\1\u020b\50\0\11\7\1\0"+
    "\1\7\2\0\11\7\1\u020c\15\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\7\7\1\u020d"+
    "\17\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\14\7\1\u020e\12\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\260\26\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\u020f\12\7\1\0\1\7\15\0\1\7"+
    "\7\0\6\7\1\u0210\2\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\u0211\12\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\2\7\1\u0212\24\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\4\7\1\u0213\22\7\1\0\1\7\15\0\1\7"+
    "\33\0\1\u0214\46\0\11\7\1\0\1\7\2\0\11\7"+
    "\1\u0215\15\7\1\0\1\7\15\0\1\7\7\0\6\7"+
    "\1\u0216\2\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\22\7"+
    "\1\u0217\4\7\1\0\1\7\15\0\1\7\7\0\5\7"+
    "\1\u0218\3\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\7"+
    "\1\u0154\25\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\22\7\1\u0219\4\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\16\7"+
    "\1\u021a\10\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\14\7\1\u021b\12\7\1\0\1\7"+
    "\15\0\1\7\15\0\1\u021c\64\0\11\7\1\0\1\7"+
    "\2\0\15\7\1\u021d\11\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\5\7\1\u01ce\21\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\2\7\1\u021e\24\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\15\7\1\366\11\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\14\7\1\u021f\12\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\6\7\1\u0220\20\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\22\7\1\277\4\7\1\0\1\7\15\0\1\7"+
    "\32\0\1\u0221\47\0\11\7\1\0\1\7\2\0\2\7"+
    "\1\u0222\24\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\15\7\1\u0223\11\7\1\0\1\7"+
    "\15\0\1\7\7\0\7\7\1\u0224\1\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\12\7\1\u0225\14\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\4\7"+
    "\1\u0133\22\7\1\0\1\7\15\0\1\7\7\0\11\7"+
    "\1\0\1\7\2\0\4\7\1\u0226\22\7\1\0\1\7"+
    "\15\0\1\7\7\0\11\7\1\0\1\7\2\0\1\u0227"+
    "\26\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\5\7\1\u0228\21\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\1\102\26\7"+
    "\1\0\1\7\15\0\1\7\7\0\11\7\1\0\1\7"+
    "\2\0\5\7\1\u0229\21\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\1\u022a\26\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\14\7\1\u022b\12\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\15\7\1\u022c\11\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\4\7\1\u022d\22\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\2\7\1\u022e\24\7\1\0"+
    "\1\7\15\0\1\7\7\0\11\7\1\0\1\7\2\0"+
    "\16\7\1\u022f\10\7\1\0\1\7\15\0\1\7\7\0"+
    "\11\7\1\0\1\7\2\0\1\7\1\u0230\2\7\1\u0205"+
    "\22\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\2\7\1\u0231\24\7\1\0\1\7\15\0"+
    "\1\7\7\0\11\7\1\0\1\7\2\0\4\7\1\u0232"+
    "\22\7\1\0\1\7\15\0\1\7\7\0\11\7\1\0"+
    "\1\7\2\0\1\u0233\26\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\14\7\1\u0234\12\7"+
    "\1\0\1\7\15\0\1\7\7\0\7\7\1\u0235\1\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\15\0\1\7"+
    "\7\0\11\7\1\0\1\7\2\0\15\7\1\u022e\11\7"+
    "\1\0\1\7\15\0\1\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[31919];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\1\11\46\1\1\0\15\1\2\11"+
    "\126\1\1\11\4\1\1\11\1\0\167\1\3\0\340\1"+
    "\1\0\15\1\1\0\11\1\1\0\10\1\1\0\7\1"+
    "\1\0\4\1\1\11\24\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[565];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String lexeme;
    public int lin;
    public int col;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2870) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return ERROR;
            } 
            // fall through
          case 19: break;
          case 2: 
            { /* skip */
            } 
            // fall through
          case 20: break;
          case 3: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Operador;
            } 
            // fall through
          case 21: break;
          case 4: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Identificador;
            } 
            // fall through
          case 22: break;
          case 5: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Bit;
            } 
            // fall through
          case 23: break;
          case 6: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Integer;
            } 
            // fall through
          case 24: break;
          case 7: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return VarcharError;
            } 
            // fall through
          case 25: break;
          case 8: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return OperadorBooleano;
            } 
            // fall through
          case 26: break;
          case 9: 
            { /*Ignore*/
            } 
            // fall through
          case 27: break;
          case 10: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Float;
            } 
            // fall through
          case 28: break;
          case 11: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Varchar;
            } 
            // fall through
          case 29: break;
          case 12: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return Reservada;
            } 
            // fall through
          case 30: break;
          case 13: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return DatoBit;
            } 
            // fall through
          case 31: break;
          case 14: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return DatoEntero;
            } 
            // fall through
          case 32: break;
          case 15: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return DatoFechaHora;
            } 
            // fall through
          case 33: break;
          case 16: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return DatoTexto;
            } 
            // fall through
          case 34: break;
          case 17: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return DatoDecimal;
            } 
            // fall through
          case 35: break;
          case 18: 
            { lin=yyline; col=yycolumn; lexeme=yytext(); return DatoBin;
            } 
            // fall through
          case 36: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
