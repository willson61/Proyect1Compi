
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Oct 30 14:50:07 CST 2019
//----------------------------------------------------

package Code;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java_cup.runtime.virtual_parse_stack;
import java.lang.reflect.Field;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Oct 30 14:50:07 CST 2019
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0220\000\002\002\004\000\002\002\005\000\002\002" +
    "\005\000\002\002\002\000\002\003\003\000\002\003\003" +
    "\000\002\003\003\000\002\003\003\000\002\004\003\000" +
    "\002\004\003\000\002\004\003\000\002\004\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\006\003\000\002\006\003\000\002\006\003" +
    "\000\002\006\003\000\002\007\003\000\002\007\003\000" +
    "\002\007\003\000\002\007\003\000\002\010\003\000\002" +
    "\010\003\000\002\011\003\000\002\011\005\000\002\012" +
    "\004\000\002\013\004\000\002\013\002\000\002\014\004" +
    "\000\002\015\004\000\002\015\002\000\002\016\004\000" +
    "\002\017\004\000\002\017\002\000\002\020\004\000\002" +
    "\021\004\000\002\022\004\000\002\023\003\000\002\023" +
    "\005\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\024\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\024\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\025\006\000\002\025\002\000\002\026\004" +
    "\000\002\026\002\000\002\027\004\000\002\030\003\000" +
    "\002\030\003\000\002\030\003\000\002\030\003\000\002" +
    "\030\003\000\002\031\006\000\002\032\005\000\002\032" +
    "\002\000\002\033\006\000\002\034\005\000\002\034\002" +
    "\000\002\035\005\000\002\036\006\000\002\037\005\000" +
    "\002\037\002\000\002\040\006\000\002\041\005\000\002" +
    "\042\005\000\002\042\002\000\002\043\005\000\002\044" +
    "\004\000\002\044\003\000\002\044\002\000\002\045\003" +
    "\000\002\045\003\000\002\046\004\000\002\047\005\000" +
    "\002\047\005\000\002\047\002\000\002\050\004\000\002" +
    "\051\005\000\002\051\005\000\002\051\002\000\002\052" +
    "\005\000\002\052\003\000\002\053\003\000\002\053\003" +
    "\000\002\053\003\000\002\053\003\000\002\053\003\000" +
    "\002\053\003\000\002\053\005\000\002\053\005\000\002" +
    "\053\005\000\002\053\005\000\002\053\005\000\002\054" +
    "\004\000\002\054\004\000\002\054\004\000\002\054\004" +
    "\000\002\055\005\000\002\055\002\000\002\056\003\000" +
    "\002\056\002\000\002\057\007\000\002\057\002\000\002" +
    "\060\003\000\002\060\002\000\002\061\005\000\002\061" +
    "\006\000\002\062\004\000\002\062\002\000\002\063\004" +
    "\000\002\064\004\000\002\064\004\000\002\064\004\000" +
    "\002\064\004\000\002\064\004\000\002\064\004\000\002" +
    "\064\004\000\002\064\004\000\002\064\004\000\002\064" +
    "\004\000\002\064\005\000\002\064\004\000\002\065\007" +
    "\000\002\065\006\000\002\065\004\000\002\066\003\000" +
    "\002\066\003\000\002\067\004\000\002\067\002\000\002" +
    "\070\013\000\002\071\003\000\002\071\003\000\002\071" +
    "\002\000\002\072\004\000\002\072\002\000\002\073\010" +
    "\000\002\073\002\000\002\074\004\000\002\074\002\000" +
    "\002\075\003\000\002\075\003\000\002\075\002\000\002" +
    "\076\005\000\002\076\002\000\002\077\006\000\002\077" +
    "\002\000\002\100\005\000\002\100\002\000\002\101\007" +
    "\000\002\101\002\000\002\102\006\000\002\102\002\000" +
    "\002\103\011\000\002\103\002\000\002\104\003\000\002" +
    "\104\004\000\002\104\004\000\002\104\004\000\002\104" +
    "\002\000\002\105\003\000\002\105\002\000\002\106\005" +
    "\000\002\106\004\000\002\107\006\000\002\107\002\000" +
    "\002\110\005\000\002\111\004\000\002\112\005\000\002" +
    "\112\002\000\002\113\010\000\002\114\003\000\002\114" +
    "\002\000\002\115\003\000\002\115\002\000\002\116\004" +
    "\000\002\117\003\000\002\117\003\000\002\117\003\000" +
    "\002\117\003\000\002\117\003\000\002\120\005\000\002" +
    "\120\002\000\002\121\007\000\002\121\004\000\002\122" +
    "\007\000\002\122\002\000\002\123\006\000\002\124\003" +
    "\000\002\124\002\000\002\125\004\000\002\125\005\000" +
    "\002\126\005\000\002\127\005\000\002\127\002\000\002" +
    "\130\007\000\002\131\011\000\002\132\006\000\002\133" +
    "\003\000\002\133\003\000\002\134\004\000\002\134\002" +
    "\000\002\135\005\000\002\135\002\000\002\136\004\000" +
    "\002\137\003\000\002\137\003\000\002\137\003\000\002" +
    "\137\003\000\002\137\003\000\002\137\003\000\002\137" +
    "\003\000\002\140\004\000\002\141\005\000\002\142\004" +
    "\000\002\143\005\000\002\143\002\000\002\144\004\000" +
    "\002\144\002\000\002\145\003\000\002\145\002\000\002" +
    "\146\005\000\002\146\003\000\002\147\014\000\002\150" +
    "\003\000\002\150\003\000\002\151\003\000\002\151\003" +
    "\000\002\152\005\000\002\152\002\000\002\154\003\000" +
    "\002\154\003\000\002\154\003\000\002\155\006\000\002" +
    "\156\003\000\002\156\002\000\002\157\003\000\002\157" +
    "\003\000\002\157\003\000\002\157\003\000\002\160\005" +
    "\000\002\161\004\000\002\162\003\000\002\162\003\000" +
    "\002\162\002\000\002\163\006\000\002\164\003\000\002" +
    "\164\003\000\002\164\002\000\002\165\006\000\002\166" +
    "\014\000\002\167\003\000\002\167\002\000\002\170\005" +
    "\000\002\171\005\000\002\172\006\000\002\172\002\000" +
    "\002\173\004\000\002\173\002\000\002\174\007\000\002" +
    "\174\002\000\002\175\011\000\002\176\004\000\002\176" +
    "\002\000\002\177\004\000\002\177\003\000\002\202\005" +
    "\000\002\202\003\000\002\203\004\000\002\203\003\000" +
    "\002\204\003\000\002\200\003\000\002\200\003\000\002" +
    "\200\003\000\002\201\005\000\002\201\002\000\002\205" +
    "\006\000\002\206\004\000\002\206\002\000\002\207\004" +
    "\000\002\207\002\000\002\210\003\000\002\210\004\000" +
    "\002\210\002\000\002\211\003\000\002\211\002\000\002" +
    "\212\007\000\002\212\002\000\002\213\005\000\002\213" +
    "\003\000\002\213\002\000\002\214\007\000\002\214\006" +
    "\000\002\214\004\000\002\214\005\000\002\215\003\000" +
    "\002\215\003\000\002\215\003\000\002\215\003\000\002" +
    "\215\003\000\002\216\003\000\002\216\002\000\002\217" +
    "\003\000\002\217\005\000\002\220\004\000\002\220\003" +
    "\000\002\220\002\000\002\221\010\000\002\222\005\000" +
    "\002\222\002\000\002\223\004\000\002\223\002\000\002" +
    "\224\004\000\002\224\010\000\002\224\007\000\002\225" +
    "\003\000\002\225\003\000\002\225\002\000\002\226\004" +
    "\000\002\226\002\000\002\227\005\000\002\227\002\000" +
    "\002\230\005\000\002\230\002\000\002\231\004\000\002" +
    "\231\004\000\002\232\003\000\002\232\004\000\002\233" +
    "\003\000\002\233\003\000\002\234\004\000\002\234\003" +
    "\000\002\235\004\000\002\236\006\000\002\236\005\000" +
    "\002\236\013\000\002\236\007\000\002\237\007\000\002" +
    "\240\006\000\002\241\005\000\002\241\002\000\002\242" +
    "\006\000\002\242\002\000\002\243\006\000\002\244\004" +
    "\000\002\245\003\000\002\245\003\000\002\245\003\000" +
    "\002\245\003\000\002\245\003\000\002\245\003\000\002" +
    "\246\005\000\002\247\003\000\002\247\003\000\002\250" +
    "\004\000\002\250\005\000\002\251\004\000\002\252\007" +
    "\000\002\253\003\000\002\253\002\000\002\254\005\000" +
    "\002\255\003\000\002\255\005\000\002\255\003\000\002" +
    "\256\006\000\002\257\003\000\002\257\004\000\002\260" +
    "\005\000\002\261\003\000\002\261\003\000\002\262\003" +
    "\000\002\262\005\000\002\263\005\000\002\264\005\000" +
    "\002\264\005\000\002\265\005\000\002\265\002\000\002" +
    "\266\003\000\002\266\002\000\002\267\003\000\002\267" +
    "\003\000\002\270\005\000\002\271\004\000\002\271\002" +
    "\000\002\272\005\000\002\272\002\000\002\273\003\000" +
    "\002\273\002\000\002\274\003\000\002\274\003\000\002" +
    "\275\003\000\002\275\003\000\002\276\003\000\002\276" +
    "\003\000\002\276\002\000\002\277\004\000\002\300\004" +
    "\000\002\300\002\000\002\301\004\000\002\302\004\000" +
    "\002\302\002\000\002\303\005\000\002\304\004\000\002" +
    "\304\002\000\002\305\003\000\002\305\003\000\002\306" +
    "\007\000\002\307\004\000\002\307\002\000\002\310\004" +
    "\000\002\310\003\000\002\311\004\000\002\311\002\000" +
    "\002\312\005\000\002\312\002\000\002\313\003\000\002" +
    "\313\002\000\002\314\004\000\002\315\004\000\002\315" +
    "\002\000\002\316\003\000\002\316\004\000\002\316\003" +
    "\000\002\317\003\000\002\317\002\000\002\320\003\000" +
    "\002\320\002\000\002\321\013\000\002\322\003\000\002" +
    "\322\003\000\002\323\004\000\002\323\002\000\002\324" +
    "\003\000\002\324\002\000\002\325\005\000\002\326\004" +
    "\000\002\326\002\000\002\327\005\000\002\327\005\000" +
    "\002\327\004\000\002\330\004\000\002\330\002\000\002" +
    "\331\003\000\002\331\002\000\002\332\003\000\002\332" +
    "\003\000\002\333\004\000\002\333\002\000\002\334\004" +
    "\000\002\335\003\000\002\335\003\000\002\335\005\000" +
    "\002\336\004\000\002\336\002\000\002\337\003\000\002" +
    "\337\003\000\002\340\003\000\002\340\003\000\002\340" +
    "\003\000\002\340\003\000\002\341\004\000\002\341\002" +
    "\000\002\342\005\000\002\342\003\000\002\343\005\000" +
    "\002\344\005\000\002\344\002\000\002\345\004\000\002" +
    "\345\002\000\002\346\012\000\002\347\003\000\002\347" +
    "\002\000\002\350\004\000\002\351\007\000\002\352\004" +
    "\000\002\352\002\000\002\353\003\000\002\353\002\000" +
    "\002\354\003\000\002\354\002\000\002\355\003\000\002" +
    "\355\003\000\002\356\007\000\002\357\005\000\002\357" +
    "\002\000\002\360\004\000\002\360\002\000\002\361\003" +
    "\000\002\361\003\000\002\361\007\000\002\361\006\000" +
    "\002\361\005\000\002\362\005\000\002\362\003\000\002" +
    "\363\013\000\002\364\003\000\002\364\003\000\002\365" +
    "\015\000\002\366\003\000\002\366\003\000\002\366\002" +
    "\000\002\367\003\000\002\367\003\000\002\367\002\000" +
    "\002\370\003\000\002\370\003\000\002\370\003\000\002" +
    "\370\003\000\002\370\002\000\002\371\003\000\002\371" +
    "\003\000\002\371\003\000\002\371\002\000\002\372\003" +
    "\000\002\372\002\000\002\373\005\000\002\373\002\000" +
    "\002\374\004\000\002\374\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u039d\000\062\002\ufffe\003\030\006\ufe55\037\015\065" +
    "\023\071\ufe55\106\052\122\041\133\024\140\042\142\047" +
    "\167\043\227\006\230\034\236\012\251\011\263\044\264" +
    "\021\310\046\313\010\322\ufe55\u010e\ufe48\u0117\ufe48\u0129\ufe48" +
    "\001\002\000\006\325\ufffb\u010b\ufffb\001\002\000\006\325" +
    "\ufff6\u010b\ufff6\001\002\000\004\174\u039e\001\002\000\006" +
    "\325\ufff7\u010b\ufff7\001\002\000\012\051\ufe21\u010e\ufe21\u0117" +
    "\ufe21\u0129\ufe21\001\002\000\010\213\u028e\u010e\uff81\u0129\uff81" +
    "\001\002\000\014\063\uff81\213\u028e\250\uff81\u010e\uff81\u0129" +
    "\uff81\001\002\000\006\325\ufff1\u010b\ufff1\001\002\000\006" +
    "\325\uffee\u010b\uffee\001\002\000\022\006\ufe55\071\ufe55\174" +
    "\u033d\217\u0339\262\u033b\264\021\273\u033e\322\ufe55\001\002" +
    "\000\006\325\ufff2\u010b\ufff2\001\002\000\006\325\ufff9\u010b" +
    "\ufff9\001\002\000\006\325\ufffa\u010b\ufffa\001\002\000\004" +
    "\037\u0335\001\002\000\006\325\uffeb\u010b\uffeb\001\002\000" +
    "\006\216\321\221\317\001\002\000\044\007\u02eb\213\uff63" +
    "\220\uff63\252\u02e9\326\uff63\327\uff63\330\uff63\331\uff63\332" +
    "\uff63\u0108\uff63\u010e\uff63\u0110\uff63\u0124\uff63\u0127\uff63\u0128\uff63" +
    "\u0129\uff63\u012b\uff63\001\002\000\006\325\ufff0\u010b\ufff0\001" +
    "\002\000\010\u010e\ufe50\u0117\074\u0129\ufe50\001\002\000\006" +
    "\325\uffea\u010b\uffea\001\002\000\006\325\205\u010b\203\001" +
    "\002\000\006\325\ufffc\u010b\ufffc\001\002\000\006\325\uffed" +
    "\u010b\uffed\001\002\000\006\325\ufff4\u010b\ufff4\001\002\000" +
    "\006\u010e\065\u0129\064\001\002\000\006\325\ufffd\u010b\ufffd" +
    "\001\002\000\010\u010e\ufe49\u0117\ufe49\u0129\ufe49\001\002\000" +
    "\006\325\ufff8\u010b\ufff8\001\002\000\006\325\ufff5\u010b\ufff5" +
    "\001\002\000\006\216\321\221\317\001\002\000\012\146" +
    "\uff81\213\u028e\u010e\uff81\u0129\uff81\001\002\000\032\006\ufe55" +
    "\071\ufe55\126\ufeec\132\ufeec\174\u0113\212\ufeec\217\u010e\243" +
    "\u0111\262\u0110\264\021\273\u0112\322\ufe55\001\002\000\014" +
    "\132\335\174\342\217\334\262\336\273\343\001\002\000" +
    "\006\325\uffef\u010b\uffef\001\002\000\012\051\ufe22\u010e\ufe22" +
    "\u0117\ufe22\u0129\ufe22\001\002\000\012\216\321\221\317\325" +
    "\ufe58\u010b\ufe58\001\002\000\006\325\205\u010b\203\001\002" +
    "\000\004\002\325\001\002\000\012\216\321\221\317\325" +
    "\ufe5b\u010b\ufe5b\001\002\000\006\325\ufff3\u010b\ufff3\001\002" +
    "\000\006\325\uffec\u010b\uffec\001\002\000\010\006\056\071" +
    "\060\322\057\001\002\000\006\u010e\ufe3b\u0129\ufe3b\001\002" +
    "\000\006\u010e\ufe3c\u0129\ufe3c\001\002\000\006\u010e\065\u0129" +
    "\064\001\002\000\006\u010e\065\u0129\064\001\002\000\204" +
    "\004\uffe3\037\uffe3\042\uffe3\046\uffe3\051\uffe3\054\uffe3\063" +
    "\uffe3\066\uffe3\070\uffe3\102\uffe3\103\uffe3\105\uffe3\127\uffe3" +
    "\134\uffe3\135\uffe3\151\uffe3\152\uffe3\154\uffe3\165\uffe3\170" +
    "\uffe3\215\uffe3\220\uffe3\233\uffe3\236\uffe3\237\uffe3\244\uffe3" +
    "\251\uffe3\263\uffe3\264\uffe3\265\uffe3\267\uffe3\304\uffe3\312" +
    "\uffe3\325\uffe3\326\uffe3\327\uffe3\330\uffe3\331\uffe3\332\uffe3" +
    "\u0106\uffe3\u0107\uffe3\u0108\uffe3\u0109\uffe3\u010b\uffe3\u010c\uffe3\u010d" +
    "\221\u010e\uffe3\u0110\uffe3\u0111\uffe3\u0117\uffe3\u011a\uffe3\u011b\uffe3" +
    "\u011c\uffe3\u011d\uffe3\u011e\uffe3\u011f\uffe3\u0120\uffe3\u0121\uffe3\u0122" +
    "\uffe3\u0123\uffe3\u0124\uffe3\u0127\uffe3\u0128\uffe3\u0129\uffe3\u012b\uffe3" +
    "\001\002\000\014\046\ufe39\051\ufe39\312\ufe39\u010b\070\u0117" +
    "\ufe39\001\002\000\324\004\uffe7\011\uffe7\037\uffe7\042\uffe7" +
    "\046\uffe7\051\uffe7\052\uffe7\054\uffe7\056\uffe7\063\uffe7\065" +
    "\uffe7\066\uffe7\070\uffe7\072\uffe7\102\uffe7\103\uffe7\105\uffe7" +
    "\113\uffe7\114\uffe7\115\uffe7\126\uffe7\127\uffe7\134\uffe7\135" +
    "\uffe7\150\uffe7\151\uffe7\152\uffe7\154\uffe7\165\uffe7\170\uffe7" +
    "\212\uffe7\214\uffe7\215\uffe7\220\uffe7\233\uffe7\236\uffe7\237" +
    "\uffe7\243\uffe7\244\uffe7\251\uffe7\263\uffe7\264\uffe7\265\uffe7" +
    "\267\uffe7\304\uffe7\312\uffe7\314\uffe7\325\uffe7\326\uffe7\327" +
    "\uffe7\330\uffe7\331\uffe7\332\uffe7\337\uffe7\340\uffe7\341\uffe7" +
    "\342\uffe7\343\uffe7\344\uffe7\345\uffe7\346\uffe7\347\uffe7\350" +
    "\uffe7\351\uffe7\352\uffe7\353\uffe7\354\uffe7\355\uffe7\356\uffe7" +
    "\357\uffe7\360\uffe7\361\uffe7\362\uffe7\363\uffe7\364\uffe7\365" +
    "\uffe7\366\uffe7\367\uffe7\370\uffe7\u0106\uffe7\u0107\uffe7\u0108\uffe7" +
    "\u0109\uffe7\u010b\uffe7\u010c\uffe7\u010d\uffe7\u010e\uffe7\u0110\uffe7\u0111" +
    "\uffe7\u0117\uffe7\u011a\uffe7\u011b\uffe7\u011c\uffe7\u011d\uffe7\u011e\uffe7" +
    "\u011f\uffe7\u0120\uffe7\u0121\uffe7\u0122\uffe7\u0123\uffe7\u0124\uffe7\u0127" +
    "\uffe7\u0128\uffe7\u0129\uffe7\u012b\uffe7\001\002\000\004\u0129\066" +
    "\001\002\000\004\u010f\067\001\002\000\324\004\uffe6\011" +
    "\uffe6\037\uffe6\042\uffe6\046\uffe6\051\uffe6\052\uffe6\054\uffe6" +
    "\056\uffe6\063\uffe6\065\uffe6\066\uffe6\070\uffe6\072\uffe6\102" +
    "\uffe6\103\uffe6\105\uffe6\113\uffe6\114\uffe6\115\uffe6\126\uffe6" +
    "\127\uffe6\134\uffe6\135\uffe6\150\uffe6\151\uffe6\152\uffe6\154" +
    "\uffe6\165\uffe6\170\uffe6\212\uffe6\214\uffe6\215\uffe6\220\uffe6" +
    "\233\uffe6\236\uffe6\237\uffe6\243\uffe6\244\uffe6\251\uffe6\263" +
    "\uffe6\264\uffe6\265\uffe6\267\uffe6\304\uffe6\312\uffe6\314\uffe6" +
    "\325\uffe6\326\uffe6\327\uffe6\330\uffe6\331\uffe6\332\uffe6\337" +
    "\uffe6\340\uffe6\341\uffe6\342\uffe6\343\uffe6\344\uffe6\345\uffe6" +
    "\346\uffe6\347\uffe6\350\uffe6\351\uffe6\352\uffe6\353\uffe6\354" +
    "\uffe6\355\uffe6\356\uffe6\357\uffe6\360\uffe6\361\uffe6\362\uffe6" +
    "\363\uffe6\364\uffe6\365\uffe6\366\uffe6\367\uffe6\370\uffe6\u0106" +
    "\uffe6\u0107\uffe6\u0108\uffe6\u0109\uffe6\u010b\uffe6\u010c\uffe6\u010d\uffe6" +
    "\u010e\uffe6\u0110\uffe6\u0111\uffe6\u0117\uffe6\u011a\uffe6\u011b\uffe6\u011c" +
    "\uffe6\u011d\uffe6\u011e\uffe6\u011f\uffe6\u0120\uffe6\u0121\uffe6\u0122\uffe6" +
    "\u0123\uffe6\u0124\uffe6\u0127\uffe6\u0128\uffe6\u0129\uffe6\u012b\uffe6\001" +
    "\002\000\006\u0128\215\u012b\216\001\002\000\012\046\ufe37" +
    "\051\ufe37\312\ufe37\u0117\074\001\002\000\010\046\ufe38\051" +
    "\ufe38\312\ufe38\001\002\000\010\046\ufe29\051\ufe29\312\153" +
    "\001\002\000\004\u0129\151\001\002\000\074\214\112\337" +
    "\105\340\102\341\122\342\131\343\121\344\104\345\076" +
    "\346\126\347\111\350\117\351\130\352\107\353\101\354" +
    "\110\355\077\356\125\357\124\360\106\361\127\362\116" +
    "\363\113\364\133\365\132\366\100\367\103\370\120\u010e" +
    "\065\u0129\064\001\002\000\064\010\uffd1\011\uffd1\046\uffd1" +
    "\051\uffd1\052\uffd1\056\uffd1\065\uffd1\113\uffd1\114\uffd1\115" +
    "\uffd1\134\uffd1\150\uffd1\215\uffd1\220\uffd1\243\uffd1\312\uffd1" +
    "\314\uffd1\325\uffd1\u0100\uffd1\u010b\uffd1\u010c\uffd1\u010f\uffd1\u0110" +
    "\uffd1\u0111\uffd1\u0123\uffd1\001\002\000\064\010\uffc9\011\uffc9" +
    "\046\uffc9\051\uffc9\052\uffc9\056\uffc9\065\uffc9\113\uffc9\114" +
    "\uffc9\115\uffc9\134\uffc9\150\uffc9\215\uffc9\220\uffc9\243\uffc9" +
    "\312\uffc9\314\uffc9\325\uffc9\u0100\uffc9\u010b\uffc9\u010c\uffc9\u010f" +
    "\uffc9\u0110\uffc9\u0111\uffc9\u0123\uffc9\001\002\000\064\010\uffc0" +
    "\011\uffc0\046\uffc0\051\uffc0\052\uffc0\056\uffc0\065\uffc0\113" +
    "\uffc0\114\uffc0\115\uffc0\134\uffc0\150\uffc0\215\uffc0\220\uffc0" +
    "\243\uffc0\312\uffc0\314\uffc0\325\uffc0\u0100\uffc0\u010b\uffc0\u010c" +
    "\uffc0\u010f\uffc0\u0110\uffc0\u0111\uffc0\u0123\uffc0\001\002\000\064" +
    "\010\uffcb\011\uffcb\046\uffcb\051\uffcb\052\uffcb\056\uffcb\065" +
    "\uffcb\113\uffcb\114\uffcb\115\uffcb\134\uffcb\150\uffcb\215\uffcb" +
    "\220\uffcb\243\uffcb\312\uffcb\314\uffcb\325\uffcb\u0100\uffcb\u010b" +
    "\uffcb\u010c\uffcb\u010f\uffcb\u0110\uffcb\u0111\uffcb\u0123\uffcb\001\002" +
    "\000\064\010\uffd6\011\uffd6\046\uffd6\051\uffd6\052\uffd6\056" +
    "\uffd6\065\uffd6\113\uffd6\114\uffd6\115\uffd6\134\uffd6\150\uffd6" +
    "\215\uffd6\220\uffd6\243\uffd6\312\uffd6\314\uffd6\325\uffd6\u0100" +
    "\uffd6\u010b\uffd6\u010c\uffd6\u010f\uffd6\u0110\uffd6\u0111\uffd6\u0123\uffd6" +
    "\001\002\000\064\010\uffbf\011\uffbf\046\uffbf\051\uffbf\052" +
    "\uffbf\056\uffbf\065\uffbf\113\uffbf\114\uffbf\115\uffbf\134\uffbf" +
    "\150\uffbf\215\uffbf\220\uffbf\243\uffbf\312\uffbf\314\uffbf\325" +
    "\uffbf\u0100\uffbf\u010b\uffbf\u010c\uffbf\u010f\uffbf\u0110\uffbf\u0111\uffbf" +
    "\u0123\uffbf\001\002\000\064\010\uffd2\011\uffd2\046\uffd2\051" +
    "\uffd2\052\uffd2\056\uffd2\065\uffd2\113\uffd2\114\uffd2\115\uffd2" +
    "\134\uffd2\150\uffd2\215\uffd2\220\uffd2\243\uffd2\312\uffd2\314" +
    "\uffd2\325\uffd2\u0100\uffd2\u010b\uffd2\u010c\uffd2\u010f\uffd2\u0110\uffd2" +
    "\u0111\uffd2\u0123\uffd2\001\002\000\064\010\uffd7\011\uffd7\046" +
    "\uffd7\051\uffd7\052\uffd7\056\uffd7\065\uffd7\113\uffd7\114\uffd7" +
    "\115\uffd7\134\uffd7\150\uffd7\215\uffd7\220\uffd7\243\uffd7\312" +
    "\uffd7\314\uffd7\325\uffd7\u0100\uffd7\u010b\uffd7\u010c\uffd7\u010f\uffd7" +
    "\u0110\uffd7\u0111\uffd7\u0123\uffd7\001\002\000\064\010\uffc6\011" +
    "\uffc6\046\uffc6\051\uffc6\052\uffc6\056\uffc6\065\uffc6\113\uffc6" +
    "\114\uffc6\115\uffc6\134\uffc6\150\uffc6\215\uffc6\220\uffc6\243" +
    "\uffc6\312\uffc6\314\uffc6\325\uffc6\u0100\uffc6\u010b\uffc6\u010c\uffc6" +
    "\u010f\uffc6\u0110\uffc6\u0111\uffc6\u0123\uffc6\001\002\000\064\010" +
    "\uffcc\011\uffcc\046\uffcc\051\uffcc\052\uffcc\056\uffcc\065\uffcc" +
    "\113\uffcc\114\uffcc\115\uffcc\134\uffcc\150\uffcc\215\uffcc\220" +
    "\uffcc\243\uffcc\312\uffcc\314\uffcc\325\uffcc\u0100\uffcc\u010b\uffcc" +
    "\u010c\uffcc\u010f\uffcc\u0110\uffcc\u0111\uffcc\u0123\uffcc\001\002\000" +
    "\064\010\uffca\011\uffca\046\uffca\051\uffca\052\uffca\056\uffca" +
    "\065\uffca\113\uffca\114\uffca\115\uffca\134\uffca\150\uffca\215" +
    "\uffca\220\uffca\243\uffca\312\uffca\314\uffca\325\uffca\u0100\uffca" +
    "\u010b\uffca\u010c\uffca\u010f\uffca\u0110\uffca\u0111\uffca\u0123\uffca\001" +
    "\002\000\064\010\uffcf\011\uffcf\046\uffcf\051\uffcf\052\uffcf" +
    "\056\uffcf\065\uffcf\113\uffcf\114\uffcf\115\uffcf\134\uffcf\150" +
    "\uffcf\215\uffcf\220\uffcf\243\uffcf\312\uffcf\314\uffcf\325\uffcf" +
    "\u0100\uffcf\u010b\uffcf\u010c\uffcf\u010f\uffcf\u0110\uffcf\u0111\uffcf\u0123" +
    "\uffcf\001\002\000\004\270\147\001\002\000\064\010\uffc3" +
    "\011\uffc3\046\uffc3\051\uffc3\052\uffc3\056\uffc3\065\uffc3\113" +
    "\uffc3\114\uffc3\115\uffc3\134\uffc3\150\uffc3\215\uffc3\220\uffc3" +
    "\243\uffc3\312\uffc3\314\uffc3\325\uffc3\u0100\uffc3\u010b\uffc3\u010c" +
    "\uffc3\u010f\uffc3\u0110\uffc3\u0111\uffc3\u0123\uffc3\001\002\000\020" +
    "\010\ufe2f\046\ufe2f\051\ufe2f\312\ufe2f\u0100\ufe2f\u010c\ufe2f\u0123" +
    "\141\001\002\000\004\011\137\001\002\000\064\010\uffc4" +
    "\011\uffc4\046\uffc4\051\uffc4\052\uffc4\056\uffc4\065\uffc4\113" +
    "\uffc4\114\uffc4\115\uffc4\134\uffc4\150\uffc4\215\uffc4\220\uffc4" +
    "\243\uffc4\312\uffc4\314\uffc4\325\uffc4\u0100\uffc4\u010b\uffc4\u010c" +
    "\uffc4\u010f\uffc4\u0110\uffc4\u0111\uffc4\u0123\uffc4\001\002\000\064" +
    "\010\uffce\011\uffce\046\uffce\051\uffce\052\uffce\056\uffce\065" +
    "\uffce\113\uffce\114\uffce\115\uffce\134\uffce\150\uffce\215\uffce" +
    "\220\uffce\243\uffce\312\uffce\314\uffce\325\uffce\u0100\uffce\u010b" +
    "\uffce\u010c\uffce\u010f\uffce\u0110\uffce\u0111\uffce\u0123\uffce\001\002" +
    "\000\064\010\uffbe\011\uffbe\046\uffbe\051\uffbe\052\uffbe\056" +
    "\uffbe\065\uffbe\113\uffbe\114\uffbe\115\uffbe\134\uffbe\150\uffbe" +
    "\215\uffbe\220\uffbe\243\uffbe\312\uffbe\314\uffbe\325\uffbe\u0100" +
    "\uffbe\u010b\uffbe\u010c\uffbe\u010f\uffbe\u0110\uffbe\u0111\uffbe\u0123\uffbe" +
    "\001\002\000\064\010\uffd3\011\uffd3\046\uffd3\051\uffd3\052" +
    "\uffd3\056\uffd3\065\uffd3\113\uffd3\114\uffd3\115\uffd3\134\uffd3" +
    "\150\uffd3\215\uffd3\220\uffd3\243\uffd3\312\uffd3\314\uffd3\325" +
    "\uffd3\u0100\uffd3\u010b\uffd3\u010c\uffd3\u010f\uffd3\u0110\uffd3\u0111\uffd3" +
    "\u0123\uffd3\001\002\000\064\010\uffd5\011\uffd5\046\uffd5\051" +
    "\uffd5\052\uffd5\056\uffd5\065\uffd5\113\uffd5\114\uffd5\115\uffd5" +
    "\134\uffd5\150\uffd5\215\uffd5\220\uffd5\243\uffd5\312\uffd5\314" +
    "\uffd5\325\uffd5\u0100\uffd5\u010b\uffd5\u010c\uffd5\u010f\uffd5\u0110\uffd5" +
    "\u0111\uffd5\u0123\uffd5\001\002\000\012\046\ufe34\051\ufe34\312" +
    "\ufe34\u010c\135\001\002\000\064\010\uffc7\011\uffc7\046\uffc7" +
    "\051\uffc7\052\uffc7\056\uffc7\065\uffc7\113\uffc7\114\uffc7\115" +
    "\uffc7\134\uffc7\150\uffc7\215\uffc7\220\uffc7\243\uffc7\312\uffc7" +
    "\314\uffc7\325\uffc7\u0100\uffc7\u010b\uffc7\u010c\uffc7\u010f\uffc7\u0110" +
    "\uffc7\u0111\uffc7\u0123\uffc7\001\002\000\064\010\uffc8\011\uffc8" +
    "\046\uffc8\051\uffc8\052\uffc8\056\uffc8\065\uffc8\113\uffc8\114" +
    "\uffc8\115\uffc8\134\uffc8\150\uffc8\215\uffc8\220\uffc8\243\uffc8" +
    "\312\uffc8\314\uffc8\325\uffc8\u0100\uffc8\u010b\uffc8\u010c\uffc8\u010f" +
    "\uffc8\u0110\uffc8\u0111\uffc8\u0123\uffc8\001\002\000\064\010\uffd0" +
    "\011\uffd0\046\uffd0\051\uffd0\052\uffd0\056\uffd0\065\uffd0\113" +
    "\uffd0\114\uffd0\115\uffd0\134\uffd0\150\uffd0\215\uffd0\220\uffd0" +
    "\243\uffd0\312\uffd0\314\uffd0\325\uffd0\u0100\uffd0\u010b\uffd0\u010c" +
    "\uffd0\u010f\uffd0\u0110\uffd0\u0111\uffd0\u0123\uffd0\001\002\000\064" +
    "\010\uffc5\011\uffc5\046\uffc5\051\uffc5\052\uffc5\056\uffc5\065" +
    "\uffc5\113\uffc5\114\uffc5\115\uffc5\134\uffc5\150\uffc5\215\uffc5" +
    "\220\uffc5\243\uffc5\312\uffc5\314\uffc5\325\uffc5\u0100\uffc5\u010b" +
    "\uffc5\u010c\uffc5\u010f\uffc5\u0110\uffc5\u0111\uffc5\u0123\uffc5\001\002" +
    "\000\064\010\uffcd\011\uffcd\046\uffcd\051\uffcd\052\uffcd\056" +
    "\uffcd\065\uffcd\113\uffcd\114\uffcd\115\uffcd\134\uffcd\150\uffcd" +
    "\215\uffcd\220\uffcd\243\uffcd\312\uffcd\314\uffcd\325\uffcd\u0100" +
    "\uffcd\u010b\uffcd\u010c\uffcd\u010f\uffcd\u0110\uffcd\u0111\uffcd\u0123\uffcd" +
    "\001\002\000\064\010\uffd4\011\uffd4\046\uffd4\051\uffd4\052" +
    "\uffd4\056\uffd4\065\uffd4\113\uffd4\114\uffd4\115\uffd4\134\uffd4" +
    "\150\uffd4\215\uffd4\220\uffd4\243\uffd4\312\uffd4\314\uffd4\325" +
    "\uffd4\u0100\uffd4\u010b\uffd4\u010c\uffd4\u010f\uffd4\u0110\uffd4\u0111\uffd4" +
    "\u0123\uffd4\001\002\000\064\010\uffc1\011\uffc1\046\uffc1\051" +
    "\uffc1\052\uffc1\056\uffc1\065\uffc1\113\uffc1\114\uffc1\115\uffc1" +
    "\134\uffc1\150\uffc1\215\uffc1\220\uffc1\243\uffc1\312\uffc1\314" +
    "\uffc1\325\uffc1\u0100\uffc1\u010b\uffc1\u010c\uffc1\u010f\uffc1\u0110\uffc1" +
    "\u0111\uffc1\u0123\uffc1\001\002\000\064\010\uffc2\011\uffc2\046" +
    "\uffc2\051\uffc2\052\uffc2\056\uffc2\065\uffc2\113\uffc2\114\uffc2" +
    "\115\uffc2\134\uffc2\150\uffc2\215\uffc2\220\uffc2\243\uffc2\312" +
    "\uffc2\314\uffc2\325\uffc2\u0100\uffc2\u010b\uffc2\u010c\uffc2\u010f\uffc2" +
    "\u0110\uffc2\u0111\uffc2\u0123\uffc2\001\002\000\010\046\ufe36\051" +
    "\ufe36\312\ufe36\001\002\000\004\u0117\074\001\002\000\010" +
    "\046\ufe35\051\ufe35\312\ufe35\001\002\000\012\046\ufe31\051" +
    "\ufe31\312\ufe31\u010c\ufe31\001\002\000\016\010\143\046\ufe2d" +
    "\051\ufe2d\312\ufe2d\u0100\144\u010c\ufe2d\001\002\000\004\233" +
    "\142\001\002\000\022\010\ufe30\011\ufe30\046\ufe30\051\ufe30" +
    "\312\ufe30\u0100\ufe30\u010c\ufe30\u0111\ufe30\001\002\000\012\046" +
    "\ufe2c\051\ufe2c\312\ufe2c\u010c\ufe2c\001\002\000\012\046\ufe2b" +
    "\051\ufe2b\312\ufe2b\u010c\ufe2b\001\002\000\012\046\ufe2e\051" +
    "\ufe2e\312\ufe2e\u010c\ufe2e\001\002\000\012\046\ufe33\051\ufe33" +
    "\312\ufe33\u010c\ufe33\001\002\000\006\010\143\u0100\144\001" +
    "\002\000\012\046\ufe32\051\ufe32\312\ufe32\u010c\ufe32\001\002" +
    "\000\122\051\uffdb\214\uffdb\233\uffdb\274\uffdb\325\uffdb\337" +
    "\uffdb\340\uffdb\341\uffdb\342\uffdb\343\uffdb\344\uffdb\345\uffdb" +
    "\346\uffdb\347\uffdb\350\uffdb\351\uffdb\352\uffdb\353\uffdb\354" +
    "\uffdb\355\uffdb\356\uffdb\357\uffdb\360\uffdb\361\uffdb\362\uffdb" +
    "\363\uffdb\364\uffdb\365\uffdb\366\uffdb\367\uffdb\370\uffdb\u0100" +
    "\uffdb\u010b\uffdb\u010c\uffdb\u010e\uffdb\u0117\uffdb\u0123\uffdb\u0128\uffdb" +
    "\u0129\uffdb\u012b\uffdb\001\002\000\006\046\172\051\ufe1b\001" +
    "\002\000\012\012\157\022\160\310\046\313\010\001\002" +
    "\000\010\046\ufe23\051\ufe23\u010c\167\001\002\000\006\046" +
    "\ufe2a\051\ufe2a\001\002\000\004\051\161\001\002\000\010" +
    "\046\ufe27\051\ufe27\u010c\ufe27\001\002\000\010\046\ufe26\051" +
    "\ufe26\u010c\ufe26\001\002\000\014\017\164\020\166\021\163" +
    "\u010e\065\u0129\064\001\002\000\014\046\ufe1d\051\ufe1d\065" +
    "\ufe1d\072\ufe1d\u010c\ufe1d\001\002\000\014\046\ufe1e\051\ufe1e" +
    "\065\ufe1e\072\ufe1e\u010c\ufe1e\001\002\000\014\046\ufe20\051" +
    "\ufe20\065\ufe20\072\ufe20\u010c\ufe20\001\002\000\010\046\ufe25" +
    "\051\ufe25\u010c\ufe25\001\002\000\014\046\ufe1f\051\ufe1f\065" +
    "\ufe1f\072\ufe1f\u010c\ufe1f\001\002\000\012\012\157\022\160" +
    "\310\046\313\010\001\002\000\006\046\ufe28\051\ufe28\001" +
    "\002\000\006\046\ufe24\051\ufe24\001\002\000\004\061\214" +
    "\001\002\000\004\051\174\001\002\000\014\065\200\133" +
    "\024\140\042\236\012\251\011\001\002\000\006\325\205" +
    "\u010b\203\001\002\000\006\325\ufe3d\u010b\ufe3d\001\002\000" +
    "\006\325\ufe19\u010b\ufe19\001\002\000\012\133\024\140\042" +
    "\236\012\251\011\001\002\000\004\274\202\001\002\000" +
    "\006\325\ufe1a\u010b\ufe1a\001\002\000\072\002\uffe9\003\uffe9" +
    "\006\uffe9\037\uffe9\065\uffe9\071\uffe9\072\uffe9\106\uffe9\122" +
    "\uffe9\133\uffe9\140\uffe9\142\uffe9\167\uffe9\227\uffe9\230\uffe9" +
    "\236\uffe9\251\uffe9\263\uffe9\264\uffe9\274\uffe9\310\uffe9\313" +
    "\uffe9\322\uffe9\325\uffe9\u010b\uffe9\u010e\uffe9\u0117\uffe9\u0129\uffe9" +
    "\001\002\000\020\133\024\140\042\236\012\251\011\274" +
    "\ufe16\325\ufe16\u010b\ufe16\001\002\000\072\002\uffe8\003\uffe8" +
    "\006\uffe8\037\uffe8\065\uffe8\071\uffe8\072\uffe8\106\uffe8\122" +
    "\uffe8\133\uffe8\140\uffe8\142\uffe8\167\uffe8\227\uffe8\230\uffe8" +
    "\236\uffe8\251\uffe8\263\uffe8\264\uffe8\274\uffe8\310\uffe8\313" +
    "\uffe8\322\uffe8\325\uffe8\u010b\uffe8\u010e\uffe8\u0117\uffe8\u0129\uffe8" +
    "\001\002\000\006\325\205\u010b\203\001\002\000\010\274" +
    "\ufe18\325\ufe18\u010b\ufe18\001\002\000\020\133\024\140\042" +
    "\236\012\251\011\274\ufe14\325\ufe14\u010b\ufe14\001\002\000" +
    "\006\325\205\u010b\203\001\002\000\010\274\ufe17\325\ufe17" +
    "\u010b\ufe17\001\002\000\010\274\ufe15\325\ufe15\u010b\ufe15\001" +
    "\002\000\004\051\ufe1c\001\002\000\026\046\ufe54\051\ufe54" +
    "\233\ufe54\312\ufe54\325\ufe54\u010b\ufe54\u010c\ufe54\u0117\ufe54\u0128" +
    "\ufe54\u012b\ufe54\001\002\000\026\046\ufe53\051\ufe53\233\ufe53" +
    "\312\ufe53\325\ufe53\u010b\ufe53\u010c\ufe53\u0117\ufe53\u0128\ufe53\u012b" +
    "\ufe53\001\002\000\012\046\ufe3a\051\ufe3a\312\ufe3a\u0117\ufe3a" +
    "\001\002\000\202\004\uffe5\037\uffe5\042\uffe5\046\uffe5\051" +
    "\uffe5\054\uffe5\063\uffe5\066\uffe5\070\uffe5\102\uffe5\103\uffe5" +
    "\105\uffe5\127\uffe5\134\uffe5\135\uffe5\151\uffe5\152\uffe5\154" +
    "\uffe5\165\uffe5\170\uffe5\215\uffe5\220\uffe5\233\uffe5\236\uffe5" +
    "\237\uffe5\244\uffe5\251\uffe5\263\uffe5\264\uffe5\265\uffe5\267" +
    "\uffe5\304\uffe5\312\uffe5\325\uffe5\326\uffe5\327\uffe5\330\uffe5" +
    "\331\uffe5\332\uffe5\u0106\uffe5\u0107\uffe5\u0108\uffe5\u0109\uffe5\u010b" +
    "\uffe5\u010c\uffe5\u010e\uffe5\u0110\uffe5\u0111\uffe5\u0117\uffe5\u011a\uffe5" +
    "\u011b\uffe5\u011c\uffe5\u011d\uffe5\u011e\uffe5\u011f\uffe5\u0120\uffe5\u0121" +
    "\uffe5\u0122\uffe5\u0123\uffe5\u0124\uffe5\u0127\uffe5\u0128\uffe5\u0129\uffe5" +
    "\u012b\uffe5\001\002\000\006\u010e\065\u0129\064\001\002\000" +
    "\202\004\uffe4\037\uffe4\042\uffe4\046\uffe4\051\uffe4\054\uffe4" +
    "\063\uffe4\066\uffe4\070\uffe4\102\uffe4\103\uffe4\105\uffe4\127" +
    "\uffe4\134\uffe4\135\uffe4\151\uffe4\152\uffe4\154\uffe4\165\uffe4" +
    "\170\uffe4\215\uffe4\220\uffe4\233\uffe4\236\uffe4\237\uffe4\244" +
    "\uffe4\251\uffe4\263\uffe4\264\uffe4\265\uffe4\267\uffe4\304\uffe4" +
    "\312\uffe4\325\uffe4\326\uffe4\327\uffe4\330\uffe4\331\uffe4\332" +
    "\uffe4\u0106\uffe4\u0107\uffe4\u0108\uffe4\u0109\uffe4\u010b\uffe4\u010c\uffe4" +
    "\u010e\uffe4\u0110\uffe4\u0111\uffe4\u0117\uffe4\u011a\uffe4\u011b\uffe4\u011c" +
    "\uffe4\u011d\uffe4\u011e\uffe4\u011f\uffe4\u0120\uffe4\u0121\uffe4\u0122\uffe4" +
    "\u0123\uffe4\u0124\uffe4\u0127\uffe4\u0128\uffe4\u0129\uffe4\u012b\uffe4\001" +
    "\002\000\004\u0110\224\001\002\000\006\u0111\ufe11\u0117\074" +
    "\001\002\000\004\u0111\242\001\002\000\006\u010c\237\u0111" +
    "\ufe0d\001\002\000\004\u0111\ufe12\001\002\000\070\051\231" +
    "\337\ufe0b\340\ufe0b\341\ufe0b\342\ufe0b\343\ufe0b\344\ufe0b\345" +
    "\ufe0b\346\ufe0b\347\ufe0b\350\ufe0b\351\ufe0b\352\ufe0b\353\ufe0b" +
    "\354\ufe0b\355\ufe0b\356\ufe0b\357\ufe0b\360\ufe0b\361\ufe0b\362" +
    "\ufe0b\363\ufe0b\364\ufe0b\365\ufe0b\366\ufe0b\367\ufe0b\370\ufe0b" +
    "\001\002\000\072\065\ufe0c\072\ufe0c\337\ufe0c\340\ufe0c\341" +
    "\ufe0c\342\ufe0c\343\ufe0c\344\ufe0c\345\ufe0c\346\ufe0c\347\ufe0c" +
    "\350\ufe0c\351\ufe0c\352\ufe0c\353\ufe0c\354\ufe0c\355\ufe0c\356" +
    "\ufe0c\357\ufe0c\360\ufe0c\361\ufe0c\362\ufe0c\363\ufe0c\364\ufe0c" +
    "\365\ufe0c\366\ufe0c\367\ufe0c\370\ufe0c\001\002\000\066\337" +
    "\105\340\102\341\122\342\131\343\121\344\104\345\076" +
    "\346\126\347\111\350\117\351\130\352\107\353\101\354" +
    "\110\355\077\356\125\357\124\360\106\361\127\362\116" +
    "\363\113\364\133\365\132\366\100\367\103\370\120\001" +
    "\002\000\012\011\ufe2f\u010c\ufe2f\u0111\ufe2f\u0123\141\001\002" +
    "\000\010\011\236\u010c\ufe09\u0111\ufe09\001\002\000\006\u010c" +
    "\ufe0f\u0111\ufe0f\001\002\000\006\u010c\ufe0a\u0111\ufe0a\001\002" +
    "\000\004\u0117\074\001\002\000\004\u0111\ufe10\001\002\000" +
    "\004\u0111\ufe0e\001\002\000\004\013\243\001\002\000\070" +
    "\174\247\337\105\340\102\341\122\342\131\343\121\344" +
    "\104\345\076\346\126\347\111\350\117\351\130\352\107" +
    "\353\101\354\110\355\077\356\125\357\124\360\106\361" +
    "\127\362\116\363\113\364\133\365\132\366\100\367\103" +
    "\370\120\001\002\000\006\325\ufe07\u010b\ufe07\001\002\000" +
    "\006\325\ufe13\u010b\ufe13\001\002\000\010\051\ufe04\065\ufe04" +
    "\312\252\001\002\000\010\051\ufe04\072\ufe04\312\252\001" +
    "\002\000\006\325\ufe08\u010b\ufe08\001\002\000\006\051\231" +
    "\072\ufe0b\001\002\000\014\012\257\013\254\014\256\015" +
    "\255\313\253\001\002\000\004\051\273\001\002\000\004" +
    "\220\267\001\002\000\004\237\264\001\002\000\012\051" +
    "\ufe00\065\ufe00\072\ufe00\u010c\ufe00\001\002\000\012\051\ufe01" +
    "\065\ufe01\072\ufe01\u010c\ufe01\001\002\000\012\051\ufe02\065" +
    "\ufe02\072\ufe02\u010c\262\001\002\000\010\051\ufe05\065\ufe05" +
    "\072\ufe05\001\002\000\012\051\ufe04\065\ufe04\072\ufe04\312" +
    "\252\001\002\000\010\051\ufe03\065\ufe03\072\ufe03\001\002" +
    "\000\004\220\265\001\002\000\004\u0101\266\001\002\000" +
    "\012\051\ufdfe\065\ufdfe\072\ufdfe\u010c\ufdfe\001\002\000\004" +
    "\237\270\001\002\000\004\220\271\001\002\000\004\u0101" +
    "\272\001\002\000\012\051\ufdff\065\ufdff\072\ufdff\u010c\ufdff" +
    "\001\002\000\014\017\164\020\166\021\163\u010e\065\u0129" +
    "\064\001\002\000\012\051\ufdfd\065\ufdfd\072\ufdfd\u010c\ufdfd" +
    "\001\002\000\004\072\276\001\002\000\006\133\024\u0110" +
    "\300\001\002\000\006\325\ufe06\u010b\ufe06\001\002\000\004" +
    "\133\024\001\002\000\006\325\ufdfb\u010b\ufdfb\001\002\000" +
    "\004\u0111\303\001\002\000\006\325\ufdfc\u010b\ufdfc\001\002" +
    "\000\006\051\231\065\ufe0b\001\002\000\004\065\306\001" +
    "\002\000\012\133\024\140\042\236\012\251\011\001\002" +
    "\000\006\325\205\u010b\203\001\002\000\004\072\311\001" +
    "\002\000\006\u0117\074\u0128\312\001\002\000\004\274\ufdf8" +
    "\001\002\000\004\274\315\001\002\000\004\274\ufdf9\001" +
    "\002\000\006\325\ufdfa\u010b\ufdfa\001\002\000\006\325\ufe5d" +
    "\u010b\ufe5d\001\002\000\016\325\ufe63\372\ufe63\u010b\ufe63\u010e" +
    "\ufe63\u0117\ufe63\u0129\ufe63\001\002\000\014\325\ufe5e\u010b\ufe5e" +
    "\u010e\065\u0117\074\u0129\064\001\002\000\016\325\ufe64\372" +
    "\ufe64\u010b\ufe64\u010e\ufe64\u0117\ufe64\u0129\ufe64\001\002\000\006" +
    "\325\ufe60\u010b\ufe60\001\002\000\006\325\ufe5c\u010b\ufe5c\001" +
    "\002\000\006\325\ufe5f\u010b\ufe5f\001\002\000\004\002\001" +
    "\001\002\000\062\002\ufffe\003\030\006\ufe55\037\015\065" +
    "\023\071\ufe55\106\052\122\041\133\024\140\042\142\047" +
    "\167\043\227\006\230\034\236\012\251\011\263\044\264" +
    "\021\310\046\313\010\322\ufe55\u010e\ufe48\u0117\ufe48\u0129\ufe48" +
    "\001\002\000\004\002\000\001\002\000\006\325\ufe5a\u010b" +
    "\ufe5a\001\002\000\014\325\ufe5e\u010b\ufe5e\u010e\065\u0117\074" +
    "\u0129\064\001\002\000\006\325\ufe59\u010b\ufe59\001\002\000" +
    "\006\325\uffb8\u010b\uffb8\001\002\000\004\124\346\001\002" +
    "\000\004\124\346\001\002\000\004\124\346\001\002\000" +
    "\006\325\uffb5\u010b\uffb5\001\002\000\006\325\uffb9\u010b\uffb9" +
    "\001\002\000\006\325\uffb7\u010b\uffb7\001\002\000\004\124" +
    "\346\001\002\000\004\124\346\001\002\000\006\325\uffb4" +
    "\u010b\uffb4\001\002\000\006\325\uffb6\u010b\uffb6\001\002\000" +
    "\004\316\355\001\002\000\006\u010e\065\u0129\064\001\002" +
    "\000\010\325\uffae\u010b\uffae\u010c\352\001\002\000\006\325" +
    "\uffb0\u010b\uffb0\001\002\000\006\u010e\065\u0129\064\001\002" +
    "\000\010\325\uffae\u010b\uffae\u010c\352\001\002\000\006\325" +
    "\uffaf\u010b\uffaf\001\002\000\006\u010e\uffdc\u0129\uffdc\001\002" +
    "\000\006\u010e\065\u0129\064\001\002\000\174\004\uffe0\037" +
    "\uffe0\042\uffe0\046\uffe0\051\uffe0\054\uffe0\063\uffe0\066\uffe0" +
    "\070\uffe0\102\uffe0\103\uffe0\105\uffe0\127\uffe0\134\uffe0\135" +
    "\uffe0\151\uffe0\152\uffe0\154\uffe0\165\uffe0\170\uffe0\215\uffe0" +
    "\220\uffe0\233\uffe0\237\uffe0\244\uffe0\263\uffe0\264\uffe0\265" +
    "\uffe0\267\uffe0\304\uffe0\325\uffe0\326\uffe0\327\uffe0\330\uffe0" +
    "\331\uffe0\332\uffe0\u0106\uffe0\u0107\uffe0\u0108\uffe0\u0109\uffe0\u010b" +
    "\uffe0\u010c\uffe0\u010d\366\u010e\uffe0\u0110\uffe0\u0111\uffe0\u011a\uffe0" +
    "\u011b\uffe0\u011c\uffe0\u011d\uffe0\u011e\uffe0\u011f\uffe0\u0120\uffe0\u0121" +
    "\uffe0\u0122\uffe0\u0123\uffe0\u0124\uffe0\u0127\uffe0\u0128\uffe0\u0129\uffe0" +
    "\u012b\uffe0\001\002\000\010\325\uffb1\u010b\uffb1\u010c\362\001" +
    "\002\000\006\325\uffb3\u010b\uffb3\001\002\000\006\u010e\065" +
    "\u0129\064\001\002\000\010\325\uffb1\u010b\uffb1\u010c\362\001" +
    "\002\000\006\325\uffb2\u010b\uffb2\001\002\000\172\004\uffe2" +
    "\037\uffe2\042\uffe2\046\uffe2\051\uffe2\054\uffe2\063\uffe2\066" +
    "\uffe2\070\uffe2\102\uffe2\103\uffe2\105\uffe2\127\uffe2\134\uffe2" +
    "\135\uffe2\151\uffe2\152\uffe2\154\uffe2\165\uffe2\170\uffe2\215" +
    "\uffe2\220\uffe2\233\uffe2\237\uffe2\244\uffe2\263\uffe2\264\uffe2" +
    "\265\uffe2\267\uffe2\304\uffe2\325\uffe2\326\uffe2\327\uffe2\330" +
    "\uffe2\331\uffe2\332\uffe2\u0106\uffe2\u0107\uffe2\u0108\uffe2\u0109\uffe2" +
    "\u010b\uffe2\u010c\uffe2\u010e\uffe2\u0110\uffe2\u0111\uffe2\u011a\uffe2\u011b" +
    "\uffe2\u011c\uffe2\u011d\uffe2\u011e\uffe2\u011f\uffe2\u0120\uffe2\u0121\uffe2" +
    "\u0122\uffe2\u0123\uffe2\u0124\uffe2\u0127\uffe2\u0128\uffe2\u0129\uffe2\u012b" +
    "\uffe2\001\002\000\006\u010e\065\u0129\064\001\002\000\172" +
    "\004\uffe1\037\uffe1\042\uffe1\046\uffe1\051\uffe1\054\uffe1\063" +
    "\uffe1\066\uffe1\070\uffe1\102\uffe1\103\uffe1\105\uffe1\127\uffe1" +
    "\134\uffe1\135\uffe1\151\uffe1\152\uffe1\154\uffe1\165\uffe1\170" +
    "\uffe1\215\uffe1\220\uffe1\233\uffe1\237\uffe1\244\uffe1\263\uffe1" +
    "\264\uffe1\265\uffe1\267\uffe1\304\uffe1\325\uffe1\326\uffe1\327" +
    "\uffe1\330\uffe1\331\uffe1\332\uffe1\u0106\uffe1\u0107\uffe1\u0108\uffe1" +
    "\u0109\uffe1\u010b\uffe1\u010c\uffe1\u010e\uffe1\u0110\uffe1\u0111\uffe1\u011a" +
    "\uffe1\u011b\uffe1\u011c\uffe1\u011d\uffe1\u011e\uffe1\u011f\uffe1\u0120\uffe1" +
    "\u0121\uffe1\u0122\uffe1\u0123\uffe1\u0124\uffe1\u0127\uffe1\u0128\uffe1\u0129" +
    "\uffe1\u012b\uffe1\001\002\000\006\u010e\065\u0129\064\001\002" +
    "\000\006\325\uffad\u010b\uffad\001\002\000\006\u010e\065\u0129" +
    "\064\001\002\000\004\237\u0101\001\002\000\010\325\uffa6" +
    "\u010b\uffa6\u010c\375\001\002\000\006\u010e\065\u0129\064\001" +
    "\002\000\006\325\uffa9\u010b\uffa9\001\002\000\010\325\uffa6" +
    "\u010b\uffa6\u010c\375\001\002\000\006\325\uffa7\u010b\uffa7\001" +
    "\002\000\006\u010e\065\u0129\064\001\002\000\010\325\uffa8" +
    "\u010b\uffa8\u010c\uffa8\001\002\000\006\u010e\065\u0129\064\001" +
    "\002\000\010\325\uffaa\u010b\uffaa\u010c\u0105\001\002\000\006" +
    "\u010e\065\u0129\064\001\002\000\006\325\uffac\u010b\uffac\001" +
    "\002\000\010\325\uffaa\u010b\uffaa\u010c\u0105\001\002\000\006" +
    "\325\uffab\u010b\uffab\001\002\000\006\325\uff18\u010b\uff18\001" +
    "\002\000\006\325\uff1a\u010b\uff1a\001\002\000\006\325\uff16" +
    "\u010b\uff16\001\002\000\006\325\uff19\u010b\uff19\001\002\000" +
    "\006\325\uff1b\u010b\uff1b\001\002\000\006\u010e\065\u0129\064" +
    "\001\002\000\006\325\uff1c\u010b\uff1c\001\002\000\006\u010e" +
    "\065\u0129\064\001\002\000\010\126\ufeed\132\ufeed\212\ufeed" +
    "\001\002\000\006\u010e\065\u0129\064\001\002\000\006\u010e" +
    "\065\u0129\064\001\002\000\010\126\u0119\132\ufeab\212\u0118" +
    "\001\002\000\006\325\uff15\u010b\uff15\001\002\000\006\325" +
    "\uff17\u010b\uff17\001\002\000\004\132\u011a\001\002\000\032" +
    "\052\ufeac\056\ufeac\115\ufeac\132\ufeac\150\ufeac\243\ufeac\314" +
    "\ufeac\325\ufeac\u010b\ufeac\u010c\ufeac\u0110\ufeac\u0111\ufeac\001\002" +
    "\000\032\052\ufead\056\ufead\115\ufead\132\ufead\150\ufead\243" +
    "\ufead\314\ufead\325\ufead\u010b\ufead\u010c\ufead\u0110\ufead\u0111\ufead" +
    "\001\002\000\006\u010e\065\u0129\064\001\002\000\004\237" +
    "\u011c\001\002\000\006\u010e\065\u0129\064\001\002\000\004" +
    "\u0110\u011f\001\002\000\014\237\ufee6\304\ufee6\323\u012c\325" +
    "\ufee6\u010b\ufee6\001\002\000\006\u010e\065\u0129\064\001\002" +
    "\000\012\054\u0124\244\u0125\u010c\uff5a\u0111\uff5a\001\002\000" +
    "\004\u0111\u0122\001\002\000\014\237\ufeeb\304\ufeeb\323\ufeeb" +
    "\325\ufeeb\u010b\ufeeb\001\002\000\006\u010c\u0126\u0111\ufee8\001" +
    "\002\000\046\046\uff5c\220\uff5c\325\uff5c\326\uff5c\327\uff5c" +
    "\330\uff5c\331\uff5c\332\uff5c\u010b\uff5c\u010c\uff5c\u010e\uff5c\u0110" +
    "\uff5c\u0111\uff5c\u0124\uff5c\u0127\uff5c\u0128\uff5c\u0129\uff5c\u012b\uff5c" +
    "\001\002\000\046\046\uff5b\220\uff5b\325\uff5b\326\uff5b\327" +
    "\uff5b\330\uff5b\331\uff5b\332\uff5b\u010b\uff5b\u010c\uff5b\u010e\uff5b" +
    "\u0110\uff5b\u0111\uff5b\u0124\uff5b\u0127\uff5b\u0128\uff5b\u0129\uff5b\u012b" +
    "\uff5b\001\002\000\006\u010e\065\u0129\064\001\002\000\004" +
    "\u0111\ufeea\001\002\000\012\054\u0124\244\u0125\u010c\uff5a\u0111" +
    "\uff5a\001\002\000\006\u010c\u0126\u0111\ufee8\001\002\000\004" +
    "\u0111\ufee9\001\002\000\012\237\uff67\304\u0136\325\uff67\u010b" +
    "\uff67\001\002\000\004\u0110\u012e\001\002\000\012\237\ufee7" +
    "\304\ufee7\325\ufee7\u010b\ufee7\001\002\000\006\u010e\065\u0129" +
    "\064\001\002\000\012\325\uff3f\u010b\uff3f\u010c\u0133\u0111\uff3f" +
    "\001\002\000\004\u0111\u0131\001\002\000\020\051\uff42\233" +
    "\uff42\237\uff42\265\uff42\304\uff42\325\uff42\u010b\uff42\001\002" +
    "\000\010\325\uff41\u010b\uff41\u0111\uff41\001\002\000\006\u010e" +
    "\065\u0129\064\001\002\000\012\325\uff3f\u010b\uff3f\u010c\u0133" +
    "\u0111\uff3f\001\002\000\010\325\uff40\u010b\uff40\u0111\uff40\001" +
    "\002\000\036\215\u013f\220\uff83\326\uff83\327\uff83\330\uff83" +
    "\331\uff83\332\uff83\u010e\uff83\u0110\u0141\u0124\uff83\u0127\uff83\u0128" +
    "\uff83\u0129\uff83\u012b\uff83\001\002\000\010\237\u0138\325\ufee4" +
    "\u010b\ufee4\001\002\000\006\u010e\065\u0129\064\001\002\000" +
    "\006\325\ufeee\u010b\ufeee\001\002\000\004\u0110\u013b\001\002" +
    "\000\006\u010e\065\u0129\064\001\002\000\004\u0111\u013d\001" +
    "\002\000\006\325\ufee5\u010b\ufee5\001\002\000\034\220\u0159" +
    "\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u010e\065\u0110" +
    "\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156\001\002" +
    "\000\042\070\uff84\127\uff84\170\uff84\220\uff84\326\uff84\327" +
    "\uff84\330\uff84\331\uff84\332\uff84\u010e\uff84\u0110\uff84\u0124\uff84" +
    "\u0127\uff84\u0128\uff84\u0129\uff84\u012b\uff84\001\002\000\022\046" +
    "\uff68\102\uff68\105\uff68\237\uff68\267\uff68\325\uff68\u010b\uff68" +
    "\u0111\uff68\001\002\000\036\215\u013f\220\uff83\326\uff83\327" +
    "\uff83\330\uff83\331\uff83\332\uff83\u010e\uff83\u0110\u0141\u0124\uff83" +
    "\u0127\uff83\u0128\uff83\u0129\uff83\u012b\uff83\001\002\000\004\u0111" +
    "\u0143\001\002\000\044\042\u0145\046\uff7b\066\uff7b\102\uff7b" +
    "\103\uff7b\105\uff7b\135\uff7b\154\uff7b\165\uff7b\237\uff7b\264" +
    "\u0147\267\uff7b\304\uff7b\325\uff7b\u010b\uff7b\u010c\uff7b\u0111\uff7b" +
    "\001\002\000\044\042\uff7d\046\uff7d\066\uff7d\102\uff7d\103" +
    "\uff7d\105\uff7d\135\uff7d\154\uff7d\165\uff7d\237\uff7d\264\uff7d" +
    "\267\uff7d\304\uff7d\325\uff7d\u010b\uff7d\u010c\uff7d\u0111\uff7d\001" +
    "\002\000\036\215\uff6a\220\uff6a\326\uff6a\327\uff6a\330\uff6a" +
    "\331\uff6a\332\uff6a\u010e\uff6a\u0110\uff6a\u0124\uff6a\u0127\uff6a\u0128" +
    "\uff6a\u0129\uff6a\u012b\uff6a\001\002\000\036\215\u013f\220\uff83" +
    "\326\uff83\327\uff83\330\uff83\331\uff83\332\uff83\u010e\uff83\u0110" +
    "\u0141\u0124\uff83\u0127\uff83\u0128\uff83\u0129\uff83\u012b\uff83\001\002" +
    "\000\036\215\uff69\220\uff69\326\uff69\327\uff69\330\uff69\331" +
    "\uff69\332\uff69\u010e\uff69\u0110\uff69\u0124\uff69\u0127\uff69\u0128\uff69" +
    "\u0129\uff69\u012b\uff69\001\002\000\044\042\uff7c\046\uff7c\066" +
    "\uff7c\102\uff7c\103\uff7c\105\uff7c\135\uff7c\154\uff7c\165\uff7c" +
    "\237\uff7c\264\uff7c\267\uff7c\304\uff7c\325\uff7c\u010b\uff7c\u010c" +
    "\uff7c\u0111\uff7c\001\002\000\156\042\uff92\046\uff92\051\uff92" +
    "\054\uff92\063\uff92\066\uff92\070\uff92\102\uff92\103\uff92\105" +
    "\uff92\127\uff92\134\uff92\135\uff92\151\uff92\154\uff92\165\uff92" +
    "\170\uff92\215\uff92\220\uff92\237\uff92\244\uff92\264\uff92\267" +
    "\uff92\304\uff92\325\uff92\326\uff92\327\uff92\330\uff92\331\uff92" +
    "\332\uff92\u0106\uff92\u0107\uff92\u0108\uff92\u0109\uff92\u010b\uff92\u010c" +
    "\uff92\u010e\uff92\u0110\uff92\u0111\uff92\u011a\uff92\u011b\uff92\u011c\uff92" +
    "\u011d\uff92\u011e\uff92\u011f\uff92\u0120\uff92\u0121\uff92\u0122\uff92\u0123" +
    "\uff92\u0124\uff92\u0127\uff92\u0128\uff92\u0129\uff92\u012b\uff92\001\002" +
    "\000\040\070\uff83\127\uff83\151\u018d\170\uff83\215\u013f\u011a" +
    "\u0182\u011b\u0183\u011c\u0186\u011d\u0187\u011e\u0185\u011f\u0188\u0120\u0184" +
    "\u0121\u018a\u0122\u018c\u0123\u0189\001\002\000\004\u0110\u017f\001" +
    "\002\000\156\042\uff95\046\uff95\051\uff95\054\uff95\063\uff95" +
    "\066\uff95\070\uff95\102\uff95\103\uff95\105\uff95\127\uff95\134" +
    "\uff95\135\uff95\151\uff95\154\uff95\165\uff95\170\uff95\215\uff95" +
    "\220\uff95\237\uff95\244\uff95\264\uff95\267\uff95\304\uff95\325" +
    "\uff95\326\uff95\327\uff95\330\uff95\331\uff95\332\uff95\u0106\uff95" +
    "\u0107\uff95\u0108\uff95\u0109\uff95\u010b\uff95\u010c\uff95\u010e\uff95\u0110" +
    "\uff95\u0111\uff95\u011a\uff95\u011b\uff95\u011c\uff95\u011d\uff95\u011e\uff95" +
    "\u011f\uff95\u0120\uff95\u0121\uff95\u0122\uff95\u0123\uff95\u0124\uff95\u0127" +
    "\uff95\u0128\uff95\u0129\uff95\u012b\uff95\001\002\000\156\042\uff93" +
    "\046\uff93\051\uff93\054\uff93\063\uff93\066\uff93\070\uff93\102" +
    "\uff93\103\uff93\105\uff93\127\uff93\134\uff93\135\uff93\151\uff93" +
    "\154\uff93\165\uff93\170\uff93\215\uff93\220\uff93\237\uff93\244" +
    "\uff93\264\uff93\267\uff93\304\uff93\325\uff93\326\uff93\327\uff93" +
    "\330\uff93\331\uff93\332\uff93\u0106\uff93\u0107\uff93\u0108\uff93\u0109" +
    "\uff93\u010b\uff93\u010c\uff93\u010e\uff93\u0110\uff93\u0111\uff93\u011a\uff93" +
    "\u011b\uff93\u011c\uff93\u011d\uff93\u011e\uff93\u011f\uff93\u0120\uff93\u0121" +
    "\uff93\u0122\uff93\u0123\uff93\u0124\uff93\u0127\uff93\u0128\uff93\u0129\uff93" +
    "\u012b\uff93\001\002\000\156\042\uff94\046\uff94\051\uff94\054" +
    "\uff94\063\uff94\066\uff94\070\uff94\102\uff94\103\uff94\105\uff94" +
    "\127\uff94\134\uff94\135\uff94\151\uff94\154\uff94\165\uff94\170" +
    "\uff94\215\uff94\220\uff94\237\uff94\244\uff94\264\uff94\267\uff94" +
    "\304\uff94\325\uff94\326\uff94\327\uff94\330\uff94\331\uff94\332" +
    "\uff94\u0106\uff94\u0107\uff94\u0108\uff94\u0109\uff94\u010b\uff94\u010c\uff94" +
    "\u010e\uff94\u0110\uff94\u0111\uff94\u011a\uff94\u011b\uff94\u011c\uff94\u011d" +
    "\uff94\u011e\uff94\u011f\uff94\u0120\uff94\u0121\uff94\u0122\uff94\u0123\uff94" +
    "\u0124\uff94\u0127\uff94\u0128\uff94\u0129\uff94\u012b\uff94\001\002\000" +
    "\160\042\uffdd\046\uffdd\051\uffdd\054\uffdd\063\uffdd\066\uffdd" +
    "\070\uffdd\102\uffdd\103\uffdd\105\uffdd\127\uffdd\134\uffdd\135" +
    "\uffdd\151\uffdd\154\uffdd\165\uffdd\170\uffdd\215\uffdd\220\uffdd" +
    "\237\uffdd\244\uffdd\264\uffdd\267\uffdd\304\uffdd\325\uffdd\326" +
    "\uffdd\327\uffdd\330\uffdd\331\uffdd\332\uffdd\u0106\uffdd\u0107\uffdd" +
    "\u0108\uffdd\u0109\uffdd\u010b\uffdd\u010c\uffdd\u010d\u017d\u010e\uffdd\u0110" +
    "\uffdd\u0111\uffdd\u011a\uffdd\u011b\uffdd\u011c\uffdd\u011d\uffdd\u011e\uffdd" +
    "\u011f\uffdd\u0120\uffdd\u0121\uffdd\u0122\uffdd\u0123\uffdd\u0124\uffdd\u0127" +
    "\uffdd\u0128\uffdd\u0129\uffdd\u012b\uffdd\001\002\000\156\042\uff96" +
    "\046\uff96\051\uff96\054\uff96\063\uff96\066\uff96\070\uff96\102" +
    "\uff96\103\uff96\105\uff96\127\uff96\134\uff96\135\uff96\151\uff96" +
    "\154\uff96\165\uff96\170\uff96\215\uff96\220\uff96\237\uff96\244" +
    "\uff96\264\uff96\267\uff96\304\uff96\325\uff96\326\uff96\327\uff96" +
    "\330\uff96\331\uff96\332\uff96\u0106\uff96\u0107\uff96\u0108\uff96\u0109" +
    "\uff96\u010b\uff96\u010c\uff96\u010e\uff96\u0110\uff96\u0111\uff96\u011a\uff96" +
    "\u011b\uff96\u011c\uff96\u011d\uff96\u011e\uff96\u011f\uff96\u0120\uff96\u0121" +
    "\uff96\u0122\uff96\u0123\uff96\u0124\uff96\u0127\uff96\u0128\uff96\u0129\uff96" +
    "\u012b\uff96\001\002\000\156\042\uff98\046\uff98\051\uff98\054" +
    "\uff98\063\uff98\066\uff98\070\uff98\102\uff98\103\uff98\105\uff98" +
    "\127\uff98\134\uff98\135\uff98\151\uff98\154\uff98\165\uff98\170" +
    "\uff98\215\uff98\220\uff98\237\uff98\244\uff98\264\uff98\267\uff98" +
    "\304\uff98\325\uff98\326\uff98\327\uff98\330\uff98\331\uff98\332" +
    "\uff98\u0106\uff98\u0107\uff98\u0108\u0176\u0109\u0177\u010b\uff98\u010c\uff98" +
    "\u010e\uff98\u0110\uff98\u0111\uff98\u011a\uff98\u011b\uff98\u011c\uff98\u011d" +
    "\uff98\u011e\uff98\u011f\uff98\u0120\uff98\u0121\uff98\u0122\uff98\u0123\uff98" +
    "\u0124\uff98\u0127\uff98\u0128\uff98\u0129\uff98\u012b\uff98\001\002\000" +
    "\044\042\u0145\046\uff7b\066\uff7b\102\uff7b\103\uff7b\105\uff7b" +
    "\135\uff7b\154\uff7b\165\uff7b\237\uff7b\264\u0147\267\uff7b\304" +
    "\uff7b\325\uff7b\u010b\uff7b\u010c\uff7b\u0111\uff7b\001\002\000\152" +
    "\042\uff9c\046\uff9c\051\uff9c\054\uff9c\063\uff9c\066\uff9c\070" +
    "\uff9c\102\uff9c\103\uff9c\105\uff9c\127\uff9c\134\uff9c\135\uff9c" +
    "\151\uff9c\154\uff9c\165\uff9c\170\uff9c\215\uff9c\220\uff9c\237" +
    "\uff9c\244\uff9c\264\uff9c\267\uff9c\304\uff9c\325\uff9c\326\uff9c" +
    "\327\uff9c\330\uff9c\331\uff9c\332\uff9c\u0106\u016f\u0107\u016e\u010b" +
    "\uff9c\u010c\uff9c\u010e\uff9c\u0110\uff9c\u0111\uff9c\u011a\uff9c\u011b\uff9c" +
    "\u011c\uff9c\u011d\uff9c\u011e\uff9c\u011f\uff9c\u0120\uff9c\u0121\uff9c\u0122" +
    "\uff9c\u0123\uff9c\u0124\uff9c\u0127\uff9c\u0128\uff9c\u0129\uff9c\u012b\uff9c" +
    "\001\002\000\004\u0110\u016b\001\002\000\004\u0110\u0169\001" +
    "\002\000\156\042\uff91\046\uff91\051\uff91\054\uff91\063\uff91" +
    "\066\uff91\070\uff91\102\uff91\103\uff91\105\uff91\127\uff91\134" +
    "\uff91\135\uff91\151\uff91\154\uff91\165\uff91\170\uff91\215\uff91" +
    "\220\uff91\237\uff91\244\uff91\264\uff91\267\uff91\304\uff91\325" +
    "\uff91\326\uff91\327\uff91\330\uff91\331\uff91\332\uff91\u0106\uff91" +
    "\u0107\uff91\u0108\uff91\u0109\uff91\u010b\uff91\u010c\uff91\u010e\uff91\u0110" +
    "\uff91\u0111\uff91\u011a\uff91\u011b\uff91\u011c\uff91\u011d\uff91\u011e\uff91" +
    "\u011f\uff91\u0120\uff91\u0121\uff91\u0122\uff91\u0123\uff91\u0124\uff91\u0127" +
    "\uff91\u0128\uff91\u0129\uff91\u012b\uff91\001\002\000\034\220\u0159" +
    "\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u010e\065\u0110" +
    "\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156\001\002" +
    "\000\004\u0110\u0165\001\002\000\156\042\uff90\046\uff90\051" +
    "\uff90\054\uff90\063\uff90\066\uff90\070\uff90\102\uff90\103\uff90" +
    "\105\uff90\127\uff90\134\uff90\135\uff90\151\uff90\154\uff90\165" +
    "\uff90\170\uff90\215\uff90\220\uff90\237\uff90\244\uff90\264\uff90" +
    "\267\uff90\304\uff90\325\uff90\326\uff90\327\uff90\330\uff90\331" +
    "\uff90\332\uff90\u0106\uff90\u0107\uff90\u0108\uff90\u0109\uff90\u010b\uff90" +
    "\u010c\uff90\u010e\uff90\u0110\uff90\u0111\uff90\u011a\uff90\u011b\uff90\u011c" +
    "\uff90\u011d\uff90\u011e\uff90\u011f\uff90\u0120\uff90\u0121\uff90\u0122\uff90" +
    "\u0123\uff90\u0124\uff90\u0127\uff90\u0128\uff90\u0129\uff90\u012b\uff90\001" +
    "\002\000\004\u0110\u015b\001\002\000\014\u0108\u015f\u010e\065" +
    "\u0128\u015d\u0129\064\u012b\u0160\001\002\000\156\042\uff8b\046" +
    "\uff8b\051\uff8b\054\uff8b\063\uff8b\066\uff8b\070\uff8b\102\uff8b" +
    "\103\uff8b\105\uff8b\127\uff8b\134\uff8b\135\uff8b\151\uff8b\154" +
    "\uff8b\165\uff8b\170\uff8b\215\uff8b\220\uff8b\237\uff8b\244\uff8b" +
    "\264\uff8b\267\uff8b\304\uff8b\325\uff8b\326\uff8b\327\uff8b\330" +
    "\uff8b\331\uff8b\332\uff8b\u0106\uff8b\u0107\uff8b\u0108\uff8b\u0109\uff8b" +
    "\u010b\uff8b\u010c\uff8b\u010e\uff8b\u0110\uff8b\u0111\uff8b\u011a\uff8b\u011b" +
    "\uff8b\u011c\uff8b\u011d\uff8b\u011e\uff8b\u011f\uff8b\u0120\uff8b\u0121\uff8b" +
    "\u0122\uff8b\u0123\uff8b\u0124\uff8b\u0127\uff8b\u0128\uff8b\u0129\uff8b\u012b" +
    "\uff8b\001\002\000\004\u0111\u0164\001\002\000\004\u0111\u0163" +
    "\001\002\000\004\u0111\u0162\001\002\000\004\u0111\u0161\001" +
    "\002\000\156\042\uff88\046\uff88\051\uff88\054\uff88\063\uff88" +
    "\066\uff88\070\uff88\102\uff88\103\uff88\105\uff88\127\uff88\134" +
    "\uff88\135\uff88\151\uff88\154\uff88\165\uff88\170\uff88\215\uff88" +
    "\220\uff88\237\uff88\244\uff88\264\uff88\267\uff88\304\uff88\325" +
    "\uff88\326\uff88\327\uff88\330\uff88\331\uff88\332\uff88\u0106\uff88" +
    "\u0107\uff88\u0108\uff88\u0109\uff88\u010b\uff88\u010c\uff88\u010e\uff88\u0110" +
    "\uff88\u0111\uff88\u011a\uff88\u011b\uff88\u011c\uff88\u011d\uff88\u011e\uff88" +
    "\u011f\uff88\u0120\uff88\u0121\uff88\u0122\uff88\u0123\uff88\u0124\uff88\u0127" +
    "\uff88\u0128\uff88\u0129\uff88\u012b\uff88\001\002\000\156\042\uff87" +
    "\046\uff87\051\uff87\054\uff87\063\uff87\066\uff87\070\uff87\102" +
    "\uff87\103\uff87\105\uff87\127\uff87\134\uff87\135\uff87\151\uff87" +
    "\154\uff87\165\uff87\170\uff87\215\uff87\220\uff87\237\uff87\244" +
    "\uff87\264\uff87\267\uff87\304\uff87\325\uff87\326\uff87\327\uff87" +
    "\330\uff87\331\uff87\332\uff87\u0106\uff87\u0107\uff87\u0108\uff87\u0109" +
    "\uff87\u010b\uff87\u010c\uff87\u010e\uff87\u0110\uff87\u0111\uff87\u011a\uff87" +
    "\u011b\uff87\u011c\uff87\u011d\uff87\u011e\uff87\u011f\uff87\u0120\uff87\u0121" +
    "\uff87\u0122\uff87\u0123\uff87\u0124\uff87\u0127\uff87\u0128\uff87\u0129\uff87" +
    "\u012b\uff87\001\002\000\156\042\uff8a\046\uff8a\051\uff8a\054" +
    "\uff8a\063\uff8a\066\uff8a\070\uff8a\102\uff8a\103\uff8a\105\uff8a" +
    "\127\uff8a\134\uff8a\135\uff8a\151\uff8a\154\uff8a\165\uff8a\170" +
    "\uff8a\215\uff8a\220\uff8a\237\uff8a\244\uff8a\264\uff8a\267\uff8a" +
    "\304\uff8a\325\uff8a\326\uff8a\327\uff8a\330\uff8a\331\uff8a\332" +
    "\uff8a\u0106\uff8a\u0107\uff8a\u0108\uff8a\u0109\uff8a\u010b\uff8a\u010c\uff8a" +
    "\u010e\uff8a\u0110\uff8a\u0111\uff8a\u011a\uff8a\u011b\uff8a\u011c\uff8a\u011d" +
    "\uff8a\u011e\uff8a\u011f\uff8a\u0120\uff8a\u0121\uff8a\u0122\uff8a\u0123\uff8a" +
    "\u0124\uff8a\u0127\uff8a\u0128\uff8a\u0129\uff8a\u012b\uff8a\001\002\000" +
    "\156\042\uff89\046\uff89\051\uff89\054\uff89\063\uff89\066\uff89" +
    "\070\uff89\102\uff89\103\uff89\105\uff89\127\uff89\134\uff89\135" +
    "\uff89\151\uff89\154\uff89\165\uff89\170\uff89\215\uff89\220\uff89" +
    "\237\uff89\244\uff89\264\uff89\267\uff89\304\uff89\325\uff89\326" +
    "\uff89\327\uff89\330\uff89\331\uff89\332\uff89\u0106\uff89\u0107\uff89" +
    "\u0108\uff89\u0109\uff89\u010b\uff89\u010c\uff89\u010e\uff89\u0110\uff89\u0111" +
    "\uff89\u011a\uff89\u011b\uff89\u011c\uff89\u011d\uff89\u011e\uff89\u011f\uff89" +
    "\u0120\uff89\u0121\uff89\u0122\uff89\u0123\uff89\u0124\uff89\u0127\uff89\u0128" +
    "\uff89\u0129\uff89\u012b\uff89\001\002\000\014\u0108\u015f\u010e\065" +
    "\u0128\u015d\u0129\064\u012b\u0160\001\002\000\156\042\uff8c\046" +
    "\uff8c\051\uff8c\054\uff8c\063\uff8c\066\uff8c\070\uff8c\102\uff8c" +
    "\103\uff8c\105\uff8c\127\uff8c\134\uff8c\135\uff8c\151\uff8c\154" +
    "\uff8c\165\uff8c\170\uff8c\215\uff8c\220\uff8c\237\uff8c\244\uff8c" +
    "\264\uff8c\267\uff8c\304\uff8c\325\uff8c\326\uff8c\327\uff8c\330" +
    "\uff8c\331\uff8c\332\uff8c\u0106\uff8c\u0107\uff8c\u0108\uff8c\u0109\uff8c" +
    "\u010b\uff8c\u010c\uff8c\u010e\uff8c\u0110\uff8c\u0111\uff8c\u011a\uff8c\u011b" +
    "\uff8c\u011c\uff8c\u011d\uff8c\u011e\uff8c\u011f\uff8c\u0120\uff8c\u0121\uff8c" +
    "\u0122\uff8c\u0123\uff8c\u0124\uff8c\u0127\uff8c\u0128\uff8c\u0129\uff8c\u012b" +
    "\uff8c\001\002\000\004\u0111\u0168\001\002\000\156\042\uff97" +
    "\046\uff97\051\uff97\054\uff97\063\uff97\066\uff97\070\uff97\102" +
    "\uff97\103\uff97\105\uff97\127\uff97\134\uff97\135\uff97\151\uff97" +
    "\154\uff97\165\uff97\170\uff97\215\uff97\220\uff97\237\uff97\244" +
    "\uff97\264\uff97\267\uff97\304\uff97\325\uff97\326\uff97\327\uff97" +
    "\330\uff97\331\uff97\332\uff97\u0106\uff97\u0107\uff97\u0108\uff97\u0109" +
    "\uff97\u010b\uff97\u010c\uff97\u010e\uff97\u0110\uff97\u0111\uff97\u011a\uff97" +
    "\u011b\uff97\u011c\uff97\u011d\uff97\u011e\uff97\u011f\uff97\u0120\uff97\u0121" +
    "\uff97\u0122\uff97\u0123\uff97\u0124\uff97\u0127\uff97\u0128\uff97\u0129\uff97" +
    "\u012b\uff97\001\002\000\014\u0108\u015f\u010e\065\u0128\u015d\u0129" +
    "\064\u012b\u0160\001\002\000\156\042\uff8d\046\uff8d\051\uff8d" +
    "\054\uff8d\063\uff8d\066\uff8d\070\uff8d\102\uff8d\103\uff8d\105" +
    "\uff8d\127\uff8d\134\uff8d\135\uff8d\151\uff8d\154\uff8d\165\uff8d" +
    "\170\uff8d\215\uff8d\220\uff8d\237\uff8d\244\uff8d\264\uff8d\267" +
    "\uff8d\304\uff8d\325\uff8d\326\uff8d\327\uff8d\330\uff8d\331\uff8d" +
    "\332\uff8d\u0106\uff8d\u0107\uff8d\u0108\uff8d\u0109\uff8d\u010b\uff8d\u010c" +
    "\uff8d\u010e\uff8d\u0110\uff8d\u0111\uff8d\u011a\uff8d\u011b\uff8d\u011c\uff8d" +
    "\u011d\uff8d\u011e\uff8d\u011f\uff8d\u0120\uff8d\u0121\uff8d\u0122\uff8d\u0123" +
    "\uff8d\u0124\uff8d\u0127\uff8d\u0128\uff8d\u0129\uff8d\u012b\uff8d\001\002" +
    "\000\014\u0108\u015f\u010e\065\u0128\u015d\u0129\064\u012b\u0160\001" +
    "\002\000\156\042\uff8e\046\uff8e\051\uff8e\054\uff8e\063\uff8e" +
    "\066\uff8e\070\uff8e\102\uff8e\103\uff8e\105\uff8e\127\uff8e\134" +
    "\uff8e\135\uff8e\151\uff8e\154\uff8e\165\uff8e\170\uff8e\215\uff8e" +
    "\220\uff8e\237\uff8e\244\uff8e\264\uff8e\267\uff8e\304\uff8e\325" +
    "\uff8e\326\uff8e\327\uff8e\330\uff8e\331\uff8e\332\uff8e\u0106\uff8e" +
    "\u0107\uff8e\u0108\uff8e\u0109\uff8e\u010b\uff8e\u010c\uff8e\u010e\uff8e\u0110" +
    "\uff8e\u0111\uff8e\u011a\uff8e\u011b\uff8e\u011c\uff8e\u011d\uff8e\u011e\uff8e" +
    "\u011f\uff8e\u0120\uff8e\u0121\uff8e\u0122\uff8e\u0123\uff8e\u0124\uff8e\u0127" +
    "\uff8e\u0128\uff8e\u0129\uff8e\u012b\uff8e\001\002\000\146\042\uff9f" +
    "\046\uff9f\051\uff9f\054\uff9f\063\uff9f\066\uff9f\070\uff9f\102" +
    "\uff9f\103\uff9f\105\uff9f\127\uff9f\134\uff9f\135\uff9f\151\uff9f" +
    "\154\uff9f\165\uff9f\170\uff9f\215\uff9f\220\uff9f\237\uff9f\244" +
    "\uff9f\264\uff9f\267\uff9f\304\uff9f\325\uff9f\326\uff9f\327\uff9f" +
    "\330\uff9f\331\uff9f\332\uff9f\u010b\uff9f\u010c\uff9f\u010e\uff9f\u0110" +
    "\uff9f\u0111\uff9f\u011a\uff9f\u011b\uff9f\u011c\uff9f\u011d\uff9f\u011e\uff9f" +
    "\u011f\uff9f\u0120\uff9f\u0121\uff9f\u0122\uff9f\u0123\uff9f\u0124\uff9f\u0127" +
    "\uff9f\u0128\uff9f\u0129\uff9f\u012b\uff9f\001\002\000\034\220\u0159" +
    "\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u010e\065\u0110" +
    "\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156\001\002" +
    "\000\034\220\u0159\326\u014b\327\u0154\330\u015a\331\u0158\332" +
    "\u0155\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064" +
    "\u012b\u0156\001\002\000\152\042\uff9c\046\uff9c\051\uff9c\054" +
    "\uff9c\063\uff9c\066\uff9c\070\uff9c\102\uff9c\103\uff9c\105\uff9c" +
    "\127\uff9c\134\uff9c\135\uff9c\151\uff9c\154\uff9c\165\uff9c\170" +
    "\uff9c\215\uff9c\220\uff9c\237\uff9c\244\uff9c\264\uff9c\267\uff9c" +
    "\304\uff9c\325\uff9c\326\uff9c\327\uff9c\330\uff9c\331\uff9c\332" +
    "\uff9c\u0106\u016f\u0107\u016e\u010b\uff9c\u010c\uff9c\u010e\uff9c\u0110\uff9c" +
    "\u0111\uff9c\u011a\uff9c\u011b\uff9c\u011c\uff9c\u011d\uff9c\u011e\uff9c\u011f" +
    "\uff9c\u0120\uff9c\u0121\uff9c\u0122\uff9c\u0123\uff9c\u0124\uff9c\u0127\uff9c" +
    "\u0128\uff9c\u0129\uff9c\u012b\uff9c\001\002\000\146\042\uff9e\046" +
    "\uff9e\051\uff9e\054\uff9e\063\uff9e\066\uff9e\070\uff9e\102\uff9e" +
    "\103\uff9e\105\uff9e\127\uff9e\134\uff9e\135\uff9e\151\uff9e\154" +
    "\uff9e\165\uff9e\170\uff9e\215\uff9e\220\uff9e\237\uff9e\244\uff9e" +
    "\264\uff9e\267\uff9e\304\uff9e\325\uff9e\326\uff9e\327\uff9e\330" +
    "\uff9e\331\uff9e\332\uff9e\u010b\uff9e\u010c\uff9e\u010e\uff9e\u0110\uff9e" +
    "\u0111\uff9e\u011a\uff9e\u011b\uff9e\u011c\uff9e\u011d\uff9e\u011e\uff9e\u011f" +
    "\uff9e\u0120\uff9e\u0121\uff9e\u0122\uff9e\u0123\uff9e\u0124\uff9e\u0127\uff9e" +
    "\u0128\uff9e\u0129\uff9e\u012b\uff9e\001\002\000\152\042\uff9c\046" +
    "\uff9c\051\uff9c\054\uff9c\063\uff9c\066\uff9c\070\uff9c\102\uff9c" +
    "\103\uff9c\105\uff9c\127\uff9c\134\uff9c\135\uff9c\151\uff9c\154" +
    "\uff9c\165\uff9c\170\uff9c\215\uff9c\220\uff9c\237\uff9c\244\uff9c" +
    "\264\uff9c\267\uff9c\304\uff9c\325\uff9c\326\uff9c\327\uff9c\330" +
    "\uff9c\331\uff9c\332\uff9c\u0106\u016f\u0107\u016e\u010b\uff9c\u010c\uff9c" +
    "\u010e\uff9c\u0110\uff9c\u0111\uff9c\u011a\uff9c\u011b\uff9c\u011c\uff9c\u011d" +
    "\uff9c\u011e\uff9c\u011f\uff9c\u0120\uff9c\u0121\uff9c\u0122\uff9c\u0123\uff9c" +
    "\u0124\uff9c\u0127\uff9c\u0128\uff9c\u0129\uff9c\u012b\uff9c\001\002\000" +
    "\146\042\uff9d\046\uff9d\051\uff9d\054\uff9d\063\uff9d\066\uff9d" +
    "\070\uff9d\102\uff9d\103\uff9d\105\uff9d\127\uff9d\134\uff9d\135" +
    "\uff9d\151\uff9d\154\uff9d\165\uff9d\170\uff9d\215\uff9d\220\uff9d" +
    "\237\uff9d\244\uff9d\264\uff9d\267\uff9d\304\uff9d\325\uff9d\326" +
    "\uff9d\327\uff9d\330\uff9d\331\uff9d\332\uff9d\u010b\uff9d\u010c\uff9d" +
    "\u010e\uff9d\u0110\uff9d\u0111\uff9d\u011a\uff9d\u011b\uff9d\u011c\uff9d\u011d" +
    "\uff9d\u011e\uff9d\u011f\uff9d\u0120\uff9d\u0121\uff9d\u0122\uff9d\u0123\uff9d" +
    "\u0124\uff9d\u0127\uff9d\u0128\uff9d\u0129\uff9d\u012b\uff9d\001\002\000" +
    "\044\042\uff7e\046\uff7e\066\uff7e\102\uff7e\103\uff7e\105\uff7e" +
    "\135\uff7e\154\uff7e\165\uff7e\237\uff7e\264\uff7e\267\uff7e\304" +
    "\uff7e\325\uff7e\u010b\uff7e\u010c\uff7e\u0111\uff7e\001\002\000\152" +
    "\042\uff9b\046\uff9b\051\uff9b\054\uff9b\063\uff9b\066\uff9b\070" +
    "\uff9b\102\uff9b\103\uff9b\105\uff9b\127\uff9b\134\uff9b\135\uff9b" +
    "\151\uff9b\154\uff9b\165\uff9b\170\uff9b\215\uff9b\220\uff9b\237" +
    "\uff9b\244\uff9b\264\uff9b\267\uff9b\304\uff9b\325\uff9b\326\uff9b" +
    "\327\uff9b\330\uff9b\331\uff9b\332\uff9b\u0106\uff9b\u0107\uff9b\u010b" +
    "\uff9b\u010c\uff9b\u010e\uff9b\u0110\uff9b\u0111\uff9b\u011a\uff9b\u011b\uff9b" +
    "\u011c\uff9b\u011d\uff9b\u011e\uff9b\u011f\uff9b\u0120\uff9b\u0121\uff9b\u0122" +
    "\uff9b\u0123\uff9b\u0124\uff9b\u0127\uff9b\u0128\uff9b\u0129\uff9b\u012b\uff9b" +
    "\001\002\000\034\220\u0159\326\u014b\327\u0154\330\u015a\331" +
    "\u0158\332\u0155\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e" +
    "\u0129\064\u012b\u0156\001\002\000\034\220\u0159\326\u014b\327" +
    "\u0154\330\u015a\331\u0158\332\u0155\u010e\065\u0110\u0157\u0124\u0149" +
    "\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156\001\002\000\156\042" +
    "\uff98\046\uff98\051\uff98\054\uff98\063\uff98\066\uff98\070\uff98" +
    "\102\uff98\103\uff98\105\uff98\127\uff98\134\uff98\135\uff98\151" +
    "\uff98\154\uff98\165\uff98\170\uff98\215\uff98\220\uff98\237\uff98" +
    "\244\uff98\264\uff98\267\uff98\304\uff98\325\uff98\326\uff98\327" +
    "\uff98\330\uff98\331\uff98\332\uff98\u0106\uff98\u0107\uff98\u0108\u0176" +
    "\u0109\u0177\u010b\uff98\u010c\uff98\u010e\uff98\u0110\uff98\u0111\uff98\u011a" +
    "\uff98\u011b\uff98\u011c\uff98\u011d\uff98\u011e\uff98\u011f\uff98\u0120\uff98" +
    "\u0121\uff98\u0122\uff98\u0123\uff98\u0124\uff98\u0127\uff98\u0128\uff98\u0129" +
    "\uff98\u012b\uff98\001\002\000\152\042\uff99\046\uff99\051\uff99" +
    "\054\uff99\063\uff99\066\uff99\070\uff99\102\uff99\103\uff99\105" +
    "\uff99\127\uff99\134\uff99\135\uff99\151\uff99\154\uff99\165\uff99" +
    "\170\uff99\215\uff99\220\uff99\237\uff99\244\uff99\264\uff99\267" +
    "\uff99\304\uff99\325\uff99\326\uff99\327\uff99\330\uff99\331\uff99" +
    "\332\uff99\u0106\uff99\u0107\uff99\u010b\uff99\u010c\uff99\u010e\uff99\u0110" +
    "\uff99\u0111\uff99\u011a\uff99\u011b\uff99\u011c\uff99\u011d\uff99\u011e\uff99" +
    "\u011f\uff99\u0120\uff99\u0121\uff99\u0122\uff99\u0123\uff99\u0124\uff99\u0127" +
    "\uff99\u0128\uff99\u0129\uff99\u012b\uff99\001\002\000\156\042\uff98" +
    "\046\uff98\051\uff98\054\uff98\063\uff98\066\uff98\070\uff98\102" +
    "\uff98\103\uff98\105\uff98\127\uff98\134\uff98\135\uff98\151\uff98" +
    "\154\uff98\165\uff98\170\uff98\215\uff98\220\uff98\237\uff98\244" +
    "\uff98\264\uff98\267\uff98\304\uff98\325\uff98\326\uff98\327\uff98" +
    "\330\uff98\331\uff98\332\uff98\u0106\uff98\u0107\uff98\u0108\u0176\u0109" +
    "\u0177\u010b\uff98\u010c\uff98\u010e\uff98\u0110\uff98\u0111\uff98\u011a\uff98" +
    "\u011b\uff98\u011c\uff98\u011d\uff98\u011e\uff98\u011f\uff98\u0120\uff98\u0121" +
    "\uff98\u0122\uff98\u0123\uff98\u0124\uff98\u0127\uff98\u0128\uff98\u0129\uff98" +
    "\u012b\uff98\001\002\000\152\042\uff9a\046\uff9a\051\uff9a\054" +
    "\uff9a\063\uff9a\066\uff9a\070\uff9a\102\uff9a\103\uff9a\105\uff9a" +
    "\127\uff9a\134\uff9a\135\uff9a\151\uff9a\154\uff9a\165\uff9a\170" +
    "\uff9a\215\uff9a\220\uff9a\237\uff9a\244\uff9a\264\uff9a\267\uff9a" +
    "\304\uff9a\325\uff9a\326\uff9a\327\uff9a\330\uff9a\331\uff9a\332" +
    "\uff9a\u0106\uff9a\u0107\uff9a\u010b\uff9a\u010c\uff9a\u010e\uff9a\u0110\uff9a" +
    "\u0111\uff9a\u011a\uff9a\u011b\uff9a\u011c\uff9a\u011d\uff9a\u011e\uff9a\u011f" +
    "\uff9a\u0120\uff9a\u0121\uff9a\u0122\uff9a\u0123\uff9a\u0124\uff9a\u0127\uff9a" +
    "\u0128\uff9a\u0129\uff9a\u012b\uff9a\001\002\000\156\042\uffdf\046" +
    "\uffdf\051\uffdf\054\uffdf\063\uffdf\066\uffdf\070\uffdf\102\uffdf" +
    "\103\uffdf\105\uffdf\127\uffdf\134\uffdf\135\uffdf\151\uffdf\154" +
    "\uffdf\165\uffdf\170\uffdf\215\uffdf\220\uffdf\237\uffdf\244\uffdf" +
    "\264\uffdf\267\uffdf\304\uffdf\325\uffdf\326\uffdf\327\uffdf\330" +
    "\uffdf\331\uffdf\332\uffdf\u0106\uffdf\u0107\uffdf\u0108\uffdf\u0109\uffdf" +
    "\u010b\uffdf\u010c\uffdf\u010e\uffdf\u0110\uffdf\u0111\uffdf\u011a\uffdf\u011b" +
    "\uffdf\u011c\uffdf\u011d\uffdf\u011e\uffdf\u011f\uffdf\u0120\uffdf\u0121\uffdf" +
    "\u0122\uffdf\u0123\uffdf\u0124\uffdf\u0127\uffdf\u0128\uffdf\u0129\uffdf\u012b" +
    "\uffdf\001\002\000\006\u010e\065\u0129\064\001\002\000\156" +
    "\042\uffde\046\uffde\051\uffde\054\uffde\063\uffde\066\uffde\070" +
    "\uffde\102\uffde\103\uffde\105\uffde\127\uffde\134\uffde\135\uffde" +
    "\151\uffde\154\uffde\165\uffde\170\uffde\215\uffde\220\uffde\237" +
    "\uffde\244\uffde\264\uffde\267\uffde\304\uffde\325\uffde\326\uffde" +
    "\327\uffde\330\uffde\331\uffde\332\uffde\u0106\uffde\u0107\uffde\u0108" +
    "\uffde\u0109\uffde\u010b\uffde\u010c\uffde\u010e\uffde\u0110\uffde\u0111\uffde" +
    "\u011a\uffde\u011b\uffde\u011c\uffde\u011d\uffde\u011e\uffde\u011f\uffde\u0120" +
    "\uffde\u0121\uffde\u0122\uffde\u0123\uffde\u0124\uffde\u0127\uffde\u0128\uffde" +
    "\u0129\uffde\u012b\uffde\001\002\000\014\u0108\u015f\u010e\065\u0128" +
    "\u015d\u0129\064\u012b\u0160\001\002\000\156\042\uff8f\046\uff8f" +
    "\051\uff8f\054\uff8f\063\uff8f\066\uff8f\070\uff8f\102\uff8f\103" +
    "\uff8f\105\uff8f\127\uff8f\134\uff8f\135\uff8f\151\uff8f\154\uff8f" +
    "\165\uff8f\170\uff8f\215\uff8f\220\uff8f\237\uff8f\244\uff8f\264" +
    "\uff8f\267\uff8f\304\uff8f\325\uff8f\326\uff8f\327\uff8f\330\uff8f" +
    "\331\uff8f\332\uff8f\u0106\uff8f\u0107\uff8f\u0108\uff8f\u0109\uff8f\u010b" +
    "\uff8f\u010c\uff8f\u010e\uff8f\u0110\uff8f\u0111\uff8f\u011a\uff8f\u011b\uff8f" +
    "\u011c\uff8f\u011d\uff8f\u011e\uff8f\u011f\uff8f\u0120\uff8f\u0121\uff8f\u0122" +
    "\uff8f\u0123\uff8f\u0124\uff8f\u0127\uff8f\u0128\uff8f\u0129\uff8f\u012b\uff8f" +
    "\001\002\000\010\070\u019c\127\u019b\170\u019a\001\002\000" +
    "\034\220\u0159\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155" +
    "\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b" +
    "\u0156\001\002\000\034\220\u0159\326\u014b\327\u0154\330\u015a" +
    "\331\u0158\332\u0155\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128" +
    "\u014e\u0129\064\u012b\u0156\001\002\000\034\220\u0159\326\u014b" +
    "\327\u0154\330\u015a\331\u0158\332\u0155\u010e\065\u0110\u0157\u0124" +
    "\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156\001\002\000\034" +
    "\220\u0159\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u010e" +
    "\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156" +
    "\001\002\000\034\220\u0159\326\u014b\327\u0154\330\u015a\331" +
    "\u0158\332\u0155\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e" +
    "\u0129\064\u012b\u0156\001\002\000\034\220\u0159\326\u014b\327" +
    "\u0154\330\u015a\331\u0158\332\u0155\u010e\065\u0110\u0157\u0124\u0149" +
    "\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156\001\002\000\034\220" +
    "\u0159\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u010e\065" +
    "\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156\001" +
    "\002\000\034\220\u0159\326\u014b\327\u0154\330\u015a\331\u0158" +
    "\332\u0155\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129" +
    "\064\u012b\u0156\001\002\000\034\220\u0159\326\u014b\327\u0154" +
    "\330\u015a\331\u0158\332\u0155\u010e\065\u0110\u0157\u0124\u0149\u0127" +
    "\u014d\u0128\u014e\u0129\064\u012b\u0156\001\002\000\044\042\uff7a" +
    "\046\uff7a\066\uff7a\102\uff7a\103\uff7a\105\uff7a\135\uff7a\154" +
    "\uff7a\165\uff7a\237\uff7a\264\uff7a\267\uff7a\304\uff7a\325\uff7a" +
    "\u010b\uff7a\u010c\uff7a\u0111\uff7a\001\002\000\034\220\u0159\326" +
    "\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u010e\065\u0110\u0157" +
    "\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156\001\002\000" +
    "\006\215\u013f\220\uff83\001\002\000\004\220\u018f\001\002" +
    "\000\044\042\uff6f\046\uff6f\066\uff6f\102\uff6f\103\uff6f\105" +
    "\uff6f\135\uff6f\154\uff6f\165\uff6f\237\uff6f\264\uff6f\267\uff6f" +
    "\304\uff6f\325\uff6f\u010b\uff6f\u010c\uff6f\u0111\uff6f\001\002\000" +
    "\044\042\uff71\046\uff71\066\uff71\102\uff71\103\uff71\105\uff71" +
    "\135\uff71\154\uff71\165\uff71\237\uff71\264\uff71\267\uff71\304" +
    "\uff71\325\uff71\u010b\uff71\u010c\uff71\u0111\uff71\001\002\000\044" +
    "\042\uff72\046\uff72\066\uff72\102\uff72\103\uff72\105\uff72\135" +
    "\uff72\154\uff72\165\uff72\237\uff72\264\uff72\267\uff72\304\uff72" +
    "\325\uff72\u010b\uff72\u010c\uff72\u0111\uff72\001\002\000\044\042" +
    "\uff70\046\uff70\066\uff70\102\uff70\103\uff70\105\uff70\135\uff70" +
    "\154\uff70\165\uff70\237\uff70\264\uff70\267\uff70\304\uff70\325" +
    "\uff70\u010b\uff70\u010c\uff70\u0111\uff70\001\002\000\044\042\uff74" +
    "\046\uff74\066\uff74\102\uff74\103\uff74\105\uff74\135\uff74\154" +
    "\uff74\165\uff74\237\uff74\264\uff74\267\uff74\304\uff74\325\uff74" +
    "\u010b\uff74\u010c\uff74\u0111\uff74\001\002\000\044\042\uff76\046" +
    "\uff76\066\uff76\102\uff76\103\uff76\105\uff76\135\uff76\154\uff76" +
    "\165\uff76\237\uff76\264\uff76\267\uff76\304\uff76\325\uff76\u010b" +
    "\uff76\u010c\uff76\u0111\uff76\001\002\000\044\042\uff77\046\uff77" +
    "\066\uff77\102\uff77\103\uff77\105\uff77\135\uff77\154\uff77\165" +
    "\uff77\237\uff77\264\uff77\267\uff77\304\uff77\325\uff77\u010b\uff77" +
    "\u010c\uff77\u0111\uff77\001\002\000\044\042\uff75\046\uff75\066" +
    "\uff75\102\uff75\103\uff75\105\uff75\135\uff75\154\uff75\165\uff75" +
    "\237\uff75\264\uff75\267\uff75\304\uff75\325\uff75\u010b\uff75\u010c" +
    "\uff75\u0111\uff75\001\002\000\044\042\uff73\046\uff73\066\uff73" +
    "\102\uff73\103\uff73\105\uff73\135\uff73\154\uff73\165\uff73\237" +
    "\uff73\264\uff73\267\uff73\304\uff73\325\uff73\u010b\uff73\u010c\uff73" +
    "\u0111\uff73\001\002\000\044\042\uff78\046\uff78\066\uff78\102" +
    "\uff78\103\uff78\105\uff78\135\uff78\154\uff78\165\uff78\237\uff78" +
    "\264\uff78\267\uff78\304\uff78\325\uff78\u010b\uff78\u010c\uff78\u0111" +
    "\uff78\001\002\000\044\042\uff79\046\uff79\066\uff79\102\uff79" +
    "\103\uff79\105\uff79\135\uff79\154\uff79\165\uff79\237\uff79\264" +
    "\uff79\267\uff79\304\uff79\325\uff79\u010b\uff79\u010c\uff79\u0111\uff79" +
    "\001\002\000\036\215\u013f\220\uff83\326\uff83\327\uff83\330" +
    "\uff83\331\uff83\332\uff83\u010e\uff83\u0110\u0141\u0124\uff83\u0127\uff83" +
    "\u0128\uff83\u0129\uff83\u012b\uff83\001\002\000\004\u0110\u01a1\001" +
    "\002\000\036\215\u013f\220\uff83\326\uff83\327\uff83\330\uff83" +
    "\331\uff83\332\uff83\u010e\uff83\u0110\u0141\u0124\uff83\u0127\uff83\u0128" +
    "\uff83\u0129\uff83\u012b\uff83\001\002\000\044\042\uff6e\046\uff6e" +
    "\066\uff6e\102\uff6e\103\uff6e\105\uff6e\135\uff6e\154\uff6e\165" +
    "\uff6e\237\uff6e\264\uff6e\267\uff6e\304\uff6e\325\uff6e\u010b\uff6e" +
    "\u010c\uff6e\u0111\uff6e\001\002\000\004\042\u019f\001\002\000" +
    "\036\215\u013f\220\uff83\326\uff83\327\uff83\330\uff83\331\uff83" +
    "\332\uff83\u010e\uff83\u0110\u0141\u0124\uff83\u0127\uff83\u0128\uff83\u0129" +
    "\uff83\u012b\uff83\001\002\000\044\042\uff6c\046\uff6c\066\uff6c" +
    "\102\uff6c\103\uff6c\105\uff6c\135\uff6c\154\uff6c\165\uff6c\237" +
    "\uff6c\264\uff6c\267\uff6c\304\uff6c\325\uff6c\u010b\uff6c\u010c\uff6c" +
    "\u0111\uff6c\001\002\000\034\220\u0159\326\u014b\327\u0154\330" +
    "\u015a\331\u0158\332\u0155\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d" +
    "\u0128\u014e\u0129\064\u012b\u0156\001\002\000\006\u010c\u01a3\u0111" +
    "\uff85\001\002\000\034\220\u0159\326\u014b\327\u0154\330\u015a" +
    "\331\u0158\332\u0155\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128" +
    "\u014e\u0129\064\u012b\u0156\001\002\000\004\u0111\u01a5\001\002" +
    "\000\044\042\uff6d\046\uff6d\066\uff6d\102\uff6d\103\uff6d\105" +
    "\uff6d\135\uff6d\154\uff6d\165\uff6d\237\uff6d\264\uff6d\267\uff6d" +
    "\304\uff6d\325\uff6d\u010b\uff6d\u010c\uff6d\u0111\uff6d\001\002\000" +
    "\006\u010c\u01a3\u0111\uff85\001\002\000\004\u0111\uff86\001\002" +
    "\000\044\042\uff6b\046\uff6b\066\uff6b\102\uff6b\103\uff6b\105" +
    "\uff6b\135\uff6b\154\uff6b\165\uff6b\237\uff6b\264\uff6b\267\uff6b" +
    "\304\uff6b\325\uff6b\u010b\uff6b\u010c\uff6b\u0111\uff6b\001\002\000" +
    "\004\u0110\u01aa\001\002\000\022\052\ufeb1\115\ufeb1\132\u01af" +
    "\150\u01b0\243\ufeb1\314\ufeb1\u010e\065\u0129\064\001\002\000" +
    "\012\325\ufed9\u010b\ufed9\u010c\ufed9\u0111\ufed9\001\002\000\012" +
    "\325\ufed8\u010b\ufed8\u010c\ufed8\u0111\ufed8\001\002\000\012\325" +
    "\ufed7\u010b\ufed7\u010c\ufed7\u0111\ufed7\001\002\000\006\u010c\u024a" +
    "\u0111\ufed5\001\002\000\006\u010e\065\u0129\064\001\002\000" +
    "\006\u010e\065\u0129\064\001\002\000\070\337\105\340\102" +
    "\341\122\342\131\343\121\344\104\345\076\346\126\347" +
    "\111\350\117\351\130\352\107\353\101\354\110\355\077" +
    "\356\125\357\124\360\106\361\127\362\116\363\113\364" +
    "\133\365\132\366\100\367\103\370\120\u010e\u01f3\001\002" +
    "\000\012\052\u01b4\115\u01b3\243\u01b7\314\u01b5\001\002\000" +
    "\006\215\u01de\220\u01df\001\002\000\004\157\u01c6\001\002" +
    "\000\004\157\u01c3\001\002\000\012\325\ufe9c\u010b\ufe9c\u010c" +
    "\ufe9c\u0111\ufe9c\001\002\000\010\126\u0119\212\u0118\u0110\ufeab" +
    "\001\002\000\004\u0110\u01ba\001\002\000\012\325\ufe9a\u010b" +
    "\ufe9a\u010c\ufe9a\u0111\ufe9a\001\002\000\006\u010e\065\u0129\064" +
    "\001\002\000\012\054\u0124\244\u0125\u010c\uff5a\u0111\uff5a\001" +
    "\002\000\006\u010c\u01be\u0111\ufe92\001\002\000\004\u0111\u01c2" +
    "\001\002\000\006\u010e\065\u0129\064\001\002\000\012\054" +
    "\u0124\244\u0125\u010c\uff5a\u0111\uff5a\001\002\000\006\u010c\u01be" +
    "\u0111\ufe92\001\002\000\004\u0111\ufe93\001\002\000\012\325" +
    "\ufe97\u010b\ufe97\u010c\ufe97\u0111\ufe97\001\002\000\010\126\u0119" +
    "\212\u0118\u0110\ufeab\001\002\000\004\u0110\u01ba\001\002\000" +
    "\012\325\ufe9b\u010b\ufe9b\u010c\ufe9b\u0111\ufe9b\001\002\000\004" +
    "\u0110\u01c8\001\002\000\004\056\u01cf\001\002\000\006\u010e" +
    "\065\u0129\064\001\002\000\006\u010c\u01cb\u0111\ufe94\001\002" +
    "\000\004\u0111\u01ce\001\002\000\006\u010e\065\u0129\064\001" +
    "\002\000\006\u010c\u01cb\u0111\ufe94\001\002\000\004\u0111\ufe95" +
    "\001\002\000\004\056\ufe96\001\002\000\006\u010e\065\u0129" +
    "\064\001\002\000\012\236\ufea7\237\ufea7\251\ufea7\u0110\u01d1" +
    "\001\002\000\006\u010e\065\u0129\064\001\002\000\010\236" +
    "\ufea5\237\u01d3\251\ufea5\001\002\000\006\236\u01d5\251\u01d7" +
    "\001\002\000\006\236\u01d5\251\u01d7\001\002\000\006\107" +
    "\u01da\152\u01d9\001\002\000\006\215\u01de\220\u01df\001\002" +
    "\000\006\107\u01da\152\u01d9\001\002\000\014\215\ufea3\220" +
    "\ufea3\236\ufea3\237\ufea3\251\ufea3\001\002\000\006\220\u01dd" +
    "\233\u01db\001\002\000\014\215\ufea2\220\ufea2\236\ufea2\237" +
    "\ufea2\251\ufea2\001\002\000\014\215\ufe9f\220\ufe9f\236\ufe9f" +
    "\237\ufe9f\251\ufe9f\001\002\000\014\215\ufea1\220\ufea1\236" +
    "\ufea1\237\ufea1\251\ufea1\001\002\000\014\215\ufea0\220\ufea0" +
    "\236\ufea0\237\ufea0\251\ufea0\001\002\000\006\046\u01e1\220" +
    "\u01e3\001\002\000\032\052\ufedf\056\ufedf\114\ufedf\115\ufedf" +
    "\150\ufedf\243\ufedf\314\ufedf\325\ufedf\u010b\ufedf\u010c\ufedf\u0110" +
    "\ufedf\u0111\ufedf\001\002\000\012\325\ufe99\u010b\ufe99\u010c\ufe99" +
    "\u0111\ufe99\001\002\000\004\061\u01e4\001\002\000\032\052" +
    "\ufee0\056\ufee0\114\ufee0\115\ufee0\150\ufee0\243\ufee0\314\ufee0" +
    "\325\ufee0\u010b\ufee0\u010c\ufee0\u0110\ufee0\u0111\ufee0\001\002\000" +
    "\032\052\ufedd\056\ufedd\114\ufedd\115\ufedd\150\ufedd\243\ufedd" +
    "\314\ufedd\325\ufedd\u010b\ufedd\u010c\ufedd\u0110\ufedd\u0111\ufedd\001" +
    "\002\000\006\215\u01e5\220\u01e7\001\002\000\004\220\u01e9" +
    "\001\002\000\032\052\ufede\056\ufede\114\ufede\115\ufede\150" +
    "\ufede\243\ufede\314\ufede\325\ufede\u010b\ufede\u010c\ufede\u0110\ufede" +
    "\u0111\ufede\001\002\000\032\052\ufedb\056\ufedb\114\ufedb\115" +
    "\ufedb\150\ufedb\243\ufedb\314\ufedb\325\ufedb\u010b\ufedb\u010c\ufedb" +
    "\u0110\ufedb\u0111\ufedb\001\002\000\032\052\ufedc\056\ufedc\114" +
    "\ufedc\115\ufedc\150\ufedc\243\ufedc\314\ufedc\325\ufedc\u010b\ufedc" +
    "\u010c\ufedc\u0110\ufedc\u0111\ufedc\001\002\000\032\052\ufeda\056" +
    "\ufeda\114\ufeda\115\ufeda\150\ufeda\243\ufeda\314\ufeda\325\ufeda" +
    "\u010b\ufeda\u010c\ufeda\u0110\ufeda\u0111\ufeda\001\002\000\014\215" +
    "\ufea4\220\ufea4\236\ufea4\237\ufea4\251\ufea4\001\002\000\014" +
    "\215\ufea5\220\ufea5\236\ufea5\237\u01d3\251\ufea5\001\002\000" +
    "\012\215\ufea6\220\ufea6\236\ufea6\251\ufea6\001\002\000\004" +
    "\u0111\u01ee\001\002\000\014\215\ufea8\220\ufea8\236\ufea8\237" +
    "\ufea8\251\ufea8\001\002\000\004\u0110\u01f0\001\002\000\036" +
    "\215\u013f\220\uff83\326\uff83\327\uff83\330\uff83\331\uff83\332" +
    "\uff83\u010e\uff83\u0110\u0141\u0124\uff83\u0127\uff83\u0128\uff83\u0129\uff83" +
    "\u012b\uff83\001\002\000\004\u0111\u01f2\001\002\000\012\325" +
    "\ufe98\u010b\ufe98\u010c\ufe98\u0111\ufe98\001\002\000\066\337\105" +
    "\340\102\341\122\342\131\343\121\344\104\345\076\346" +
    "\126\347\111\350\117\351\130\352\107\353\101\354\110" +
    "\355\077\356\125\357\124\360\106\361\127\362\116\363" +
    "\113\364\133\365\132\366\100\367\103\370\120\001\002" +
    "\000\044\046\uffd9\052\uffd9\056\uffd9\113\uffd9\114\uffd9\115" +
    "\uffd9\134\uffd9\150\uffd9\215\uffd9\220\uffd9\243\uffd9\314\uffd9" +
    "\325\uffd9\u010b\uffd9\u010c\uffd9\u0110\uffd9\u0111\uffd9\001\002\000" +
    "\044\046\uffbc\052\uffbc\056\uffbc\113\uffbc\114\uffbc\115\uffbc" +
    "\134\uffbc\150\uffbc\215\uffbc\220\uffbc\243\uffbc\314\uffbc\325" +
    "\uffbc\u010b\uffbc\u010c\uffbc\u0110\u023d\u0111\uffbc\001\002\000\042" +
    "\046\ufed2\052\ufed2\056\ufed2\113\ufed2\114\ufed2\115\ufed2\134" +
    "\u01f7\150\ufed2\215\ufed2\220\ufed2\243\ufed2\314\ufed2\325\ufed2" +
    "\u010b\ufed2\u010c\ufed2\u0111\ufed2\001\002\000\006\u010e\065\u0129" +
    "\064\001\002\000\040\046\ufebb\052\ufeb1\056\ufeb1\113\u01f9" +
    "\114\u01fa\115\ufeb1\150\u01fb\215\u01fd\220\ufebb\243\ufeb1\314" +
    "\ufeb1\325\ufec6\u010b\ufec6\u010c\ufec6\u0111\ufec6\001\002\000\010" +
    "\215\ufec9\220\ufec9\u0110\u0231\001\002\000\026\052\ufeb1\056" +
    "\ufeb1\115\ufeb1\150\u01b0\243\ufeb1\314\ufeb1\325\ufeb3\u010b\ufeb3" +
    "\u010c\ufeb3\u0111\ufeb3\001\002\000\006\u010e\065\u0129\064\001" +
    "\002\000\014\052\u0210\056\ufea9\115\u020e\243\u0212\314\u0211" +
    "\001\002\000\006\046\ufebc\220\ufebc\001\002\000\006\046" +
    "\u0202\220\u0203\001\002\000\012\325\ufec7\u010b\ufec7\u010c\ufec7" +
    "\u0111\ufec7\001\002\000\012\325\ufed4\u010b\ufed4\u010c\ufed4\u0111" +
    "\ufed4\001\002\000\030\052\ufecb\056\ufecb\114\u0209\115\ufecb" +
    "\150\ufecb\243\ufecb\314\ufecb\325\ufecb\u010b\ufecb\u010c\ufecb\u0111" +
    "\ufecb\001\002\000\004\061\u0204\001\002\000\030\052\ufeba" +
    "\056\ufeba\114\ufeba\115\ufeba\150\ufeba\243\ufeba\314\ufeba\325" +
    "\ufeba\u010b\ufeba\u010c\ufeba\u0111\ufeba\001\002\000\034\052\ufeb6" +
    "\056\ufeb6\114\ufeb6\115\ufeb6\150\ufeb6\215\u0205\220\u0206\243" +
    "\ufeb6\314\ufeb6\325\ufeb6\u010b\ufeb6\u010c\ufeb6\u0111\ufeb6\001\002" +
    "\000\004\220\u0208\001\002\000\030\052\ufeb7\056\ufeb7\114" +
    "\ufeb7\115\ufeb7\150\ufeb7\243\ufeb7\314\ufeb7\325\ufeb7\u010b\ufeb7" +
    "\u010c\ufeb7\u0111\ufeb7\001\002\000\030\052\ufeb9\056\ufeb9\114" +
    "\ufeb9\115\ufeb9\150\ufeb9\243\ufeb9\314\ufeb9\325\ufeb9\u010b\ufeb9" +
    "\u010c\ufeb9\u0111\ufeb9\001\002\000\030\052\ufeb8\056\ufeb8\114" +
    "\ufeb8\115\ufeb8\150\ufeb8\243\ufeb8\314\ufeb8\325\ufeb8\u010b\ufeb8" +
    "\u010c\ufeb8\u0111\ufeb8\001\002\000\026\052\ufecc\056\ufecc\115" +
    "\ufecc\150\ufecc\243\ufecc\314\ufecc\325\ufecc\u010b\ufecc\u010c\ufecc" +
    "\u0111\ufecc\001\002\000\026\052\ufeb1\056\ufeb1\115\ufeb1\150" +
    "\u01b0\243\ufeb1\314\ufeb1\325\ufeb3\u010b\ufeb3\u010c\ufeb3\u0111\ufeb3" +
    "\001\002\000\014\052\u0210\056\ufea9\115\u020e\243\u0212\314" +
    "\u0211\001\002\000\012\325\ufec4\u010b\ufec4\u010c\ufec4\u0111\ufec4" +
    "\001\002\000\026\052\ufeb1\056\ufeb1\115\ufeb1\150\u01b0\243" +
    "\ufeb1\314\ufeb1\325\ufeb3\u010b\ufeb3\u010c\ufeb3\u0111\ufeb3\001\002" +
    "\000\006\215\u01de\220\u01df\001\002\000\032\052\ufeab\056" +
    "\ufeab\115\ufeab\126\u0119\150\ufeab\212\u0118\243\ufeab\314\ufeab" +
    "\325\ufeab\u010b\ufeab\u010c\ufeab\u0111\ufeab\001\002\000\004\157" +
    "\u021a\001\002\000\004\157\u0219\001\002\000\032\052\ufe9d" +
    "\056\ufe9d\115\ufe9d\126\ufe9d\150\ufe9d\212\ufe9d\243\ufe9d\314" +
    "\ufe9d\325\ufe9d\u010b\ufe9d\u010c\ufe9d\u0111\ufe9d\001\002\000\004" +
    "\056\u0214\001\002\000\006\u010e\065\u0129\064\001\002\000" +
    "\012\215\ufea7\220\ufea7\237\ufea7\u0110\u01d1\001\002\000\010" +
    "\215\ufea5\220\ufea5\237\u01d3\001\002\000\006\215\u01de\220" +
    "\u01df\001\002\000\026\052\ufeaf\056\ufeaf\115\ufeaf\150\ufeaf" +
    "\243\ufeaf\314\ufeaf\325\ufeaf\u010b\ufeaf\u010c\ufeaf\u0111\ufeaf\001" +
    "\002\000\032\052\ufe9e\056\ufe9e\115\ufe9e\126\ufe9e\150\ufe9e" +
    "\212\ufe9e\243\ufe9e\314\ufe9e\325\ufe9e\u010b\ufe9e\u010c\ufe9e\u0111" +
    "\ufe9e\001\002\000\004\056\ufeaa\001\002\000\026\052\ufeb0" +
    "\056\ufeb0\115\ufeb0\150\ufeb0\243\ufeb0\314\ufeb0\325\ufeb0\u010b" +
    "\ufeb0\u010c\ufeb0\u0111\ufeb0\001\002\000\004\u0110\u021d\001\002" +
    "\000\036\215\u013f\220\uff83\326\uff83\327\uff83\330\uff83\331" +
    "\uff83\332\uff83\u010e\uff83\u0110\u0141\u0124\uff83\u0127\uff83\u0128\uff83" +
    "\u0129\uff83\u012b\uff83\001\002\000\004\u0111\u021f\001\002\000" +
    "\026\052\ufeae\056\ufeae\115\ufeae\150\ufeae\243\ufeae\314\ufeae" +
    "\325\ufeae\u010b\ufeae\u010c\ufeae\u0111\ufeae\001\002\000\012\325" +
    "\ufeb4\u010b\ufeb4\u010c\ufeb4\u0111\ufeb4\001\002\000\026\052\ufeb1" +
    "\056\ufeb1\115\ufeb1\150\u01b0\243\ufeb1\314\ufeb1\325\ufeb3\u010b" +
    "\ufeb3\u010c\ufeb3\u0111\ufeb3\001\002\000\012\325\ufec2\u010b\ufec2" +
    "\u010c\ufec2\u0111\ufec2\001\002\000\016\052\ufeb2\056\ufeb2\115" +
    "\ufeb2\233\u0224\243\ufeb2\314\ufeb2\001\002\000\014\220\u022a" +
    "\u0124\u022b\u0127\u0227\u0128\u0226\u012b\u0228\001\002\000\012\325" +
    "\ufec8\u010b\ufec8\u010c\ufec8\u0111\ufec8\001\002\000\010\113\ufec1" +
    "\215\ufec1\220\ufec1\001\002\000\010\113\ufec0\215\ufec0\220" +
    "\ufec0\001\002\000\010\113\ufebe\215\ufebe\220\ufebe\001\002" +
    "\000\010\113\u022c\215\ufed0\220\ufed0\001\002\000\010\113" +
    "\ufebd\215\ufebd\220\ufebd\001\002\000\010\113\ufebf\215\ufebf" +
    "\220\ufebf\001\002\000\010\215\ufec9\220\ufec9\u0110\u0231\001" +
    "\002\000\006\215\u01de\220\u01df\001\002\000\030\052\ufecb" +
    "\056\ufecb\114\u0209\115\ufecb\150\ufecb\243\ufecb\314\ufecb\325" +
    "\ufecb\u010b\ufecb\u010c\ufecb\u0111\ufecb\001\002\000\026\052\ufeb1" +
    "\056\ufeb1\115\ufeb1\150\u01b0\243\ufeb1\314\ufeb1\325\ufeb3\u010b" +
    "\ufeb3\u010c\ufeb3\u0111\ufeb3\001\002\000\012\325\ufeb5\u010b\ufeb5" +
    "\u010c\ufeb5\u0111\ufeb5\001\002\000\004\u012b\u0233\001\002\000" +
    "\006\215\ufed1\220\ufed1\001\002\000\004\u010c\u0234\001\002" +
    "\000\004\u012b\u0235\001\002\000\004\u0111\u0236\001\002\000" +
    "\006\215\ufeca\220\ufeca\001\002\000\012\325\ufec3\u010b\ufec3" +
    "\u010c\ufec3\u0111\ufec3\001\002\000\006\215\u01de\220\u01df\001" +
    "\002\000\030\052\ufecb\056\ufecb\114\u0209\115\ufecb\150\ufecb" +
    "\243\ufecb\314\ufecb\325\ufecb\u010b\ufecb\u010c\ufecb\u0111\ufecb\001" +
    "\002\000\026\052\ufeb1\056\ufeb1\115\ufeb1\150\u01b0\243\ufeb1" +
    "\314\ufeb1\325\ufeb3\u010b\ufeb3\u010c\ufeb3\u0111\ufeb3\001\002\000" +
    "\012\325\ufec5\u010b\ufec5\u010c\ufec5\u0111\ufec5\001\002\000\040" +
    "\046\ufed3\052\ufed3\056\ufed3\113\ufed3\114\ufed3\115\ufed3\150" +
    "\ufed3\215\ufed3\220\ufed3\243\ufed3\314\ufed3\325\ufed3\u010b\ufed3" +
    "\u010c\ufed3\u0111\ufed3\001\002\000\004\u0128\u023f\001\002\000" +
    "\042\046\uffda\052\uffda\056\uffda\113\uffda\114\uffda\115\uffda" +
    "\134\uffda\150\uffda\215\uffda\220\uffda\243\uffda\314\uffda\325" +
    "\uffda\u010b\uffda\u010c\uffda\u0111\uffda\001\002\000\006\u010c\u0240" +
    "\u0111\uffba\001\002\000\004\u0128\u0243\001\002\000\004\u0111" +
    "\u0242\001\002\000\042\046\uffbd\052\uffbd\056\uffbd\113\uffbd" +
    "\114\uffbd\115\uffbd\134\uffbd\150\uffbd\215\uffbd\220\uffbd\243" +
    "\uffbd\314\uffbd\325\uffbd\u010b\uffbd\u010c\uffbd\u0111\uffbd\001\002" +
    "\000\004\u0111\uffbb\001\002\000\004\u010f\u0245\001\002\000" +
    "\044\046\uffd8\052\uffd8\056\uffd8\113\uffd8\114\uffd8\115\uffd8" +
    "\134\uffd8\150\uffd8\215\uffd8\220\uffd8\243\uffd8\314\uffd8\325" +
    "\uffd8\u010b\uffd8\u010c\uffd8\u0110\uffd8\u0111\uffd8\001\002\000\014" +
    "\052\ufeb2\056\ufeb2\115\ufeb2\243\ufeb2\314\ufeb2\001\002\000" +
    "\010\126\u0119\212\u0118\u0110\ufeab\001\002\000\004\u0110\u01ba" +
    "\001\002\000\012\325\ufe91\u010b\ufe91\u010c\ufe91\u0111\ufe91\001" +
    "\002\000\022\052\ufeb1\115\ufeb1\132\u01af\150\u01b0\243\ufeb1" +
    "\314\ufeb1\u010e\065\u0129\064\001\002\000\004\u0111\u024c\001" +
    "\002\000\010\237\u024e\325\ufee1\u010b\ufee1\001\002\000\006" +
    "\325\ufee3\u010b\ufee3\001\002\000\004\314\u024f\001\002\000" +
    "\006\325\ufee2\u010b\ufee2\001\002\000\012\325\ufed5\u010b\ufed5" +
    "\u010c\u024a\u0111\ufed5\001\002\000\010\325\ufed6\u010b\ufed6\u0111" +
    "\ufed6\001\002\000\004\051\u0253\001\002\000\004\133\024" +
    "\001\002\000\006\325\ufeef\u010b\ufeef\001\002\000\006\325" +
    "\uff14\u010b\uff14\001\002\000\012\134\uff10\237\u0258\325\uff10" +
    "\u010b\uff10\001\002\000\006\325\uff13\u010b\uff13\001\002\000" +
    "\006\314\u025d\u0110\uff0c\001\002\000\010\134\u025b\325\uff0e" +
    "\u010b\uff0e\001\002\000\006\325\uff12\u010b\uff12\001\002\000" +
    "\006\u010e\065\u0129\064\001\002\000\006\325\uff0f\u010b\uff0f" +
    "\001\002\000\004\u0110\uff0d\001\002\000\004\u0110\u0260\001" +
    "\002\000\012\134\uff0a\325\uff0a\u010b\uff0a\u010c\u028b\001\002" +
    "\000\006\372\u0263\373\u0264\001\002\000\010\134\uff11\325" +
    "\uff11\u010b\uff11\001\002\000\004\u0123\u0265\001\002\000\004" +
    "\u0123\uff08\001\002\000\004\u0123\uff07\001\002\000\004\u0124" +
    "\u0266\001\002\000\004\u010c\u0267\001\002\000\006\040\u026a" +
    "\371\u0268\001\002\000\004\u0123\uff06\001\002\000\004\u0123" +
    "\u026b\001\002\000\004\u0123\uff05\001\002\000\004\u0124\u026c" +
    "\001\002\000\006\u010c\u026d\u0111\uff03\001\002\000\010\374" +
    "\u0276\375\u0274\376\u0272\001\002\000\004\u0111\u026f\001\002" +
    "\000\012\134\uff09\325\uff09\u010b\uff09\u010c\uff09\001\002\000" +
    "\006\u010c\uff02\u0111\uff02\001\002\000\006\u010c\u026d\u0111\uff03" +
    "\001\002\000\004\u0123\u0285\001\002\000\006\u010c\uff01\u0111" +
    "\uff01\001\002\000\004\u0123\u027f\001\002\000\006\u010c\uff00" +
    "\u0111\uff00\001\002\000\004\u0123\u0277\001\002\000\004\u0128" +
    "\u0278\001\002\000\016\333\u027c\334\u027d\335\u027b\336\u027e" +
    "\u010c\ufefd\u0111\ufefd\001\002\000\006\u010c\ufefe\u0111\ufefe\001" +
    "\002\000\006\u010c\ufeff\u0111\ufeff\001\002\000\006\u010c\ufef9" +
    "\u0111\ufef9\001\002\000\006\u010c\ufefc\u0111\ufefc\001\002\000" +
    "\006\u010c\ufefa\u0111\ufefa\001\002\000\006\u010c\ufefb\u0111\ufefb" +
    "\001\002\000\004\u0128\u0280\001\002\000\020\333\u027c\334" +
    "\u027d\335\u027b\336\u027e\377\u0284\u010c\ufef4\u0111\ufef4\001\002" +
    "\000\006\u010c\ufef8\u0111\ufef8\001\002\000\006\u010c\ufef6\u0111" +
    "\ufef6\001\002\000\006\u010c\ufef7\u0111\ufef7\001\002\000\006" +
    "\u010c\ufef5\u0111\ufef5\001\002\000\004\u0128\u0286\001\002\000" +
    "\020\333\u027c\334\u027d\335\u027b\336\u027e\u010a\u0289\u010c\ufef0" +
    "\u0111\ufef0\001\002\000\006\u010c\ufef2\u0111\ufef2\001\002\000" +
    "\006\u010c\ufef3\u0111\ufef3\001\002\000\006\u010c\ufef1\u0111\ufef1" +
    "\001\002\000\004\u0111\uff04\001\002\000\004\u0110\u0260\001" +
    "\002\000\010\134\uff0b\325\uff0b\u010b\uff0b\001\002\000\010" +
    "\146\u0295\u010e\uff3c\u0129\uff3c\001\002\000\004\u0110\u028f\001" +
    "\002\000\004\u0128\u0290\001\002\000\004\u0111\u0291\001\002" +
    "\000\046\063\uff7f\146\uff7f\220\uff7f\250\uff7f\300\u0292\326" +
    "\uff7f\327\uff7f\330\uff7f\331\uff7f\332\uff7f\u0108\uff7f\u010e\uff7f" +
    "\u0110\uff7f\u0124\uff7f\u0127\uff7f\u0128\uff7f\u0129\uff7f\u012b\uff7f\001" +
    "\002\000\044\063\uff80\146\uff80\220\uff80\250\uff80\326\uff80" +
    "\327\uff80\330\uff80\331\uff80\332\uff80\u0108\uff80\u010e\uff80\u0110" +
    "\uff80\u0124\uff80\u0127\uff80\u0128\uff80\u0129\uff80\u012b\uff80\001\002" +
    "\000\044\063\uff82\146\uff82\220\uff82\250\uff82\326\uff82\327" +
    "\uff82\330\uff82\331\uff82\332\uff82\u0108\uff82\u010e\uff82\u0110\uff82" +
    "\u0124\uff82\u0127\uff82\u0128\uff82\u0129\uff82\u012b\uff82\001\002\000" +
    "\006\u010e\065\u0129\064\001\002\000\006\u010e\uff3d\u0129\uff3d" +
    "\001\002\000\010\233\uff3a\265\uff3a\u0110\u012e\001\002\000" +
    "\006\233\uff3b\265\uff3b\001\002\000\006\233\u0299\265\u029a" +
    "\001\002\000\004\265\u02af\001\002\000\004\u0110\u029c\001" +
    "\002\000\006\325\uff3e\u010b\uff3e\001\002\000\014\233\u029d" +
    "\u0124\u02a3\u0127\u029f\u0128\u029e\u012b\u02a0\001\002\000\006\u010c" +
    "\uff38\u0111\uff38\001\002\000\006\u010c\uff37\u0111\uff37\001\002" +
    "\000\006\u010c\uff36\u0111\uff36\001\002\000\006\u010c\uff34\u0111" +
    "\uff34\001\002\000\006\u010c\u02ab\u0111\uff32\001\002\000\004" +
    "\u0111\u02a4\001\002\000\006\u010c\uff35\u0111\uff35\001\002\000" +
    "\010\325\uff2e\u010b\uff2e\u010c\u02a5\001\002\000\004\u0110\u02a7" +
    "\001\002\000\006\325\uff31\u010b\uff31\001\002\000\014\233" +
    "\u029d\u0124\u02a3\u0127\u029f\u0128\u029e\u012b\u02a0\001\002\000\004" +
    "\u0111\u02a9\001\002\000\010\325\uff2e\u010b\uff2e\u010c\u02a5\001" +
    "\002\000\006\325\uff2f\u010b\uff2f\001\002\000\014\233\u029d" +
    "\u0124\u02a3\u0127\u029f\u0128\u029e\u012b\u02a0\001\002\000\004\u0111" +
    "\uff39\001\002\000\006\u010c\u02ab\u0111\uff32\001\002\000\004" +
    "\u0111\uff33\001\002\000\006\325\uff30\u010b\uff30\001\002\000" +
    "\010\u010e\065\u0117\074\u0129\064\001\002\000\006\325\ufe57" +
    "\u010b\ufe57\001\002\000\006\325\ufe62\u010b\ufe62\001\002\000" +
    "\006\325\ufe61\u010b\ufe61\001\002\000\004\214\u02b5\001\002" +
    "\000\034\024\ufdf4\025\ufdf4\026\ufdf4\027\ufdf4\030\ufdf4\031" +
    "\ufdf4\032\ufdf4\033\ufdf4\034\ufdf4\046\ufdf4\u0102\u02b7\u0103\u02b6" +
    "\u0104\ufdf4\001\002\000\030\024\ufdf5\025\ufdf5\026\ufdf5\027" +
    "\ufdf5\030\ufdf5\031\ufdf5\032\ufdf5\033\ufdf5\034\ufdf5\046\ufdf5" +
    "\u0104\ufdf5\001\002\000\030\024\ufdf6\025\ufdf6\026\ufdf6\027" +
    "\ufdf6\030\ufdf6\031\ufdf6\032\ufdf6\033\ufdf6\034\ufdf6\046\ufdf6" +
    "\u0104\ufdf6\001\002\000\030\024\u02b9\025\ufdf1\026\ufdf1\027" +
    "\ufdf1\030\ufdf1\031\ufdf1\032\ufdf1\033\ufdf1\034\ufdf1\046\ufdf1" +
    "\u0104\u02bb\001\002\000\024\025\ufdf3\026\ufdf3\027\ufdf3\030" +
    "\ufdf3\031\ufdf3\032\ufdf3\033\ufdf3\034\ufdf3\046\ufdf3\001\002" +
    "\000\024\025\u02bd\026\u02be\027\u02bf\030\u02c0\031\ufdec\032" +
    "\ufdec\033\ufdec\034\ufdec\046\ufdec\001\002\000\024\025\ufdf2" +
    "\026\ufdf2\027\ufdf2\030\ufdf2\031\ufdf2\032\ufdf2\033\ufdf2\034" +
    "\ufdf2\046\ufdf2\001\002\000\014\031\u02c4\032\u02c2\033\u02c3" +
    "\034\ufde8\046\ufde8\001\002\000\014\031\ufdf0\032\ufdf0\033" +
    "\ufdf0\034\ufdf0\046\ufdf0\001\002\000\014\031\ufdef\032\ufdef" +
    "\033\ufdef\034\ufdef\046\ufdef\001\002\000\014\031\ufdee\032" +
    "\ufdee\033\ufdee\034\ufdee\046\ufdee\001\002\000\014\031\ufded" +
    "\032\ufded\033\ufded\034\ufded\046\ufded\001\002\000\006\034" +
    "\u02c6\046\ufde6\001\002\000\006\034\ufdea\046\ufdea\001\002" +
    "\000\006\034\ufde9\046\ufde9\001\002\000\006\034\ufdeb\046" +
    "\ufdeb\001\002\000\004\046\u02c7\001\002\000\004\046\ufde7" +
    "\001\002\000\004\133\024\001\002\000\010\046\u02ca\325" +
    "\ufde4\u010b\ufde4\001\002\000\006\325\ufdf7\u010b\ufdf7\001\002" +
    "\000\004\251\u02cb\001\002\000\010\226\u02cc\325\ufde2\u010b" +
    "\ufde2\001\002\000\006\u010e\065\u0129\064\001\002\000\006" +
    "\325\ufde5\u010b\ufde5\001\002\000\006\325\ufde3\u010b\ufde3\001" +
    "\002\000\062\002\ufffe\003\030\006\ufe55\037\015\065\023" +
    "\071\ufe55\106\052\122\041\133\024\140\042\142\047\167" +
    "\043\227\006\230\034\236\012\251\011\263\044\264\021" +
    "\310\046\313\010\322\ufe55\u010e\ufe48\u0117\ufe48\u0129\ufe48\001" +
    "\002\000\004\002\uffff\001\002\000\010\u010e\065\u0117\074" +
    "\u0129\064\001\002\000\004\u0123\u02d3\001\002\000\010\u010e" +
    "\ufe51\u0117\ufe51\u0129\ufe51\001\002\000\020\233\ufe4c\325\ufe4c" +
    "\u010b\u02e6\u010c\ufe4c\u0117\ufe4c\u0128\ufe4c\u012b\ufe4c\001\002\000" +
    "\020\233\ufe45\325\ufe45\u010b\ufe45\u010c\ufe45\u0117\074\u0128\ufe45" +
    "\u012b\ufe45\001\002\000\020\233\ufe4e\325\ufe4e\u010b\ufe4e\u010c" +
    "\ufe4e\u0117\ufe4e\u0128\ufe4e\u012b\ufe4e\001\002\000\010\325\ufe4a" +
    "\u010b\ufe4a\u010c\u02e2\001\002\000\020\233\u02db\325\ufe3e\u010b" +
    "\ufe3e\u010c\ufe3e\u0117\074\u0128\215\u012b\216\001\002\000\004" +
    "\u0123\u02da\001\002\000\020\233\ufe46\325\ufe46\u010b\ufe46\u010c" +
    "\ufe46\u0117\ufe46\u0128\ufe46\u012b\ufe46\001\002\000\010\325\ufe3f" +
    "\u010b\ufe3f\u010c\ufe3f\001\002\000\010\325\ufe42\u010b\ufe42\u010c" +
    "\ufe42\001\002\000\010\325\ufe44\u010b\ufe44\u010c\ufe44\001\002" +
    "\000\010\325\ufe47\u010b\ufe47\u010c\ufe47\001\002\000\012\325" +
    "\ufe40\u0100\u02e0\u010b\ufe40\u010c\ufe40\001\002\000\010\325\ufe41" +
    "\u010b\ufe41\u010c\ufe41\001\002\000\010\325\ufe43\u010b\ufe43\u010c" +
    "\ufe43\001\002\000\020\233\ufe45\325\ufe45\u010b\ufe45\u010c\ufe45" +
    "\u0117\074\u0128\ufe45\u012b\ufe45\001\002\000\006\325\ufe52\u010b" +
    "\ufe52\001\002\000\010\325\ufe4a\u010b\ufe4a\u010c\u02e2\001\002" +
    "\000\006\325\ufe4b\u010b\ufe4b\001\002\000\006\u0128\215\u012b" +
    "\216\001\002\000\020\233\ufe4f\325\ufe4f\u010b\ufe4f\u010c\ufe4f" +
    "\u0117\ufe4f\u0128\ufe4f\u012b\ufe4f\001\002\000\020\233\ufe4d\325" +
    "\ufe4d\u010b\ufe4d\u010c\ufe4d\u0117\ufe4d\u0128\ufe4d\u012b\ufe4d\001\002" +
    "\000\040\213\uff64\220\uff64\326\uff64\327\uff64\330\uff64\331" +
    "\uff64\332\uff64\u0108\uff64\u010e\uff64\u0110\uff64\u0124\uff64\u0127\uff64" +
    "\u0128\uff64\u0129\uff64\u012b\uff64\001\002\000\040\213\u028e\220" +
    "\uff81\326\uff81\327\uff81\330\uff81\331\uff81\332\uff81\u0108\uff81" +
    "\u010e\uff81\u0110\uff81\u0124\uff81\u0127\uff81\u0128\uff81\u0129\uff81\u012b" +
    "\uff81\001\002\000\040\213\uff65\220\uff65\326\uff65\327\uff65" +
    "\330\uff65\331\uff65\332\uff65\u0108\uff65\u010e\uff65\u0110\uff65\u0124" +
    "\uff65\u0127\uff65\u0128\uff65\u0129\uff65\u012b\uff65\001\002\000\036" +
    "\220\u0159\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u0108" +
    "\u02ee\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064" +
    "\u012b\u0156\001\002\000\036\046\uffa2\051\u02f5\063\uffa2\102" +
    "\uffa2\105\uffa2\267\uffa2\304\uffa2\325\uffa2\u010b\uffa2\u010c\uffa2" +
    "\u010e\065\u0111\uffa2\u0124\u02f7\u0129\064\001\002\000\026\046" +
    "\uff43\063\uff43\102\uff43\105\uff43\267\uff43\304\uff43\325\uff43" +
    "\u010b\uff43\u010c\u0326\u0111\uff43\001\002\000\024\046\uff52\063" +
    "\u02f1\102\uff52\105\uff52\267\uff52\304\uff52\325\uff52\u010b\uff52" +
    "\u0111\uff52\001\002\000\022\046\uff67\102\uff67\105\uff67\267" +
    "\uff67\304\u0136\325\uff67\u010b\uff67\u0111\uff67\001\002\000\006" +
    "\u010e\065\u0129\064\001\002\000\046\046\uffa2\051\u02f5\066" +
    "\uffa2\102\uffa2\103\uffa2\105\uffa2\135\uffa2\154\uffa2\165\uffa2" +
    "\267\uffa2\304\uffa2\325\uffa2\u010b\uffa2\u010c\uffa2\u010e\065\u0111" +
    "\uffa2\u0124\u02f7\u0129\064\001\002\000\042\046\uffa1\063\uffa1" +
    "\066\uffa1\102\uffa1\103\uffa1\105\uffa1\135\uffa1\154\uffa1\165" +
    "\uffa1\237\uffa1\267\uffa1\304\uffa1\325\uffa1\u010b\uffa1\u010c\uffa1" +
    "\u0111\uffa1\001\002\000\036\046\uff4e\066\u02fd\102\uff4e\103" +
    "\u02fc\105\uff4e\135\u02fa\154\uff49\165\u02f9\267\uff4e\304\uff4e" +
    "\325\uff4e\u010b\uff4e\u010c\uff4e\u0111\uff4e\001\002\000\010\u010e" +
    "\065\u0124\u02f7\u0129\064\001\002\000\042\046\uffa3\063\uffa3" +
    "\066\uffa3\102\uffa3\103\uffa3\105\uffa3\135\uffa3\154\uffa3\165" +
    "\uffa3\237\uffa3\267\uffa3\304\uffa3\325\uffa3\u010b\uffa3\u010c\uffa3" +
    "\u0111\uffa3\001\002\000\042\046\uffa0\063\uffa0\066\uffa0\102" +
    "\uffa0\103\uffa0\105\uffa0\135\uffa0\154\uffa0\165\uffa0\237\uffa0" +
    "\267\uffa0\304\uffa0\325\uffa0\u010b\uffa0\u010c\uffa0\u0111\uffa0\001" +
    "\002\000\042\046\uffa4\063\uffa4\066\uffa4\102\uffa4\103\uffa4" +
    "\105\uffa4\135\uffa4\154\uffa4\165\uffa4\237\uffa4\267\uffa4\304" +
    "\uffa4\325\uffa4\u010b\uffa4\u010c\uffa4\u0111\uffa4\001\002\000\006" +
    "\154\uff47\272\u0305\001\002\000\004\154\uff4d\001\002\000" +
    "\024\046\uff50\102\uff50\105\uff50\267\uff50\304\uff50\325\uff50" +
    "\u010b\uff50\u010c\u0308\u0111\uff50\001\002\000\006\154\uff47\272" +
    "\u0305\001\002\000\006\154\uff47\272\u0305\001\002\000\004" +
    "\154\u02ff\001\002\000\006\u010e\065\u0129\064\001\002\000" +
    "\014\051\u02f5\237\uffa2\u010e\065\u0124\u02f7\u0129\064\001\002" +
    "\000\004\237\u0302\001\002\000\036\215\u013f\220\uff83\326" +
    "\uff83\327\uff83\330\uff83\331\uff83\332\uff83\u010e\uff83\u0110\u0141" +
    "\u0124\uff83\u0127\uff83\u0128\uff83\u0129\uff83\u012b\uff83\001\002\000" +
    "\036\046\uff4e\066\u02fd\102\uff4e\103\u02fc\105\uff4e\135\u02fa" +
    "\154\uff49\165\u02f9\267\uff4e\304\uff4e\325\uff4e\u010b\uff4e\u010c" +
    "\uff4e\u0111\uff4e\001\002\000\024\046\uff4f\102\uff4f\105\uff4f" +
    "\267\uff4f\304\uff4f\325\uff4f\u010b\uff4f\u010c\uff4f\u0111\uff4f\001" +
    "\002\000\004\154\uff48\001\002\000\004\154\uff4a\001\002" +
    "\000\004\154\uff4c\001\002\000\006\u010e\065\u0129\064\001" +
    "\002\000\022\046\uff53\102\uff53\105\uff53\267\uff53\304\uff53" +
    "\325\uff53\u010b\uff53\u0111\uff53\001\002\000\044\046\uffa2\051" +
    "\u02f5\066\uffa2\102\uffa2\103\uffa2\105\uffa2\135\uffa2\154\uffa2" +
    "\165\uffa2\267\uffa2\304\uffa2\325\uffa2\u010b\uffa2\u010e\065\u0111" +
    "\uffa2\u0124\u02f7\u0129\064\001\002\000\034\046\uff4e\066\u02fd" +
    "\102\uff4e\103\u02fc\105\uff4e\135\u02fa\154\uff49\165\u02f9\267" +
    "\uff4e\304\uff4e\325\uff4e\u010b\uff4e\u0111\uff4e\001\002\000\022" +
    "\046\uff51\102\uff51\105\uff51\267\uff51\304\uff51\325\uff51\u010b" +
    "\uff51\u0111\uff51\001\002\000\004\154\uff4b\001\002\000\020" +
    "\046\uff56\102\u030f\105\uff56\267\uff56\325\uff56\u010b\uff56\u0111" +
    "\uff56\001\002\000\004\104\u0320\001\002\000\016\046\uff61" +
    "\105\u0311\267\uff61\325\uff61\u010b\uff61\u0111\uff61\001\002\000" +
    "\036\215\u013f\220\uff83\326\uff83\327\uff83\330\uff83\331\uff83" +
    "\332\uff83\u010e\uff83\u0110\u0141\u0124\uff83\u0127\uff83\u0128\uff83\u0129" +
    "\uff83\u012b\uff83\001\002\000\014\046\uff5f\267\u0313\325\uff5f" +
    "\u010b\uff5f\u0111\uff5f\001\002\000\004\104\u0315\001\002\000" +
    "\012\046\uff66\325\uff66\u010b\uff66\u0111\uff66\001\002\000\034" +
    "\220\u0159\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u010e" +
    "\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156" +
    "\001\002\000\052\046\uff5d\054\uff5d\134\u0317\220\uff5d\244" +
    "\uff5d\325\uff5d\326\uff5d\327\uff5d\330\uff5d\331\uff5d\332\uff5d" +
    "\u010b\uff5d\u010e\uff5d\u0110\uff5d\u0111\uff5d\u0124\uff5d\u0127\uff5d\u0128" +
    "\uff5d\u0129\uff5d\u012b\uff5d\001\002\000\006\u010e\065\u0129\064" +
    "\001\002\000\050\046\uff5a\054\u0124\220\uff5a\244\u0125\325" +
    "\uff5a\326\uff5a\327\uff5a\330\uff5a\331\uff5a\332\uff5a\u010b\uff5a" +
    "\u010e\uff5a\u0110\uff5a\u0111\uff5a\u0124\uff5a\u0127\uff5a\u0128\uff5a\u0129" +
    "\uff5a\u012b\uff5a\001\002\000\044\046\uff58\220\u0159\325\uff58" +
    "\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u010b\uff58\u010e" +
    "\065\u0110\u0157\u0111\uff58\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064" +
    "\u012b\u0156\001\002\000\020\046\uff5d\054\uff5d\134\u0317\244" +
    "\uff5d\325\uff5d\u010b\uff5d\u0111\uff5d\001\002\000\012\046\uff60" +
    "\325\uff60\u010b\uff60\u0111\uff60\001\002\000\016\046\uff5a\054" +
    "\u0124\244\u0125\325\uff5a\u010b\uff5a\u0111\uff5a\001\002\000\012" +
    "\046\uff59\325\uff59\u010b\uff59\u0111\uff59\001\002\000\050\046" +
    "\uff5e\054\uff5e\220\uff5e\244\uff5e\325\uff5e\326\uff5e\327\uff5e" +
    "\330\uff5e\331\uff5e\332\uff5e\u010b\uff5e\u010e\uff5e\u0110\uff5e\u0111" +
    "\uff5e\u0124\uff5e\u0127\uff5e\u0128\uff5e\u0129\uff5e\u012b\uff5e\001\002" +
    "\000\014\046\uff62\267\uff62\325\uff62\u010b\uff62\u0111\uff62\001" +
    "\002\000\034\220\u0159\326\u014b\327\u0154\330\u015a\331\u0158" +
    "\332\u0155\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129" +
    "\064\u012b\u0156\001\002\000\020\046\uff54\105\uff54\267\uff54" +
    "\325\uff54\u010b\uff54\u010c\u0322\u0111\uff54\001\002\000\034\220" +
    "\u0159\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u010e\065" +
    "\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156\001" +
    "\002\000\016\046\uff57\105\uff57\267\uff57\325\uff57\u010b\uff57" +
    "\u0111\uff57\001\002\000\020\046\uff54\105\uff54\267\uff54\325" +
    "\uff54\u010b\uff54\u010c\u0322\u0111\uff54\001\002\000\016\046\uff55" +
    "\105\uff55\267\uff55\325\uff55\u010b\uff55\u0111\uff55\001\002\000" +
    "\034\220\u0159\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155" +
    "\u010e\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b" +
    "\u0156\001\002\000\024\046\uff45\063\uff45\102\uff45\105\uff45" +
    "\267\uff45\304\uff45\325\uff45\u010b\uff45\u0111\uff45\001\002\000" +
    "\036\046\uffa2\051\u02f5\063\uffa2\102\uffa2\105\uffa2\267\uffa2" +
    "\304\uffa2\325\uffa2\u010b\uffa2\u010c\uffa2\u010e\065\u0111\uffa2\u0124" +
    "\u02f7\u0129\064\001\002\000\026\046\uff43\063\uff43\102\uff43" +
    "\105\uff43\267\uff43\304\uff43\325\uff43\u010b\uff43\u010c\u0326\u0111" +
    "\uff43\001\002\000\024\046\uff44\063\uff44\102\uff44\105\uff44" +
    "\267\uff44\304\uff44\325\uff44\u010b\uff44\u0111\uff44\001\002\000" +
    "\026\046\uff43\063\uff43\102\uff43\105\uff43\267\uff43\304\uff43" +
    "\325\uff43\u010b\uff43\u010c\u0326\u0111\uff43\001\002\000\024\046" +
    "\uff46\063\uff46\102\uff46\105\uff46\267\uff46\304\uff46\325\uff46" +
    "\u010b\uff46\u0111\uff46\001\002\000\010\325\ufe69\372\u032e\u010b" +
    "\ufe69\001\002\000\010\312\u0330\325\ufe67\u010b\ufe67\001\002" +
    "\000\006\325\ufe6b\u010b\ufe6b\001\002\000\004\023\u0332\001" +
    "\002\000\006\325\ufe6a\u010b\ufe6a\001\002\000\010\325\ufe65" +
    "\u010b\ufe65\u0124\u0334\001\002\000\006\325\ufe68\u010b\ufe68\001" +
    "\002\000\006\325\ufe66\u010b\ufe66\001\002\000\010\006\ufe56" +
    "\071\ufe56\322\ufe56\001\002\000\006\325\ufe8c\u010b\ufe8c\001" +
    "\002\000\006\325\ufe8a\u010b\ufe8a\001\002\000\006\325\ufe8b" +
    "\u010b\ufe8b\001\002\000\010\175\u0371\u010e\065\u0129\064\001" +
    "\002\000\006\325\ufe90\u010b\ufe90\001\002\000\006\u010e\065" +
    "\u0129\064\001\002\000\006\325\ufe8f\u010b\ufe8f\001\002\000" +
    "\006\u010e\065\u0129\064\001\002\000\006\u010e\065\u0129\064" +
    "\001\002\000\006\325\ufe8d\u010b\ufe8d\001\002\000\006\325" +
    "\ufe8e\u010b\ufe8e\001\002\000\006\051\ufe81\u0110\u012e\001\002" +
    "\000\004\051\ufe82\001\002\000\004\051\u0344\001\002\000" +
    "\004\133\024\001\002\000\006\325\ufe83\u010b\ufe83\001\002" +
    "\000\010\004\u0349\037\u0348\263\u034c\001\002\000\006\325" +
    "\ufe7f\u010b\ufe7f\001\002\000\004\137\u035d\001\002\000\022" +
    "\052\ufeb1\115\ufeb1\132\u01af\150\u01b0\243\ufeb1\314\ufeb1\u010e" +
    "\065\u0129\064\001\002\000\006\325\ufe80\u010b\ufe80\001\002" +
    "\000\006\325\ufe7d\u010b\ufe7d\001\002\000\010\124\ufe6e\137" +
    "\u034d\150\u034e\001\002\000\004\124\346\001\002\000\004" +
    "\124\ufe6f\001\002\000\004\124\346\001\002\000\010\325" +
    "\ufe70\u010b\ufe70\u010c\u0351\001\002\000\014\124\ufe6e\137\u034d" +
    "\150\u034e\u010e\065\u0129\064\001\002\000\006\325\ufe74\u010b" +
    "\ufe74\001\002\000\010\325\ufe6d\u010b\ufe6d\u010c\ufe6d\001\002" +
    "\000\010\325\ufe70\u010b\ufe70\u010c\u0351\001\002\000\010\325" +
    "\ufe6c\u010b\ufe6c\u010c\ufe6c\001\002\000\006\325\ufe71\u010b\ufe71" +
    "\001\002\000\006\u010e\065\u0129\064\001\002\000\010\325" +
    "\ufe73\u010b\ufe73\u010c\ufe73\001\002\000\006\u010e\065\u0129\064" +
    "\001\002\000\010\325\ufe72\u010b\ufe72\u010c\ufe72\001\002\000" +
    "\010\325\ufed5\u010b\ufed5\u010c\u024a\001\002\000\006\325\ufe7e" +
    "\u010b\ufe7e\001\002\000\006\u010e\065\u0129\064\001\002\000" +
    "\074\004\u0363\263\u0364\337\105\340\102\341\122\342\131" +
    "\343\121\344\104\345\076\346\126\347\111\350\117\351" +
    "\130\352\107\353\101\354\110\355\077\356\125\357\124" +
    "\360\106\361\127\362\116\363\113\364\133\365\132\366" +
    "\100\367\103\370\120\u010e\u01f3\001\002\000\006\114\u036a" +
    "\215\u036b\001\002\000\006\325\ufe7b\u010b\ufe7b\001\002\000" +
    "\006\325\ufe7c\u010b\ufe7c\001\002\000\014\134\u01f7\215\ufed2" +
    "\220\ufed2\325\ufed2\u010b\ufed2\001\002\000\006\114\ufe78\215" +
    "\ufe78\001\002\000\006\114\ufe77\215\ufe77\001\002\000\012" +
    "\215\u0367\220\u0368\325\ufecd\u010b\ufecd\001\002\000\006\325" +
    "\ufe79\u010b\ufe79\001\002\000\004\220\u0369\001\002\000\006" +
    "\325\ufecf\u010b\ufecf\001\002\000\006\325\ufece\u010b\ufece\001" +
    "\002\000\006\325\ufe76\u010b\ufe76\001\002\000\004\046\u036d" +
    "\001\002\000\006\325\ufe7a\u010b\ufe7a\001\002\000\004\061" +
    "\u036e\001\002\000\006\325\ufe75\u010b\ufe75\001\002\000\006" +
    "\325\ufe84\u010b\ufe84\001\002\000\006\134\ufe88\152\ufe88\001" +
    "\002\000\006\134\ufe87\152\ufe87\001\002\000\006\134\u0373" +
    "\152\u0374\001\002\000\006\u010e\065\u0129\064\001\002\000" +
    "\004\106\u0376\001\002\000\006\325\ufe89\u010b\ufe89\001\002" +
    "\000\004\324\u0377\001\002\000\006\325\ufe85\u010b\ufe85\001" +
    "\002\000\006\325\ufe86\u010b\ufe86\001\002\000\012\063\u037b" +
    "\250\uff2b\u010e\uff2b\u0129\uff2b\001\002\000\010\250\u037e\u010e" +
    "\065\u0129\064\001\002\000\010\250\uff2c\u010e\uff2c\u0129\uff2c" +
    "\001\002\000\006\325\uff2d\u010b\uff2d\001\002\000\004\063" +
    "\u0386\001\002\000\004\u0110\u0380\001\002\000\006\325\uff2a" +
    "\u010b\uff2a\001\002\000\006\u010e\065\u0129\064\001\002\000" +
    "\004\u010c\u0382\001\002\000\004\u0124\u0383\001\002\000\004" +
    "\u0111\u0384\001\002\000\006\325\uff25\u010b\uff25\001\002\000" +
    "\010\304\u0136\325\uff67\u010b\uff67\001\002\000\006\u010e\065" +
    "\u0129\064\001\002\000\012\304\uff26\325\uff26\u010b\uff26\u010c" +
    "\u0389\001\002\000\010\304\uff28\325\uff28\u010b\uff28\001\002" +
    "\000\006\u010e\065\u0129\064\001\002\000\012\304\uff26\325" +
    "\uff26\u010b\uff26\u010c\u0389\001\002\000\010\304\uff27\325\uff27" +
    "\u010b\uff27\001\002\000\006\325\uff29\u010b\uff29\001\002\000" +
    "\006\u010e\065\u0129\064\001\002\000\004\152\u038f\001\002" +
    "\000\006\u010e\065\u0129\064\001\002\000\004\u0123\u0397\001" +
    "\002\000\012\063\u0393\304\uff1d\325\uff1d\u010b\uff1d\001\002" +
    "\000\010\304\u0136\325\uff67\u010b\uff67\001\002\000\006\u010e" +
    "\065\u0129\064\001\002\000\012\304\uff26\325\uff26\u010b\uff26" +
    "\u010c\u0389\001\002\000\010\304\uff1e\325\uff1e\u010b\uff1e\001" +
    "\002\000\006\325\uff24\u010b\uff24\001\002\000\036\220\u0159" +
    "\233\u039a\326\u014b\327\u0154\330\u015a\331\u0158\332\u0155\u010e" +
    "\065\u0110\u0157\u0124\u0149\u0127\u014d\u0128\u014e\u0129\064\u012b\u0156" +
    "\001\002\000\014\063\uff21\304\uff21\325\uff21\u010b\uff21\u010c" +
    "\uff21\001\002\000\014\063\uff1f\304\uff1f\325\uff1f\u010b\uff1f" +
    "\u010c\u039b\001\002\000\014\063\uff22\304\uff22\325\uff22\u010b" +
    "\uff22\u010c\uff22\001\002\000\006\u010e\065\u0129\064\001\002" +
    "\000\012\063\uff23\304\uff23\325\uff23\u010b\uff23\001\002\000" +
    "\012\063\uff20\304\uff20\325\uff20\u010b\uff20\001\002\000\006" +
    "\u010e\065\u0129\064\001\002\000\006\325\uffa5\u010b\uffa5\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u039d\000\064\002\050\003\047\004\034\005\030\006" +
    "\003\007\017\027\015\043\032\070\016\113\036\123\006" +
    "\131\004\136\037\244\052\270\012\277\024\301\044\303" +
    "\013\304\054\306\021\313\025\321\053\337\035\346\026" +
    "\365\031\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\057\u038c\001\001\000\004\057\u0378\001\001\000\002\001" +
    "\001\000\002\001\001\000\022\245\u0339\246\u033f\251\u033b" +
    "\252\u033e\254\u0335\304\054\321\u0337\346\u0336\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\274\u032c\001\001\000" +
    "\004\071\u02e9\001\001\000\002\001\001\000\006\021\u02d1" +
    "\307\u02d0\001\001\000\002\001\001\000\004\010\u02ce\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\u02b3\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\274\u02af" +
    "\001\001\000\004\057\u028c\001\001\000\026\137\u010e\140" +
    "\u0115\141\u0108\165\u010a\166\u0114\167\u0113\175\u010b\304\054" +
    "\321\u010c\346\u0109\001\001\000\016\030\337\031\332\033" +
    "\344\035\340\036\336\040\343\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\274\330\302\327\001\001\000" +
    "\004\010\325\001\001\000\002\001\001\000\006\274\317" +
    "\300\315\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\322\060\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\011\061\012\222\001\001\000\006\011\061\012" +
    "\062\001\001\000\004\013\217\001\001\000\004\323\070" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\305\216\001\001\000\010" +
    "\021\074\324\072\325\071\001\001\000\002\001\001\000" +
    "\004\333\151\001\001\000\002\001\001\000\010\011\114" +
    "\024\113\327\122\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\330" +
    "\137\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\326\133\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\021\074\325\135\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\331\145\332\144" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\332\147\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\341\172\001\001\000\010\334\154\335\153" +
    "\337\155\001\001\000\004\336\167\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\011\161\340\164\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\334\170\335\153\337\155\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\004\174\070\016\113\036\123\006\131" +
    "\004\342\175\343\176\001\001\000\004\010\203\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\004\174\070" +
    "\016\113\036\123\006\131\004\343\200\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\016\004" +
    "\205\070\016\113\036\123\006\131\004\344\206\001\001" +
    "\000\002\001\001\000\004\010\207\001\001\000\002\001" +
    "\001\000\016\004\210\070\016\113\036\123\006\131\004" +
    "\345\211\001\001\000\004\010\212\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\221\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\021\227\347\224\350\226\351\225\001\001\000" +
    "\002\001\001\000\004\352\237\001\001\000\002\001\001" +
    "\000\004\353\231\001\001\000\002\001\001\000\004\024" +
    "\232\001\001\000\004\330\233\001\001\000\004\354\234" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\021" +
    "\227\350\240\351\225\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\024\245\355\244\356" +
    "\247\363\243\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\357\303\001\001\000\004\357\250\001\001\000" +
    "\002\001\001\000\004\353\274\001\001\000\004\361\257" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\360\260" +
    "\001\001\000\002\001\001\000\004\357\262\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\011\161\340\273\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\070\300\362" +
    "\276\001\001\000\002\001\001\000\004\070\301\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\353\304\001\001\000\002\001\001\000\014\004\306" +
    "\070\016\113\036\123\006\131\004\001\001\000\004\010" +
    "\307\001\001\000\002\001\001\000\006\021\313\364\312" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\011\321\021\323\276\322\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\064\002\326\003\047\004\034\005" +
    "\030\006\003\007\017\027\015\043\032\070\016\113\036" +
    "\123\006\131\004\136\037\244\052\270\012\277\024\301" +
    "\044\303\013\304\054\306\021\313\025\321\053\337\035" +
    "\346\026\365\031\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\011\321\021\323\276\331\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\020\u0102\001\001\000" +
    "\004\020\371\001\001\000\004\020\367\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\020" +
    "\355\001\001\000\004\020\346\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\011\061\012" +
    "\347\001\001\000\004\034\350\001\001\000\002\001\001" +
    "\000\006\011\061\012\352\001\001\000\004\034\353\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\011\356" +
    "\014\357\001\001\000\004\015\364\001\001\000\004\032" +
    "\360\001\001\000\002\001\001\000\006\011\356\014\362" +
    "\001\001\000\004\032\363\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\011\061\012\366\001\001\000\002" +
    "\001\001\000\004\011\370\001\001\000\002\001\001\000" +
    "\006\011\372\041\373\001\001\000\002\001\001\000\004" +
    "\042\375\001\001\000\006\011\372\041\376\001\001\000" +
    "\002\001\001\000\004\042\377\001\001\000\002\001\001" +
    "\000\006\011\356\014\u0101\001\001\000\002\001\001\000" +
    "\004\011\u0103\001\001\000\004\037\u0105\001\001\000\004" +
    "\011\u0106\001\001\000\002\001\001\000\004\037\u0107\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\u0255\001\001\000\002\001\001\000\004\011\u0254" +
    "\001\001\000\002\001\001\000\006\011\061\012\u0251\001" +
    "\001\000\006\011\356\014\u01a8\001\001\000\004\225\u0116" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\011\u011a" +
    "\001\001\000\002\001\001\000\006\011\356\014\u011c\001" +
    "\001\000\004\170\u011d\001\001\000\004\173\u012a\001\001" +
    "\000\006\011\u011f\171\u0120\001\001\000\004\075\u0122\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\172\u0126" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\u0127\001\001\000\002\001\001\000\004\075\u0128\001\001" +
    "\000\004\172\u0129\001\001\000\002\001\001\000\004\067" +
    "\u0136\001\001\000\004\110\u012c\001\001\000\002\001\001" +
    "\000\006\011\u012e\111\u012f\001\001\000\004\112\u0131\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\u0133\001\001\000\004\112\u0134\001\001\000" +
    "\002\001\001\000\006\056\u013d\061\u013f\001\001\000\004" +
    "\174\u0138\001\001\000\004\011\u0139\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\u013b\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\011\u014e\016\u014b\046" +
    "\u0149\050\u0152\052\u0150\053\u014f\063\u0151\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\056\u013d\061\u0141\001" +
    "\001\000\002\001\001\000\006\062\u0143\066\u0145\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\056\u013d\061" +
    "\u0147\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\056\u0180\064\u018a\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\017\u017b\001\001\000\002\001\001\000\004\051" +
    "\u0174\001\001\000\006\062\u0173\066\u0145\001\001\000\004" +
    "\047\u016c\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\011\u014e\016\u014b\046\u0166\050\u0152" +
    "\052\u0150\053\u014f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\011\u014e\016\u015d\054\u015b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\011\u014e\016\u015d\054\u0165\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\011\u014e\016" +
    "\u015d\054\u0169\001\001\000\002\001\001\000\010\011\u014e" +
    "\016\u015d\054\u016b\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\011\u014e\016\u014b\050\u0171\052\u0150\053\u014f" +
    "\001\001\000\014\011\u014e\016\u014b\050\u016f\052\u0150\053" +
    "\u014f\001\001\000\004\047\u0170\001\001\000\002\001\001" +
    "\000\004\047\u0172\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\011\u014e\016\u014b\052\u0179" +
    "\053\u014f\001\001\000\012\011\u014e\016\u014b\052\u0177\053" +
    "\u014f\001\001\000\004\051\u0178\001\001\000\002\001\001" +
    "\000\004\051\u017a\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\011\356\014\u017d\001\001\000\002\001\001" +
    "\000\010\011\u014e\016\u015d\054\u017f\001\001\000\002\001" +
    "\001\000\004\065\u019c\001\001\000\016\011\u014e\016\u014b" +
    "\046\u0198\050\u0152\052\u0150\053\u014f\001\001\000\016\011" +
    "\u014e\016\u014b\046\u0197\050\u0152\052\u0150\053\u014f\001\001" +
    "\000\016\011\u014e\016\u014b\046\u0196\050\u0152\052\u0150\053" +
    "\u014f\001\001\000\016\011\u014e\016\u014b\046\u0195\050\u0152" +
    "\052\u0150\053\u014f\001\001\000\016\011\u014e\016\u014b\046" +
    "\u0194\050\u0152\052\u0150\053\u014f\001\001\000\016\011\u014e" +
    "\016\u014b\046\u0193\050\u0152\052\u0150\053\u014f\001\001\000" +
    "\016\011\u014e\016\u014b\046\u0192\050\u0152\052\u0150\053\u014f" +
    "\001\001\000\016\011\u014e\016\u014b\046\u0191\050\u0152\052" +
    "\u0150\053\u014f\001\001\000\016\011\u014e\016\u014b\046\u0190" +
    "\050\u0152\052\u0150\053\u014f\001\001\000\002\001\001\000" +
    "\016\011\u014e\016\u014b\046\u018f\050\u0152\052\u0150\053\u014f" +
    "\001\001\000\004\056\u018d\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\056\u013d\061\u01a7\001\001\000" +
    "\002\001\001\000\006\056\u013d\061\u019d\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\056\u013d\061\u019f\001" +
    "\001\000\002\001\001\000\016\011\u014e\016\u014b\046\u01a1" +
    "\050\u0152\052\u0150\053\u014f\001\001\000\004\055\u01a3\001" +
    "\001\000\016\011\u014e\016\u014b\046\u01a5\050\u0152\052\u0150" +
    "\053\u014f\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\055\u01a6\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\011\u01b0\200\u01ad\205\u01aa\223" +
    "\u01b1\235\u01ab\243\u01ac\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\201\u024a\001\001\000" +
    "\004\011\u0246\001\001\000\004\011\u0245\001\001\000\010" +
    "\022\u01f5\023\u01f4\024\u01f3\001\001\000\004\236\u01b5\001" +
    "\001\000\004\177\u01ee\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\225\u01b7\001\001\000" +
    "\004\237\u01b8\001\001\000\002\001\001\000\004\011\u01ba" +
    "\001\001\000\004\075\u01bb\001\001\000\004\242\u01bc\001" +
    "\001\000\002\001\001\000\004\011\u01be\001\001\000\004" +
    "\075\u01bf\001\001\000\004\242\u01c0\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\225\u01c3\001\001\000\004" +
    "\237\u01c4\001\001\000\002\001\001\000\004\240\u01c6\001" +
    "\001\000\002\001\001\000\004\011\u01c8\001\001\000\004" +
    "\241\u01c9\001\001\000\002\001\001\000\004\011\u01cb\001" +
    "\001\000\004\241\u01cc\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\011\061\012\u01cf\001\001\000\004\227" +
    "\u01d1\001\001\000\004\011\u01ec\001\001\000\004\230\u01d3" +
    "\001\001\000\004\231\u01ea\001\001\000\004\231\u01d5\001" +
    "\001\000\004\232\u01e9\001\001\000\004\177\u01df\001\001" +
    "\000\004\232\u01d7\001\001\000\002\001\001\000\004\233" +
    "\u01db\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\202\u01e1\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\203\u01e5\001\001\000" +
    "\004\204\u01e7\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\230\u01eb\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\056\u013d\061" +
    "\u01f0\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\024\u0243\001\001\000\002\001\001\000\004\025\u023d\001" +
    "\001\000\004\206\u01f7\001\001\000\004\011\u023b\001\001" +
    "\000\012\213\u01ff\214\u01fe\216\u01fd\223\u01fb\001\001\000" +
    "\004\212\u0237\001\001\000\006\222\u0236\223\u020a\001\001" +
    "\000\004\011\u0222\001\001\000\010\224\u0220\226\u0212\234" +
    "\u020e\001\001\000\002\001\001\000\004\217\u0200\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\211\u0209\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\220\u0206" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\222\u020b" +
    "\223\u020a\001\001\000\010\224\u020c\226\u0212\234\u020e\001" +
    "\001\000\002\001\001\000\006\222\u021f\223\u020a\001\001" +
    "\000\004\177\u021b\001\001\000\004\225\u021a\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\011\061\012\u0214\001\001\000\004\227" +
    "\u0215\001\001\000\004\230\u0216\001\001\000\004\177\u0217" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\056\u013d" +
    "\061\u021d\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\222\u0221\223\u020a\001\001\000\002" +
    "\001\001\000\004\221\u0224\001\001\000\004\215\u0228\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\207\u022c\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\212\u0231\001\001\000\004" +
    "\177\u022d\001\001\000\004\211\u022e\001\001\000\006\222" +
    "\u022f\223\u020a\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\177\u0238\001\001\000\004\211\u0239\001\001\000\006\222" +
    "\u023a\223\u020a\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\026\u0240\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\225\u0247\001\001\000\004\237\u0248" +
    "\001\001\000\002\001\001\000\016\011\u01b0\200\u024f\205" +
    "\u01aa\223\u01b1\235\u01ab\243\u01ac\001\001\000\002\001\001" +
    "\000\004\176\u024c\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\201\u0250\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\070\u0253\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\142\u0256\143\u0258" +
    "\001\001\000\002\001\001\000\004\145\u025d\001\001\000" +
    "\004\144\u0259\001\001\000\002\001\001\000\004\011\u025b" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\146" +
    "\u0260\147\u025e\001\001\000\002\001\001\000\004\150\u0261" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\151\u0268\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\152\u026d" +
    "\001\001\000\012\154\u0270\155\u026f\160\u0272\163\u0274\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\152\u0289\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\156\u0279\157\u0278\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\161" +
    "\u0280\001\001\000\006\157\u0281\162\u0282\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\157\u0286\164\u0287\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\146\u028b\147\u025e\001\001\000\002" +
    "\001\001\000\004\114\u0293\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\060\u0292\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\011\356\014" +
    "\u0295\001\001\000\002\001\001\000\006\110\u0296\115\u0297" +
    "\001\001\000\002\001\001\000\004\121\u029a\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\116\u02a1\117\u02a0\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\120\u02ab" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\122" +
    "\u02a5\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\116\u02a7\117\u02a0\001\001\000\002\001\001\000\004\122" +
    "\u02a9\001\001\000\002\001\001\000\004\117\u02ac\001\001" +
    "\000\002\001\001\000\004\120\u02ad\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\011\u02b1\021\u02b2\275\u02b0" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\366\u02b7\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\367\u02b9\001\001\000" +
    "\002\001\001\000\004\370\u02bb\001\001\000\002\001\001" +
    "\000\004\371\u02c0\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\372\u02c4" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\070\u02c7" +
    "\001\001\000\004\373\u02c8\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\374\u02cc\001\001\000\006\011\u012e" +
    "\111\u02cd\001\001\000\002\001\001\000\002\001\001\000" +
    "\064\002\u02cf\003\047\004\034\005\030\006\003\007\017" +
    "\027\015\043\032\070\016\113\036\123\006\131\004\136" +
    "\037\244\052\270\012\277\024\301\044\303\013\304\054" +
    "\306\021\313\025\321\053\337\035\346\026\365\031\001" +
    "\001\000\002\001\001\000\012\011\061\012\u02d3\021\u02d5" +
    "\310\u02d4\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\311\u02e6\001\001\000\010\021\u02d8\314\u02d6\315\u02d7" +
    "\001\001\000\002\001\001\000\004\312\u02e2\001\001\000" +
    "\012\021\u02de\305\u02dc\316\u02dd\320\u02db\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\317\u02e0" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\021" +
    "\u02d8\314\u02e3\315\u02d7\001\001\000\002\001\001\000\004" +
    "\312\u02e4\001\001\000\002\001\001\000\004\305\u02e7\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\057\u02eb\001\001\000\002\001\001\000\020\011" +
    "\u014e\016\u014b\046\u02ec\050\u0152\052\u0150\053\u014f\106\u02ee" +
    "\001\001\000\010\011\u02f2\044\u032a\045\u02f5\001\001\000" +
    "\004\107\u0326\001\001\000\004\101\u02ef\001\001\000\004" +
    "\067\u030d\001\001\000\006\011\356\014\u02f1\001\001\000" +
    "\010\011\u02f2\044\u02f3\045\u02f5\001\001\000\002\001\001" +
    "\000\006\103\u02fa\104\u02fd\001\001\000\006\011\u02f2\045" +
    "\u02f7\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\105\u030c\001\001\000\002\001\001\000" +
    "\004\102\u0308\001\001\000\004\105\u0306\001\001\000\004" +
    "\105\u0305\001\001\000\002\001\001\000\006\011\356\014" +
    "\u02ff\001\001\000\010\011\u02f2\044\u0300\045\u02f5\001\001" +
    "\000\002\001\001\000\006\056\u013d\061\u0302\001\001\000" +
    "\006\103\u0303\104\u02fd\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\011" +
    "\356\014\u0309\001\001\000\002\001\001\000\010\011\u02f2" +
    "\044\u030a\045\u02f5\001\001\000\006\103\u030b\104\u02fd\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\077\u030f" +
    "\001\001\000\002\001\001\000\004\072\u0311\001\001\000" +
    "\006\056\u013d\061\u031e\001\001\000\004\073\u0313\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\011\u014e\016" +
    "\u014b\046\u0315\050\u0152\052\u0150\053\u014f\001\001\000\004" +
    "\074\u0317\001\001\000\004\011\u031d\001\001\000\004\075" +
    "\u0318\001\001\000\020\011\u014e\016\u014b\046\u0319\050\u0152" +
    "\052\u0150\053\u014f\076\u031a\001\001\000\004\074\u031b\001" +
    "\001\000\002\001\001\000\004\075\u031c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\016\011" +
    "\u014e\016\u014b\046\u0320\050\u0152\052\u0150\053\u014f\001\001" +
    "\000\004\100\u0322\001\001\000\016\011\u014e\016\u014b\046" +
    "\u0323\050\u0152\052\u0150\053\u014f\001\001\000\002\001\001" +
    "\000\004\100\u0324\001\001\000\002\001\001\000\016\011" +
    "\u014e\016\u014b\046\u0327\050\u0152\052\u0150\053\u014f\001\001" +
    "\000\002\001\001\000\010\011\u02f2\044\u0328\045\u02f5\001" +
    "\001\000\004\107\u0329\001\001\000\002\001\001\000\004" +
    "\107\u032b\001\001\000\002\001\001\000\004\271\u032e\001" +
    "\001\000\004\272\u0330\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\273\u0332\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\011" +
    "\u036f\247\u0371\001\001\000\002\001\001\000\004\011\u036e" +
    "\001\001\000\002\001\001\000\006\011\356\014\u0345\001" +
    "\001\000\006\011\061\012\u0340\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\110\u0341\253\u0342\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\070\u0344\001\001" +
    "\000\002\001\001\000\010\255\u0349\256\u0346\263\u034a\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\011\u01b0" +
    "\200\u035a\205\u01aa\223\u01b1\235\u01ab\243\u01ac\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\264\u034f\266\u034e" +
    "\001\001\000\004\020\u0358\001\001\000\002\001\001\000" +
    "\004\020\u0356\001\001\000\004\265\u0351\001\001\000\012" +
    "\011\u0352\264\u0354\266\u034e\267\u0353\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\265\u0355\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\u0357\001\001\000" +
    "\002\001\001\000\004\011\u0359\001\001\000\002\001\001" +
    "\000\004\201\u035b\001\001\000\002\001\001\000\004\011" +
    "\u035d\001\001\000\016\022\u0361\023\u01f4\024\u01f3\257\u0360" +
    "\260\u035f\261\u035e\001\001\000\004\262\u036b\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\206\u0364\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\210\u0365\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\250" +
    "\u0374\001\001\000\004\011\u0377\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\124\u0379\001\001\000\010\011\356" +
    "\014\u037c\125\u037b\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\126\u0384\001\001\000\004\130\u037e\001\001" +
    "\000\002\001\001\000\004\011\u0380\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\067\u038b\001\001\000\006\011\356\014\u0386\001" +
    "\001\000\004\127\u0387\001\001\000\002\001\001\000\006" +
    "\011\356\014\u0389\001\001\000\004\127\u038a\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\011\356\014\u038d" +
    "\001\001\000\002\001\001\000\006\011\u038f\132\u0390\001" +
    "\001\000\002\001\001\000\004\135\u0391\001\001\000\004" +
    "\067\u0395\001\001\000\006\011\356\014\u0393\001\001\000" +
    "\004\127\u0394\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\011\u014e\016\u014b\046\u0397\050\u0152\052\u0150\053" +
    "\u014f\133\u0398\001\001\000\002\001\001\000\004\134\u039b" +
    "\001\001\000\002\001\001\000\006\011\u038f\132\u039c\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\011\356" +
    "\014\u039e\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public String Er = "";
    private Symbol s;

    public Symbol getS(){
    	return this.s;
    }

    public final Class getSymbolContainer() {
        return sym.class;
    }

    public void syntax_error(Symbol s){
  	this.s=s; 
 	List<Integer> ids = expected_token_ids();
	LinkedList<String> idsNames = new LinkedList<String>();
	for (Integer esperado : ids){
            idsNames.add(symbl_name_from_id(esperado));
            idsNames.add(", ");
	}
       	Er = Er + ("Error de sintaxis en Token " + s.value + ", en columna " + (s.left+1) + ", en linea " + (s.right+1) + ", esperando tokens " + idsNames.toString() + "\n\n");
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        List<Integer> ids = expected_token_ids();
	LinkedList<String> idsNames = new LinkedList<String>();
	for (Integer esperado : ids){
            idsNames.add(symbl_name_from_id(esperado));
            idsNames.add(", ");
	}
       	Er = Er + ("Error de sintaxis en Token " + s.value + ", en columna " + (s.left+1) + ", en linea " + (s.right+1) + ", esperando tokens " + idsNames.toString() + "\n\n");   
    }
    
    public String symbl_name_from_id(int id){
	Field[] fields = getSymbolContainer().getFields();
	for(Field f : fields){
            try {
		if (f.getInt(null)==id)
                    return f.getName();
            } catch (IllegalArgumentException e) {
                //e.printStackTrace();
            } catch (IllegalAccessException e) {
                //e.printStackTrace();
            }
	}
	return "invalid symbol id";
    }

    public List<Integer> expected_token_ids() {
        List<Integer> ret = new LinkedList<Integer>();
	int parse_state = ((Symbol)stack.peek()).parse_state ;
	short[] row = action_tab[parse_state];
	for (int i = 0; i<row.length; i+=2){
	    if (row[i]==-1) continue;
            if (!validate_expected_symbol(row[i])) continue;
            ret.add(new Integer(row[i]));
	}
	return ret;
    }
    
    private boolean validate_expected_symbol(int id){
	short lhs,rhs_size;
	int act;
	try {
            virtual_parse_stack vstack = new virtual_parse_stack(stack);
            /* parse until we fail or get past the lookahead input */
            for (;;){
                /* look up the action from the current state (on top of stack) */
		act = get_action(vstack.top(), id);

                /* if its an error, we fail */
		if (act == 0) return false;

                /* > 0 encodes a shift */
		if (act > 0){
                    /* push the new state on the stack */
                    vstack.push(act-1);
                    /* advance simulated input, if we run off the end, we are done */
                    if (!advance_lookahead()) return true;
		}
                    /* < 0 encodes a reduce */
		else{
                    /* if this is a reduce with the start production we are done */
                    if ((-act)-1 == start_production())  return true;

		    /* get the lhs Symbol and the rhs size */
                    lhs = production_tab[(-act)-1][0];
                    rhs_size = production_tab[(-act)-1][1];
                    /* pop handle off the stack */
                    for (int i = 0; i < rhs_size; i++) vstack.pop();
                    vstack.push(get_reduce(vstack.top(), lhs));
		}
            }
	} catch (Exception e) {
            e.printStackTrace();
	}
	return true;
    }

    protected static final int _error_sync_size(){
	return 1;
    }

    public String obtenerErrores(){
        return Er;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 543: // Cursor7 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor7",250, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 542: // Cursor7 ::= OF ListaColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor7",250, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 541: // Cursor6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor6",249, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 540: // Cursor6 ::= FOR UPDATE Cursor7 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor6",249, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 539: // Cursor5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor5",248, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 538: // Cursor5 ::= TYPE_WARNING 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor5",248, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 537: // Cursor4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",247, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 536: // Cursor4 ::= OPTIMISTIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",247, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 535: // Cursor4 ::= SCROLL_LOCKS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",247, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 534: // Cursor4 ::= READ_ONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",247, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 533: // Cursor3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",246, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 532: // Cursor3 ::= FASTFORWARD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",246, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 531: // Cursor3 ::= DYNAMIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",246, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 530: // Cursor3 ::= KEYSET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",246, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 529: // Cursor3 ::= STATIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",246, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 528: // Cursor2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",245, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 527: // Cursor2 ::= SCROLL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",245, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // Cursor2 ::= FORWARDONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",245, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // Cursor1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",244, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // Cursor1 ::= GLOBAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",244, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // Cursor1 ::= LOCAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",244, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // Cursor ::= DECLARE ID CURSOR Cursor1 Cursor2 Cursor3 Cursor4 Cursor5 FOR Select Cursor6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor",243, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // ReturnData1 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData1",242, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // ReturnData1 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData1",242, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // ReturnData ::= TipoDeDato3 ReturnTable1 AsWord BEGIN SentenciasDML Fin RETURN ReturnData1 END 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData",241, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // SelectOption ::= Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectOption",240, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // SelectOption ::= Aparentesis Select Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectOption",240, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // FunctionOption ::= EXECUTE AS ExecuteType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",239, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // FunctionOption ::= CALLED ON NULL INPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",239, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // FunctionOption ::= RETURNS NULL ON NULL INPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",239, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // FunctionOption ::= SCHEMABINDING 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",239, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // FunctionOption ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",239, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // ReturnTable2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable2",238, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // ReturnTable2 ::= Coma ReturnTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable2",238, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // ReturnTable1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable1",237, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // ReturnTable1 ::= WITH FunctionOption ReturnTable2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable1",237, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // ReturnTable ::= TABLE ReturnTable1 AsWord RETURN SelectOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable",236, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // ReturnType ::= ReturnData 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnType",235, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // ReturnType ::= ReturnTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnType",235, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // ReadOnlyWord ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReadOnlyWord",234, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // ReadOnlyWord ::= READONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReadOnlyWord",234, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // AsWord ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsWord",233, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // AsWord ::= AS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsWord",233, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // FunctionParam3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam3",232, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // FunctionParam3 ::= Coma FunctionParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam3",232, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // FunctionParam2 ::= Var AsWord TipoDeDato3 ProcedureDataType1 ReadOnlyWord 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam2",231, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // FunctionParam1 ::= FunctionParam2 FunctionParam3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam1",230, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // FunctionParam ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam",229, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // FunctionParam ::= FunctionParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam",229, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // Function ::= OrAlter FUNCTION IDL1 Aparentesis FunctionParam Cparentesis RETURNS ReturnType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Function",228, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // ProcedureStatement2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement2",227, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // ProcedureStatement2 ::= SentenciasDML Fin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement2",227, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // ProcedureStatement1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement1",226, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // ProcedureStatement1 ::= SentenciasDML Fin ProcedureStatement2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement1",226, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // ProcedureStatement ::= SentenciasDML Fin ProcedureStatement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement",225, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // BeginProcedure ::= ProcedureStatement 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BeginProcedure",224, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // BeginProcedure ::= BEGIN ProcedureStatement END 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BeginProcedure",224, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // ProcedureReplication ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureReplication",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // ProcedureReplication ::= FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureReplication",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // ExecuteType ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // ExecuteType ::= OWNER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // ExecuteType ::= SELF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // ExecuteType ::= CALLER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // Execute ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Execute",221, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // Execute ::= EXEC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Execute",221, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // ProcedureOption3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption3",220, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // ProcedureOption3 ::= Coma ProcedureOption1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption3",220, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // ProcedureOption2 ::= Execute AS ExecuteType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",219, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // ProcedureOption2 ::= RECOMPILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",219, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // ProcedureOption2 ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",219, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // ProcedureOption1 ::= ProcedureOption2 ProcedureOption3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption1",218, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // ProcedureOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption",217, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // ProcedureOption ::= WITH ProcedureOption1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption",217, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // ProcedureDataType3 ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType3",216, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // ProcedureDataType3 ::= OUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType3",216, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // ProcedureDataType2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType2",215, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // ProcedureDataType2 ::= ProcedureDataType3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType2",215, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // ProcedureDataType1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType1",214, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // ProcedureDataType1 ::= Igual DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType1",214, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // ProcedureDataType ::= ID READONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",213, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // ProcedureDataType ::= CURSOR VARYING ProcedureDataType3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",213, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // ProcedureDataType ::= TipoDeDato3 ProcedureDataType1 ProcedureDataType2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",213, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // ProcedureParam2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam2",212, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // ProcedureParam2 ::= Coma ProcedureParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam2",212, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // ProcedureParam1 ::= Var ProcedureDataType ProcedureParam2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam1",211, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // ProcedureParam ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam",210, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // ProcedureParam ::= ProcedureParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam",210, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // ProcedureNum ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureNum",209, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // ProcedureNum ::= PuntoYComa Number 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureNum",209, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // ProcedureName ::= PROCEDURE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureName",208, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // ProcedureName ::= PROC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureName",208, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // Procedure ::= OrAlter ProcedureName IDL1 ProcedureNum ProcedureParam ProcedureOption ProcedureReplication AS BeginProcedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Procedure",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // ExecuteProcedureParam4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam4",206, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // ExecuteProcedureParam4 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam4",206, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // ExecuteProcedureParam3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam3",205, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // ExecuteProcedureParam3 ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam3",205, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // ExecuteProcedureParam2 ::= ExecuteProcedureParam4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam2",204, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // ExecuteProcedureParam2 ::= Var ExecuteProcedureParam3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam2",204, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // ExecuteProcedureParam2 ::= Number 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam2",204, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // ExecuteProcedureParam1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam1",203, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // ExecuteProcedureParam1 ::= Var Igual 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam1",203, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // ExecuteProcedureParam ::= ExecuteProcedureParam1 ExecuteProcedureParam2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam",202, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // ExecuteProcedure5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure5",201, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // ExecuteProcedure5 ::= Execute 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure5",201, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // ExecuteProcedure4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure4",200, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // ExecuteProcedure4 ::= Coma ExecuteProcedureParam ExecuteProcedure4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure4",200, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // ExecuteProcedure3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure3",199, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // ExecuteProcedure3 ::= PuntoYComa Number 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure3",199, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // ExecuteProcedure2 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure2",198, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // ExecuteProcedure2 ::= IDL1 ExecuteProcedure3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure2",198, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // ExecuteProcedure1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure1",197, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // ExecuteProcedure1 ::= Var Igual 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure1",197, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // ExecuteProcedure ::= ExecuteProcedure5 ExecuteProcedure1 ExecuteProcedure2 ExecuteProcedureParam ExecuteProcedure4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure",196, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // Number ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Number",195, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // Number ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Number",195, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // OrAlter ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrAlter",194, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // OrAlter ::= OR ALTER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrAlter",194, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // Save ::= SAVE TransactName Name 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Save",193, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // Commit1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit1",192, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // Commit1 ::= TransactName Name1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit1",192, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // Commit ::= COMMIT Commit1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit",191, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // Rollback1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback1",190, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // Rollback1 ::= TransactName Name1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback1",190, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // Rollback ::= ROLLBACK Rollback1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback",189, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // Name1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",188, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // Name1 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",188, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // Name1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",188, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // Name ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name",187, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // Name ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name",187, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // TransactName ::= TRANSACTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TransactName",186, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // TransactName ::= TRAN 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TransactName",186, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // Transact3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact3",185, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // Transact3 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact3",185, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // Transact2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact2",184, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // Transact2 ::= WITH MARK Transact3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact2",184, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // Transact1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact1",183, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // Transact1 ::= NAME Transact2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact1",183, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // Transact ::= BEGIN TransactName Transact1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact",182, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // AlterTableDrop4 ::= AlterTableDrop1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop4",181, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // AlterTableDrop4 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop4",181, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // AlterTableDrop3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop3",180, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // AlterTableDrop3 ::= CONSTRAINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop3",180, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // AlterTableDrop2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop2",179, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // AlterTableDrop2 ::= Coma AlterTableDrop4 AlterTableDrop2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop2",179, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // AlterTableDrop1 ::= COLUMN IFExists ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop1",178, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // AlterTableDrop1 ::= AlterTableDrop3 IFExists ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop1",178, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // AlterTableDrop ::= DROP AlterTableDrop1 AlterTableDrop2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop",177, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // AlterColumna4 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna4",176, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // AlterColumna4 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna4",176, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // AlterColumna3 ::= DROP 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna3",175, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // AlterColumna3 ::= ADD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna3",175, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // AlterColumna2 ::= TipoDeDato DefinicionColumna1 DefinicionColumna3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna2",174, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // AlterColumna1 ::= AlterColumna3 AlterColumna4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna1",173, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // AlterColumna1 ::= AlterColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna1",173, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // AlterColumna ::= ALTER COLUMN ID AlterColumna1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna",172, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // AlterTable1 ::= AlterTableDrop 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",171, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // AlterTable1 ::= ADD TableElement2 TableElement3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",171, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // AlterTable1 ::= AlterColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",171, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // AlterTable ::= TABLE IDL3 AlterTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable",170, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // AlterView1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView1",169, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // AlterView1 ::= ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView1",169, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // AlterView ::= VIEW IDL1 AlterView1 AS Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView",168, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // AlterUser ::= USER ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterUser",167, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // AlterDataBase2 ::= SET ROLLBACK IMMEDIATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase2",166, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // AlterDataBase2 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase2",166, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // AlterDataBase1 ::= CURRENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase1",165, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // AlterDataBase1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase1",165, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // AlterDataBase ::= DATABASE AlterDataBase1 AlterDataBase2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase",164, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // Alter1 ::= Function 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // Alter1 ::= Procedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // Alter1 ::= AlterTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // Alter1 ::= AlterView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // Alter1 ::= AlterDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // Alter1 ::= AlterUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // Alter ::= ALTER Alter1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter",162, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // IndexTabla ::= INDEX ID ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexTabla",161, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // ConstraintTabla5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla5",160, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // ConstraintTabla5 ::= Coma ID OrderBy2 ConstraintTabla5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla5",160, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // ConstraintTabla4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla4",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // ConstraintTabla4 ::= Coma ID ConstraintTabla4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla4",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // ConstraintTabla3 ::= Aparentesis ID ConstraintTabla4 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla3",158, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // ConstraintTabla2 ::= Aparentesis ID OrderBy2 ConstraintTabla5 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla2",157, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // ConstraintTabla1 ::= CHECK TableElement1 Aparentesis Condicion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // ConstraintTabla1 ::= FOREIGN KEY ConstraintTabla3 REFERENCES IDL1 ConstraintColumna5 ConstraintColumna6 ConstraintColumna7 TableElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // ConstraintTabla1 ::= UNIQUE ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // ConstraintTabla1 ::= PRIMARY KEY ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // ConstraintTabla ::= ConstraintColumna1 ConstraintTabla1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla",155, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // ConstraintColumna10 ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna10",154, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // ConstraintColumna10 ::= PRIMARY KEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna10",154, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // ConstraintColumna9 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna9",153, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // ConstraintColumna9 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna9",153, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // ConstraintColumna8 ::= SET ConstraintColumna9 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna8",152, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // ConstraintColumna8 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna8",152, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // ConstraintColumna7 ::= UPDATE ConstraintColumna8 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna7",151, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // ConstraintColumna7 ::= DELETE ConstraintColumna8 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna7",151, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // ConstraintColumna6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna6",150, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // ConstraintColumna6 ::= ON ConstraintColumna7 ConstraintColumna6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna6",150, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // ConstraintColumna5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna5",149, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ConstraintColumna5 ::= Aparentesis ID Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna5",149, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ConstraintColumna4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna4",148, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ConstraintColumna4 ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna4",148, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ConstraintColumna3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // ConstraintColumna3 ::= NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // ConstraintColumna3 ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // ConstraintColumna2 ::= CHECK TableElement1 Aparentesis Condicion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",146, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // ConstraintColumna2 ::= ConstraintColumna4 REFERENCES IDL1 ConstraintColumna5 ConstraintColumna6 TableElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",146, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // ConstraintColumna2 ::= ConstraintColumna10 ConstraintColumna3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",146, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // ConstraintColumna1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna1",145, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // ConstraintColumna1 ::= CONSTRAINT ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna1",145, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // ConstraintColumna ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna",144, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // ConstraintColumna ::= ConstraintColumna1 ConstraintColumna2 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna",144, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // DefinicionColumna12 ::= DEFAULT DefinicionColumna8 DefinicionColumna2 TableElement1 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna12",143, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // DefinicionColumna11 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // DefinicionColumna11 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // DefinicionColumna11 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // DefinicionColumna10 ::= FOR REPLICATION DefinicionColumna11 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna10",141, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // DefinicionColumna10 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna10",141, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // DefinicionColumna9 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna9",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // DefinicionColumna9 ::= NOT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna9",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // DefinicionColumna8 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // DefinicionColumna8 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // DefinicionColumna8 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // DefinicionColumna8 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // DefinicionColumna8 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // DefinicionColumna7 ::= ConstraintColumna1 ConstraintColumna2 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // DefinicionColumna7 ::= ROWGUIDCOL ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // DefinicionColumna7 ::= DefinicionColumna9 DefinicionColumna10 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // DefinicionColumna7 ::= IDENTITY DefinicionColumna5 TableElement1 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // DefinicionColumna6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",137, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // DefinicionColumna6 ::= DefinicionColumna7 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",137, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // DefinicionColumna6 ::= CONSTRAINT ID DefinicionColumna12 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",137, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // DefinicionColumna5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna5",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // DefinicionColumna5 ::= Aparentesis Bit Coma Bit Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna5",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // DefinicionColumna4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna4",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // DefinicionColumna4 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna4",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // DefinicionColumna3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // DefinicionColumna3 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // DefinicionColumna3 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // DefinicionColumna2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna2",133, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // DefinicionColumna2 ::= IDENTITY DefinicionColumna5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna2",133, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // DefinicionColumna1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna1",132, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // DefinicionColumna1 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna1",132, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // DefinicionColumna ::= ID TipoDeDato DefinicionColumna1 DefinicionColumna6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna",131, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // TableElement3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement3",127, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // TableElement3 ::= Coma TableElement2 TableElement3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement3",127, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // TableElement2 ::= IndexTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // TableElement2 ::= ConstraintTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // TableElement2 ::= DefinicionColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // TableElement6 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement6",130, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // TableElement5 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement5",129, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // TableElement5 ::= NOT TableElement6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement5",129, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // TableElement4 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement4",128, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // TableElement4 ::= FOR REPLICATION TableElement5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement4",128, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // TableElement1 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement1",125, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // TableElement1 ::= NOT TableElement4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement1",125, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // TableOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableOption",124, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // TableOption ::= ON PRIMARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableOption",124, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // CreateTable ::= TABLE IDL3 Aparentesis TableElement2 TableElement3 Cparentesis TableOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateTable",123, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // OnOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OnOption",122, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // OnOption ::= ON ID Aparentesis ID Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OnOption",122, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // IndexInclude ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexInclude",121, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // IndexInclude ::= INCLUDE ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexInclude",121, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // IndexColumna2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna2",120, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // IndexColumna2 ::= Coma ID OrderBy2 IndexColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna2",120, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // IndexColumna1 ::= ID OrderBy2 IndexColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna1",119, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // IndexColumna ::= Aparentesis IndexColumna1 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna",118, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // CreateIndex1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex1",117, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // CreateIndex1 ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex1",117, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // CreateIndex ::= CreateIndex1 ConstraintColumna3 INDEX ID ON IDL3 IndexColumna IndexInclude Where OnOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex",116, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // CreateView ::= VIEW IDL1 AS Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateView",115, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // FileGrowth1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",114, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // FileGrowth1 ::= Porce 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",114, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // FileGrowth1 ::= Size2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",114, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // FileGrowth ::= FILEGROWTH Igual Integer FileGrowth1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth",113, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // MaxSize2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize2",112, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // MaxSize2 ::= UNLIMITED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize2",112, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // MaxSize2 ::= Size2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize2",112, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // MaxSize1 ::= Integer MaxSize2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize1",111, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // MaxSize ::= MAXSIZE Igual MaxSize1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize",110, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // Size2 ::= TB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // Size2 ::= GB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // Size2 ::= MB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // Size2 ::= KB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // Size1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size1",108, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // Size1 ::= Size2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size1",108, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // Size ::= SIZE Igual Integer Size1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size",107, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // DefinitionOption ::= FileGrowth 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",106, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // DefinitionOption ::= MaxSize 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",106, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // DefinitionOption ::= Size 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",106, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // DefinitionOptions ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOptions",104, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // DefinitionOptions ::= Coma DefinitionOption DefinitionOptions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOptions",104, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // FileName ::= FILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileName",103, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // FileName ::= FILENAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileName",103, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // DefinitionName ::= NAMES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionName",102, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // DefinitionName ::= NAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionName",102, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // Definition ::= Aparentesis DefinitionName Igual Varchar Coma FileName Igual Varchar DefinitionOptions Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definition",101, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // Definitions ::= Definition 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definitions",100, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // Definitions ::= Definition Coma Definitions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definitions",100, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // Primary ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Primary",99, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // Primary ::= PRIMARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Primary",99, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // CollateDataBase ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CollateDataBase",98, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // CollateDataBase ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CollateDataBase",98, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // CreateDataBase2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase2",97, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // CreateDataBase2 ::= ON Primary Definitions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase2",97, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // CreateDataBase1 ::= CreateDataBase2 CollateDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase1",96, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // CreateDataBase ::= DATABASE ID CreateDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase",95, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // CreateUser ::= USER ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateUser",94, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // Create1 ::= CreateIndex 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // Create1 ::= CreateView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // Create1 ::= CreateUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // Create1 ::= CreateDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // Create1 ::= CreateTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // Create1 ::= Function 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // Create1 ::= Procedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // Create ::= CREATE Create1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create",92, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // UpdateFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("UpdateFrom",91, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // UpdateFrom ::= FROM IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("UpdateFrom",91, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // Update3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update3",90, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // Update3 ::= Coma Update1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update3",90, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // Update2 ::= Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update2",89, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // Update2 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update2",89, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // Update1 ::= ID Igual Update2 Update3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update1",88, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // Update ::= UPDATE Top IDL3 SET Update1 UpdateFrom Where 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update",87, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // DeleteServer ::= Aparentesis ID Coma Varchar Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteServer",86, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // Delete3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete3",85, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // Delete3 ::= Coma IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete3",85, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // Delete2 ::= FROM IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete2",84, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // Delete1 ::= IDL3 Delete2 Where 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete1",83, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // Delete1 ::= OPENQUERY DeleteServer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete1",83, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // DeleteFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteFrom",82, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // DeleteFrom ::= FROM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteFrom",82, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // Delete ::= DELETE Top DeleteFrom Delete1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete",81, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // InsertValores1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores1",80, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // InsertValores1 ::= Coma Aparentesis InsertTipo Cparentesis InsertValores1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores1",80, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // InsertValores ::= DEFAULT VALUES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores",79, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // InsertValores ::= VALUES Aparentesis InsertTipo Cparentesis InsertValores1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores",79, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // InsertTipo2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo2",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // InsertTipo2 ::= Coma InsertTipo1 InsertTipo2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo2",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // InsertTipo1 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // InsertTipo1 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // InsertTipo1 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // InsertTipo1 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // InsertTipo1 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // InsertTipo ::= InsertTipo1 InsertTipo2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo",76, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // InsertListaColumna ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertListaColumna",75, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // InsertListaColumna ::= ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertListaColumna",75, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // InsertInto ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertInto",74, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // InsertInto ::= INTO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertInto",74, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // Insert ::= INSERT Top InsertInto IDL3 InsertListaColumna InsertValores 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Insert",73, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // ListaColumnas2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas2",72, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // ListaColumnas2 ::= Coma ID ListaColumnas2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas2",72, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // ListaColumnas1 ::= ID ListaColumnas2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas1",71, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // ListaColumnas ::= Aparentesis ListaColumnas1 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas",70, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // SelectColumnas1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas1",69, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // SelectColumnas1 ::= Coma Operacion AsElement SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas1",69, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // SelectColumnas ::= Mul SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas",68, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // SelectColumnas ::= Operacion AsElement SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas",68, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // JoinOuter ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinOuter",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // JoinOuter ::= OUTER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinOuter",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // JoinType ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // JoinType ::= FULL JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // JoinType ::= LEFT JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // JoinType ::= RIGHT JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // JoinType ::= INNER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // SelectFromJoin ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFromJoin",65, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // SelectFromJoin ::= JoinType JOIN IDL3 AsElement ON Condicion SelectFromJoin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFromJoin",65, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // SelectFrom1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom1",64, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // SelectFrom1 ::= Coma IDL3 AsElement SelectFromJoin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom1",64, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // SelectFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom",63, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // SelectFrom ::= FROM IDL3 AsElement SelectFromJoin SelectFrom1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom",63, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // GroupBy1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy1",62, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // GroupBy1 ::= Coma Operacion GroupBy1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy1",62, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // GroupBy ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy",61, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // GroupBy ::= GROUP BY Operacion GroupBy1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy",61, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // OrderBy3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy3",60, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // OrderBy3 ::= Operacion OrderBy1 OrderBy2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy3",60, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // OrderBy2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // OrderBy2 ::= DESC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // OrderBy2 ::= ASC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // OrderBy1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy1",58, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // OrderBy1 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy1",58, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // OrderBy ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy",57, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // OrderBy ::= ORDER BY Operacion OrderBy1 OrderBy2 OrderBy3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy",57, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // Having ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Having",56, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // Having ::= HAVING Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Having",56, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // Select1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",55, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // Select1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",55, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // Select1 ::= ALL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",55, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // Select ::= SELECT Select1 Top SelectColumnas SelectFrom Where GroupBy Having OrderBy 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select",54, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // Where ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Where",53, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Where ::= WHERE Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Where",53, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Condicion5 ::= OR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion5",52, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Condicion5 ::= AND 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion5",52, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Condicion4 ::= LIKE Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Condicion4 ::= BETWEEN Condicion AND Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Condicion4 ::= IN Aparentesis Operacion Operaciones Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Condicion3 ::= Not Condicion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Condicion3 ::= IS Not NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Condicion3 ::= Igual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Condicion3 ::= Exclamacion Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Condicion3 ::= Dbarra Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Condicion3 ::= Dampersand Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Condicion3 ::= Diferente Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Condicion3 ::= Digual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Condicion3 ::= MayorIgual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Condicion3 ::= Mayor Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Condicion3 ::= MenorIgual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Condicion3 ::= Menor Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // Condicion2 ::= Operacion Condicion3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion2",49, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // Condicion1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion1",48, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // Condicion1 ::= Condicion5 Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion1",48, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Condicion ::= Aparentesis Condicion Cparentesis Condicion1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion",47, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // Condicion ::= Not Condicion2 Condicion1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion",47, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Top1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top1",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Top1 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top1",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Top ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // Top ::= TOP Aparentesis Integer Cparentesis Top1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // Not ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Not",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Not ::= NOT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Not",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Operaciones ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operaciones",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Operaciones ::= Coma Operacion Operaciones 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operaciones",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Operacion6 ::= Mul Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Operacion6 ::= Bit Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Operacion6 ::= Integer Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Operacion6 ::= IDL5 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Operacion5 ::= COUNT Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Operacion5 ::= MAX Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Operacion5 ::= MIN Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Operacion5 ::= AVG Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Operacion5 ::= SUM Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Operacion5 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Operacion5 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Operacion5 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Operacion5 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Operacion5 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Operacion5 ::= IDL5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Operacion3 ::= Operacion5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion3",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Operacion3 ::= Aparentesis Operacion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion3",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Operacion4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Operacion4 ::= Div Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Operacion4 ::= Mul Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Operacion1 ::= Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion1",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Operacion2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Operacion2 ::= Resta Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Operacion2 ::= Suma Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Operacion ::= Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // AsElement1 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement1",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // AsElement1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement1",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // AsElement ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // AsElement ::= AsElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // AsElement ::= AS AsElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Truncate ::= TRUNCATE TABLE IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Truncate",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // DropIndex2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex2",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // DropIndex2 ::= Coma DropIndex1 DropIndex2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex2",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // DropIndex1 ::= ID ON IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex1",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // DropIndex ::= INDEX IFExists DropIndex1 DropIndex2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // DropDataBase1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase1",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // DropDataBase1 ::= Coma ID DropDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase1",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // DropDataBase ::= DATABASE IFExists ID DropDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // DropUser ::= USER IFExists ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropUser",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // DropView1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView1",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // DropView1 ::= Coma IDL1 DropView1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView1",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // DropView ::= VIEW IFExists IDL1 DropView1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // DropTable1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable1",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // DropTable1 ::= Coma IDL3 DropTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable1",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // DropTable ::= TABLE IFExists IDL3 DropTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // DropOptions ::= DropIndex 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // DropOptions ::= DropDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // DropOptions ::= DropView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // DropOptions ::= DropUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // DropOptions ::= DropTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Drop ::= DROP DropOptions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Drop",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // TipoDeDato4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato4",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // TipoDeDato4 ::= Coma Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato4",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // TipoDeDato2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato2",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // TipoDeDato2 ::= Aparentesis Integer TipoDeDato4 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato2",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // TipoDeDato3 ::= VARBINARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // TipoDeDato3 ::= IMAGE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // TipoDeDato3 ::= BINARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // TipoDeDato3 ::= NVARCHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // TipoDeDato3 ::= NTEXT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // TipoDeDato3 ::= NCHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // TipoDeDato3 ::= VARCHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // TipoDeDato3 ::= TEXT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // TipoDeDato3 ::= CHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // TipoDeDato3 ::= TIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // TipoDeDato3 ::= SMALLDATETIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // TipoDeDato3 ::= DATETIMEOFFSET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // TipoDeDato3 ::= DATETIME2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // TipoDeDato3 ::= DATETIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // TipoDeDato3 ::= DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // TipoDeDato3 ::= REAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // TipoDeDato3 ::= FLOAT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // TipoDeDato3 ::= SMALLMONEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // TipoDeDato3 ::= NUMERIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // TipoDeDato3 ::= MONEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // TipoDeDato3 ::= DECIMAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // TipoDeDato3 ::= BIT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // TipoDeDato3 ::= TINYINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // TipoDeDato3 ::= SMALLINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // TipoDeDato3 ::= INT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // TipoDeDato3 ::= BIGINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // TipoDeDato1 ::= Acorchete TipoDeDato3 Ccorchete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato1",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // TipoDeDato1 ::= TipoDeDato3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato1",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // TipoDeDato ::= TipoDeDato1 TipoDeDato2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Var ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Var",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // IFExists ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IFExists",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // IDL6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL6",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // IDL6 ::= Punto IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL6",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // IDL5 ::= ID IDL6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL5",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // IDL4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL4",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // IDL4 ::= Punto IDL1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL4",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // IDL3 ::= ID IDL4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL3",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // IDL2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL2",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // IDL2 ::= Punto ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL2",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // IDL1 ::= ID IDL2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL1",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ID ::= Acorchete Identificador Ccorchete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ID",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ID ::= Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ID",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Fin ::= GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Fin",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Fin ::= PuntoYComa 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Fin",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SentenciasTSQL ::= Function 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTSQL",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SentenciasTSQL ::= ExecuteProcedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTSQL",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SentenciasTSQL ::= Procedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTSQL",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SentenciasTSQL ::= Cursor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTSQL",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SentenciasTCL ::= Save 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SentenciasTCL ::= Commit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SentenciasTCL ::= Rollback 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // SentenciasTCL ::= Transact 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // SentenciasDDL ::= Drop 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // SentenciasDDL ::= Alter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // SentenciasDDL ::= Truncate 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SentenciasDDL ::= Create 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SentenciasDML ::= Update 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // SentenciasDML ::= Delete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // SentenciasDML ::= Insert 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // SentenciasDML ::= Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Inicio2 ::= SentenciasTSQL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Inicio2 ::= SentenciasTCL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Inicio2 ::= SentenciasDDL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Inicio2 ::= SentenciasDML 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Inicio1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Inicio1 ::= error Fin Inicio1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Inicio1 ::= Inicio2 Fin Inicio1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Inicio1 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

