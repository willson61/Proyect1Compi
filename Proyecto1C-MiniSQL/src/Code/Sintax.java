
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Tue Oct 29 17:21:46 CST 2019
//----------------------------------------------------

package Code;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java_cup.runtime.virtual_parse_stack;
import java.lang.reflect.Field;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Tue Oct 29 17:21:46 CST 2019
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u01fc\000\002\002\004\000\002\002\005\000\002\002" +
    "\005\000\002\002\002\000\002\003\003\000\002\003\003" +
    "\000\002\003\003\000\002\003\003\000\002\004\003\000" +
    "\002\004\003\000\002\004\003\000\002\004\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\006\003\000\002\006\003\000\002\006\003" +
    "\000\002\006\003\000\002\007\003\000\002\010\003\000" +
    "\002\010\003\000\002\011\003\000\002\011\005\000\002" +
    "\012\004\000\002\013\004\000\002\013\002\000\002\014" +
    "\004\000\002\015\004\000\002\015\002\000\002\016\004" +
    "\000\002\017\004\000\002\017\002\000\002\020\004\000" +
    "\002\021\004\000\002\022\004\000\002\023\003\000\002" +
    "\023\005\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\024\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\024\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\025\006\000\002\025\002\000\002\026" +
    "\004\000\002\026\002\000\002\027\004\000\002\030\003" +
    "\000\002\030\003\000\002\030\003\000\002\030\003\000" +
    "\002\030\003\000\002\031\006\000\002\032\005\000\002" +
    "\032\002\000\002\033\006\000\002\034\005\000\002\034" +
    "\002\000\002\035\005\000\002\036\006\000\002\037\005" +
    "\000\002\037\002\000\002\040\006\000\002\041\005\000" +
    "\002\042\005\000\002\042\002\000\002\043\005\000\002" +
    "\044\004\000\002\044\003\000\002\044\002\000\002\045" +
    "\003\000\002\045\003\000\002\046\004\000\002\047\005" +
    "\000\002\047\005\000\002\047\002\000\002\050\004\000" +
    "\002\051\005\000\002\051\005\000\002\051\002\000\002" +
    "\052\005\000\002\052\003\000\002\053\003\000\002\053" +
    "\003\000\002\053\003\000\002\053\003\000\002\053\003" +
    "\000\002\053\003\000\002\053\005\000\002\053\005\000" +
    "\002\053\005\000\002\053\005\000\002\053\005\000\002" +
    "\054\004\000\002\054\004\000\002\054\004\000\002\055" +
    "\005\000\002\055\002\000\002\056\003\000\002\056\002" +
    "\000\002\057\007\000\002\060\003\000\002\060\002\000" +
    "\002\061\005\000\002\061\002\000\002\062\004\000\002" +
    "\062\004\000\002\063\004\000\002\064\004\000\002\064" +
    "\004\000\002\064\004\000\002\064\004\000\002\064\004" +
    "\000\002\064\004\000\002\064\004\000\002\064\004\000" +
    "\002\064\004\000\002\064\004\000\002\064\005\000\002" +
    "\064\004\000\002\065\007\000\002\065\006\000\002\065" +
    "\004\000\002\067\004\000\002\067\002\000\002\070\013" +
    "\000\002\071\003\000\002\071\003\000\002\071\002\000" +
    "\002\072\004\000\002\072\002\000\002\073\010\000\002" +
    "\073\002\000\002\074\004\000\002\074\002\000\002\075" +
    "\003\000\002\075\003\000\002\075\002\000\002\076\005" +
    "\000\002\076\002\000\002\077\006\000\002\077\002\000" +
    "\002\100\005\000\002\100\002\000\002\101\007\000\002" +
    "\101\002\000\002\102\006\000\002\102\002\000\002\103" +
    "\011\000\002\103\002\000\002\104\003\000\002\104\004" +
    "\000\002\104\004\000\002\104\004\000\002\104\002\000" +
    "\002\105\003\000\002\105\002\000\002\106\005\000\002" +
    "\106\004\000\002\107\006\000\002\107\002\000\002\110" +
    "\005\000\002\111\004\000\002\112\005\000\002\112\002" +
    "\000\002\113\010\000\002\114\003\000\002\114\002\000" +
    "\002\115\003\000\002\115\002\000\002\116\004\000\002" +
    "\117\003\000\002\117\003\000\002\117\003\000\002\117" +
    "\003\000\002\117\003\000\002\120\005\000\002\120\002" +
    "\000\002\121\007\000\002\121\004\000\002\122\007\000" +
    "\002\122\002\000\002\123\006\000\002\124\003\000\002" +
    "\124\002\000\002\125\004\000\002\125\005\000\002\126" +
    "\005\000\002\127\005\000\002\127\002\000\002\130\007" +
    "\000\002\131\011\000\002\132\006\000\002\133\003\000" +
    "\002\133\003\000\002\134\004\000\002\134\002\000\002" +
    "\135\005\000\002\135\002\000\002\136\004\000\002\137" +
    "\003\000\002\137\003\000\002\137\003\000\002\137\003" +
    "\000\002\137\003\000\002\137\003\000\002\137\003\000" +
    "\002\140\004\000\002\141\005\000\002\142\004\000\002" +
    "\143\005\000\002\143\002\000\002\144\004\000\002\144" +
    "\002\000\002\145\003\000\002\145\002\000\002\146\005" +
    "\000\002\146\003\000\002\147\014\000\002\150\003\000" +
    "\002\150\003\000\002\151\005\000\002\151\002\000\002" +
    "\153\003\000\002\153\003\000\002\153\003\000\002\154" +
    "\006\000\002\155\003\000\002\155\003\000\002\155\003" +
    "\000\002\155\003\000\002\156\005\000\002\157\004\000" +
    "\002\157\003\000\002\160\006\000\002\161\003\000\002" +
    "\161\003\000\002\161\002\000\002\162\006\000\002\163" +
    "\014\000\002\164\003\000\002\164\002\000\002\165\005" +
    "\000\002\166\005\000\002\167\006\000\002\167\002\000" +
    "\002\170\004\000\002\170\002\000\002\171\007\000\002" +
    "\171\002\000\002\172\011\000\002\173\004\000\002\173" +
    "\002\000\002\174\004\000\002\174\002\000\002\177\005" +
    "\000\002\177\003\000\002\200\004\000\002\200\002\000" +
    "\002\201\003\000\002\201\002\000\002\175\003\000\002" +
    "\175\003\000\002\175\003\000\002\176\005\000\002\176" +
    "\002\000\002\202\006\000\002\203\004\000\002\203\002" +
    "\000\002\204\004\000\002\204\002\000\002\205\003\000" +
    "\002\205\004\000\002\205\002\000\002\206\003\000\002" +
    "\206\002\000\002\207\007\000\002\207\002\000\002\210" +
    "\005\000\002\210\003\000\002\210\002\000\002\211\010" +
    "\000\002\211\007\000\002\211\006\000\002\211\004\000" +
    "\002\211\004\000\002\212\003\000\002\212\003\000\002" +
    "\212\003\000\002\212\003\000\002\212\003\000\002\213" +
    "\003\000\002\214\003\000\002\214\005\000\002\215\004" +
    "\000\002\215\003\000\002\215\002\000\002\216\005\000" +
    "\002\216\002\000\002\217\004\000\002\217\002\000\002" +
    "\220\004\000\002\220\010\000\002\220\007\000\002\221" +
    "\003\000\002\221\003\000\002\221\002\000\002\222\004" +
    "\000\002\222\002\000\002\223\005\000\002\223\002\000" +
    "\002\224\005\000\002\224\002\000\002\225\004\000\002" +
    "\225\004\000\002\226\003\000\002\226\004\000\002\227" +
    "\003\000\002\227\003\000\002\230\004\000\002\230\003" +
    "\000\002\231\004\000\002\232\006\000\002\232\005\000" +
    "\002\232\013\000\002\232\007\000\002\233\007\000\002" +
    "\234\006\000\002\235\005\000\002\235\002\000\002\236" +
    "\006\000\002\236\002\000\002\237\006\000\002\240\004" +
    "\000\002\241\003\000\002\241\003\000\002\241\003\000" +
    "\002\241\003\000\002\241\003\000\002\241\003\000\002" +
    "\242\005\000\002\243\003\000\002\243\003\000\002\244" +
    "\004\000\002\244\005\000\002\245\004\000\002\246\007" +
    "\000\002\247\003\000\002\247\002\000\002\250\005\000" +
    "\002\251\003\000\002\251\005\000\002\251\003\000\002" +
    "\252\006\000\002\253\003\000\002\253\004\000\002\254" +
    "\005\000\002\255\003\000\002\255\003\000\002\256\003" +
    "\000\002\256\005\000\002\257\005\000\002\260\005\000" +
    "\002\260\005\000\002\261\005\000\002\261\002\000\002" +
    "\262\003\000\002\262\002\000\002\263\003\000\002\263" +
    "\003\000\002\264\005\000\002\265\004\000\002\265\002" +
    "\000\002\266\005\000\002\266\002\000\002\267\003\000" +
    "\002\267\002\000\002\270\003\000\002\270\003\000\002" +
    "\271\003\000\002\271\003\000\002\272\003\000\002\272" +
    "\003\000\002\272\002\000\002\273\004\000\002\274\004" +
    "\000\002\274\002\000\002\275\004\000\002\276\004\000" +
    "\002\276\002\000\002\277\005\000\002\300\004\000\002" +
    "\300\002\000\002\301\013\000\002\302\003\000\002\302" +
    "\003\000\002\303\004\000\002\303\002\000\002\304\003" +
    "\000\002\304\002\000\002\305\005\000\002\306\004\000" +
    "\002\306\002\000\002\307\005\000\002\307\005\000\002" +
    "\307\004\000\002\310\004\000\002\310\002\000\002\311" +
    "\003\000\002\311\002\000\002\312\003\000\002\312\003" +
    "\000\002\313\004\000\002\313\002\000\002\314\004\000" +
    "\002\315\003\000\002\315\003\000\002\315\005\000\002" +
    "\316\004\000\002\316\002\000\002\317\003\000\002\317" +
    "\003\000\002\320\003\000\002\320\003\000\002\320\003" +
    "\000\002\320\003\000\002\321\004\000\002\321\002\000" +
    "\002\322\005\000\002\322\003\000\002\323\005\000\002" +
    "\324\005\000\002\324\002\000\002\325\004\000\002\325" +
    "\002\000\002\326\012\000\002\327\003\000\002\327\002" +
    "\000\002\330\004\000\002\331\007\000\002\332\004\000" +
    "\002\332\002\000\002\333\003\000\002\333\002\000\002" +
    "\334\003\000\002\334\002\000\002\335\003\000\002\335" +
    "\003\000\002\336\007\000\002\337\005\000\002\337\002" +
    "\000\002\340\004\000\002\340\002\000\002\341\003\000" +
    "\002\341\003\000\002\341\007\000\002\341\006\000\002" +
    "\341\005\000\002\342\005\000\002\342\003\000\002\343" +
    "\013\000\002\344\003\000\002\344\003\000\002\345\015" +
    "\000\002\346\003\000\002\346\003\000\002\346\002\000" +
    "\002\347\003\000\002\347\003\000\002\347\002\000\002" +
    "\350\003\000\002\350\003\000\002\350\003\000\002\350" +
    "\003\000\002\350\002\000\002\351\003\000\002\351\003" +
    "\000\002\351\003\000\002\351\002\000\002\352\003\000" +
    "\002\352\002\000\002\353\005\000\002\353\002\000\002" +
    "\354\004\000\002\354\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0371\000\040\002\ufffe\003\034\037\030\065\023\106" +
    "\021\122\006\133\007\140\025\142\022\167\024\227\012" +
    "\230\043\236\040\251\041\263\031\001\002\000\006\325" +
    "\uffee\u010a\uffee\001\002\000\006\325\ufff4\u010a\ufff4\001\002" +
    "\000\006\216\u0317\221\u0315\001\002\000\010\007\u032d\213" +
    "\uff6a\252\u032c\001\002\000\006\325\344\u010a\342\001\002" +
    "\000\004\002\u0329\001\002\000\004\174\u0327\001\002\000" +
    "\006\325\ufffc\u010a\ufffc\001\002\000\006\325\ufff7\u010a\ufff7" +
    "\001\002\000\006\325\ufff6\u010a\ufff6\001\002\000\006\325" +
    "\ufff3\u010a\ufff3\001\002\000\006\325\ufffd\u010a\ufffd\001\002" +
    "\000\006\325\ufff0\u010a\ufff0\001\002\000\012\216\u0317\221" +
    "\u0315\325\ufe68\u010a\ufe68\001\002\000\012\216\u0317\221\u0315" +
    "\325\ufe65\u010a\ufe65\001\002\000\006\216\u0317\221\u0315\001" +
    "\002\000\032\006\ufe62\071\ufe62\126\ufef9\132\ufef9\174\u02b9" +
    "\212\ufef9\217\u02b4\243\u02b6\262\u02b5\264\u011b\273\u02b8\322" +
    "\ufe62\001\002\000\004\213\112\001\002\000\006\325\ufff9" +
    "\u010a\ufff9\001\002\000\006\325\ufff2\u010a\ufff2\001\002\000" +
    "\022\006\ufe62\071\ufe62\174\u0118\217\u0113\262\u0115\264\u011b" +
    "\273\u0119\322\ufe62\001\002\000\014\132\350\174\355\217" +
    "\347\262\351\273\356\001\002\000\006\325\uffed\u010a\uffed" +
    "\001\002\000\006\325\ufffa\u010a\ufffa\001\002\000\006\325" +
    "\344\u010a\342\001\002\000\006\325\ufffb\u010a\ufffb\001\002" +
    "\000\006\325\ufff1\u010a\ufff1\001\002\000\006\325\uffef\u010a" +
    "\uffef\001\002\000\004\213\112\001\002\000\004\213\112" +
    "\001\002\000\006\325\ufff5\u010a\ufff5\001\002\000\006\u010d" +
    "\047\u0128\046\001\002\000\006\325\ufff8\u010a\ufff8\001\002" +
    "\000\004\214\052\001\002\000\324\004\uffea\011\uffea\037" +
    "\uffea\042\uffea\046\uffea\051\uffea\052\uffea\054\uffea\056\uffea" +
    "\063\uffea\065\uffea\066\uffea\070\uffea\072\uffea\102\uffea\103" +
    "\uffea\105\uffea\113\uffea\114\uffea\115\uffea\126\uffea\127\uffea" +
    "\134\uffea\135\uffea\150\uffea\151\uffea\152\uffea\154\uffea\165" +
    "\uffea\170\uffea\212\uffea\214\uffea\215\uffea\220\uffea\233\uffea" +
    "\236\uffea\237\uffea\243\uffea\244\uffea\251\uffea\263\uffea\264" +
    "\uffea\265\uffea\267\uffea\304\uffea\312\uffea\314\uffea\325\uffea" +
    "\326\uffea\327\uffea\330\uffea\331\uffea\332\uffea\337\uffea\340" +
    "\uffea\341\uffea\342\uffea\343\uffea\344\uffea\345\uffea\346\uffea" +
    "\347\uffea\350\uffea\351\uffea\352\uffea\353\uffea\354\uffea\355" +
    "\uffea\356\uffea\357\uffea\360\uffea\361\uffea\362\uffea\363\uffea" +
    "\364\uffea\365\uffea\366\uffea\367\uffea\370\uffea\u0105\uffea\u0106" +
    "\uffea\u0107\uffea\u0108\uffea\u010a\uffea\u010b\uffea\u010c\uffea\u010d\uffea" +
    "\u010f\uffea\u0110\uffea\u0116\uffea\u0119\uffea\u011a\uffea\u011b\uffea\u011c" +
    "\uffea\u011d\uffea\u011e\uffea\u011f\uffea\u0120\uffea\u0121\uffea\u0122\uffea" +
    "\u0123\uffea\u0126\uffea\u0127\uffea\u0128\uffea\u0129\uffea\001\002\000" +
    "\004\u0128\050\001\002\000\004\u010e\051\001\002\000\324" +
    "\004\uffe9\011\uffe9\037\uffe9\042\uffe9\046\uffe9\051\uffe9\052" +
    "\uffe9\054\uffe9\056\uffe9\063\uffe9\065\uffe9\066\uffe9\070\uffe9" +
    "\072\uffe9\102\uffe9\103\uffe9\105\uffe9\113\uffe9\114\uffe9\115" +
    "\uffe9\126\uffe9\127\uffe9\134\uffe9\135\uffe9\150\uffe9\151\uffe9" +
    "\152\uffe9\154\uffe9\165\uffe9\170\uffe9\212\uffe9\214\uffe9\215" +
    "\uffe9\220\uffe9\233\uffe9\236\uffe9\237\uffe9\243\uffe9\244\uffe9" +
    "\251\uffe9\263\uffe9\264\uffe9\265\uffe9\267\uffe9\304\uffe9\312" +
    "\uffe9\314\uffe9\325\uffe9\326\uffe9\327\uffe9\330\uffe9\331\uffe9" +
    "\332\uffe9\337\uffe9\340\uffe9\341\uffe9\342\uffe9\343\uffe9\344" +
    "\uffe9\345\uffe9\346\uffe9\347\uffe9\350\uffe9\351\uffe9\352\uffe9" +
    "\353\uffe9\354\uffe9\355\uffe9\356\uffe9\357\uffe9\360\uffe9\361" +
    "\uffe9\362\uffe9\363\uffe9\364\uffe9\365\uffe9\366\uffe9\367\uffe9" +
    "\370\uffe9\u0105\uffe9\u0106\uffe9\u0107\uffe9\u0108\uffe9\u010a\uffe9\u010b" +
    "\uffe9\u010c\uffe9\u010d\uffe9\u010f\uffe9\u0110\uffe9\u0116\uffe9\u0119\uffe9" +
    "\u011a\uffe9\u011b\uffe9\u011c\uffe9\u011d\uffe9\u011e\uffe9\u011f\uffe9\u0120" +
    "\uffe9\u0121\uffe9\u0122\uffe9\u0123\uffe9\u0126\uffe9\u0127\uffe9\u0128\uffe9" +
    "\u0129\uffe9\001\002\000\034\024\ufe18\025\ufe18\026\ufe18\027" +
    "\ufe18\030\ufe18\031\ufe18\032\ufe18\033\ufe18\034\ufe18\046\ufe18" +
    "\u0101\054\u0102\053\u0103\ufe18\001\002\000\030\024\ufe19\025" +
    "\ufe19\026\ufe19\027\ufe19\030\ufe19\031\ufe19\032\ufe19\033\ufe19" +
    "\034\ufe19\046\ufe19\u0103\ufe19\001\002\000\030\024\ufe1a\025" +
    "\ufe1a\026\ufe1a\027\ufe1a\030\ufe1a\031\ufe1a\032\ufe1a\033\ufe1a" +
    "\034\ufe1a\046\ufe1a\u0103\ufe1a\001\002\000\030\024\056\025" +
    "\ufe15\026\ufe15\027\ufe15\030\ufe15\031\ufe15\032\ufe15\033\ufe15" +
    "\034\ufe15\046\ufe15\u0103\060\001\002\000\024\025\ufe17\026" +
    "\ufe17\027\ufe17\030\ufe17\031\ufe17\032\ufe17\033\ufe17\034\ufe17" +
    "\046\ufe17\001\002\000\024\025\062\026\063\027\064\030" +
    "\065\031\ufe10\032\ufe10\033\ufe10\034\ufe10\046\ufe10\001\002" +
    "\000\024\025\ufe16\026\ufe16\027\ufe16\030\ufe16\031\ufe16\032" +
    "\ufe16\033\ufe16\034\ufe16\046\ufe16\001\002\000\014\031\071" +
    "\032\067\033\070\034\ufe0c\046\ufe0c\001\002\000\014\031" +
    "\ufe14\032\ufe14\033\ufe14\034\ufe14\046\ufe14\001\002\000\014" +
    "\031\ufe13\032\ufe13\033\ufe13\034\ufe13\046\ufe13\001\002\000" +
    "\014\031\ufe12\032\ufe12\033\ufe12\034\ufe12\046\ufe12\001\002" +
    "\000\014\031\ufe11\032\ufe11\033\ufe11\034\ufe11\046\ufe11\001" +
    "\002\000\006\034\073\046\ufe0a\001\002\000\006\034\ufe0e" +
    "\046\ufe0e\001\002\000\006\034\ufe0d\046\ufe0d\001\002\000" +
    "\006\034\ufe0f\046\ufe0f\001\002\000\004\046\074\001\002" +
    "\000\004\046\ufe0b\001\002\000\004\133\007\001\002\000" +
    "\010\046\077\325\ufe08\u010a\ufe08\001\002\000\006\325\ufe1b" +
    "\u010a\ufe1b\001\002\000\004\251\100\001\002\000\010\226" +
    "\101\325\ufe06\u010a\ufe06\001\002\000\006\u010d\047\u0128\046" +
    "\001\002\000\006\325\ufe09\u010a\ufe09\001\002\000\012\325" +
    "\uff46\u010a\uff46\u010b\106\u0110\uff46\001\002\000\006\325\ufe07" +
    "\u010a\ufe07\001\002\000\010\325\uff48\u010a\uff48\u0110\uff48\001" +
    "\002\000\006\u010d\047\u0128\046\001\002\000\012\325\uff46" +
    "\u010a\uff46\u010b\106\u0110\uff46\001\002\000\010\325\uff47\u010a" +
    "\uff47\u0110\uff47\001\002\000\006\u010d\047\u0128\046\001\002" +
    "\000\004\u010f\113\001\002\000\004\u0127\114\001\002\000" +
    "\004\u0110\115\001\002\000\046\063\uff84\146\uff84\220\uff84" +
    "\250\uff84\300\116\326\uff84\327\uff84\330\uff84\331\uff84\332" +
    "\uff84\u0107\uff84\u010d\uff84\u010f\uff84\u0123\uff84\u0126\uff84\u0127\uff84" +
    "\u0128\uff84\u0129\uff84\001\002\000\044\063\uff85\146\uff85\220" +
    "\uff85\250\uff85\326\uff85\327\uff85\330\uff85\331\uff85\332\uff85" +
    "\u0107\uff85\u010d\uff85\u010f\uff85\u0123\uff85\u0126\uff85\u0127\uff85\u0128" +
    "\uff85\u0129\uff85\001\002\000\044\063\uff86\146\uff86\220\uff86" +
    "\250\uff86\326\uff86\327\uff86\330\uff86\331\uff86\332\uff86\u0107" +
    "\uff86\u010d\uff86\u010f\uff86\u0123\uff86\u0126\uff86\u0127\uff86\u0128\uff86" +
    "\u0129\uff86\001\002\000\174\004\uffe3\037\uffe3\042\uffe3\046" +
    "\uffe3\051\uffe3\054\uffe3\063\uffe3\066\uffe3\070\uffe3\102\uffe3" +
    "\103\uffe3\105\uffe3\127\uffe3\134\uffe3\135\uffe3\151\uffe3\152" +
    "\uffe3\154\uffe3\165\uffe3\170\uffe3\215\uffe3\220\uffe3\233\uffe3" +
    "\237\uffe3\244\uffe3\263\uffe3\264\uffe3\265\uffe3\267\uffe3\304" +
    "\uffe3\325\uffe3\326\uffe3\327\uffe3\330\uffe3\331\uffe3\332\uffe3" +
    "\u0105\uffe3\u0106\uffe3\u0107\uffe3\u0108\uffe3\u010a\uffe3\u010b\uffe3\u010c" +
    "\313\u010d\uffe3\u010f\uffe3\u0110\uffe3\u0119\uffe3\u011a\uffe3\u011b\uffe3" +
    "\u011c\uffe3\u011d\uffe3\u011e\uffe3\u011f\uffe3\u0120\uffe3\u0121\uffe3\u0122" +
    "\uffe3\u0123\uffe3\u0126\uffe3\u0127\uffe3\u0128\uffe3\u0129\uffe3\001\002" +
    "\000\004\152\122\001\002\000\006\u010d\047\u0128\046\001" +
    "\002\000\004\u0122\303\001\002\000\012\063\126\304\uff24" +
    "\325\uff24\u010a\uff24\001\002\000\010\304\134\325\uff6e\u010a" +
    "\uff6e\001\002\000\006\u010d\047\u0128\046\001\002\000\012" +
    "\304\uff2d\325\uff2d\u010a\uff2d\u010b\131\001\002\000\010\304" +
    "\uff25\325\uff25\u010a\uff25\001\002\000\006\u010d\047\u0128\046" +
    "\001\002\000\012\304\uff2d\325\uff2d\u010a\uff2d\u010b\131\001" +
    "\002\000\010\304\uff2e\325\uff2e\u010a\uff2e\001\002\000\056" +
    "\046\uff82\102\uff82\105\uff82\215\137\220\uff87\237\uff82\267" +
    "\uff82\325\uff82\326\uff87\327\uff87\330\uff87\331\uff87\332\uff87" +
    "\u010a\uff82\u010d\uff87\u010f\uff87\u0110\uff82\u0123\uff87\u0126\uff87\u0127" +
    "\uff87\u0128\uff87\u0129\uff87\001\002\000\006\325\uff2b\u010a\uff2b" +
    "\001\002\000\034\220\161\326\143\327\154\330\162\331" +
    "\160\332\155\u010d\047\u010f\157\u0123\141\u0126\145\u0127\146" +
    "\u0128\046\u0129\156\001\002\000\042\070\uff88\127\uff88\170" +
    "\uff88\220\uff88\326\uff88\327\uff88\330\uff88\331\uff88\332\uff88" +
    "\u010d\uff88\u010f\uff88\u0123\uff88\u0126\uff88\u0127\uff88\u0128\uff88\u0129" +
    "\uff88\001\002\000\022\046\uff6f\102\uff6f\105\uff6f\237\uff6f" +
    "\267\uff6f\325\uff6f\u010a\uff6f\u0110\uff6f\001\002\000\142\042" +
    "\uff95\046\uff95\051\uff95\054\uff95\063\uff95\070\uff95\102\uff95" +
    "\105\uff95\127\uff95\134\uff95\151\uff95\170\uff95\215\uff95\220" +
    "\uff95\244\uff95\264\uff95\267\uff95\304\uff95\325\uff95\326\uff95" +
    "\327\uff95\330\uff95\331\uff95\332\uff95\u0105\uff95\u0106\uff95\u0107" +
    "\uff95\u0108\uff95\u010a\uff95\u010b\uff95\u010d\uff95\u010f\uff95\u0110\uff95" +
    "\u0119\uff95\u011a\uff95\u011b\uff95\u011c\uff95\u011d\uff95\u011e\uff95\u011f" +
    "\uff95\u0120\uff95\u0121\uff95\u0122\uff95\u0123\uff95\u0126\uff95\u0127\uff95" +
    "\u0128\uff95\u0129\uff95\001\002\000\040\070\uff87\127\uff87\151" +
    "\246\170\uff87\215\137\u0119\233\u011a\235\u011b\240\u011c\241" +
    "\u011d\237\u011e\243\u011f\236\u0120\242\u0121\247\u0122\244\001" +
    "\002\000\004\u010f\231\001\002\000\142\042\uff98\046\uff98" +
    "\051\uff98\054\uff98\063\uff98\070\uff98\102\uff98\105\uff98\127" +
    "\uff98\134\uff98\151\uff98\170\uff98\215\uff98\220\uff98\244\uff98" +
    "\264\uff98\267\uff98\304\uff98\325\uff98\326\uff98\327\uff98\330" +
    "\uff98\331\uff98\332\uff98\u0105\uff98\u0106\uff98\u0107\uff98\u0108\uff98" +
    "\u010a\uff98\u010b\uff98\u010d\uff98\u010f\uff98\u0110\uff98\u0119\uff98\u011a" +
    "\uff98\u011b\uff98\u011c\uff98\u011d\uff98\u011e\uff98\u011f\uff98\u0120\uff98" +
    "\u0121\uff98\u0122\uff98\u0123\uff98\u0126\uff98\u0127\uff98\u0128\uff98\u0129" +
    "\uff98\001\002\000\142\042\uff96\046\uff96\051\uff96\054\uff96" +
    "\063\uff96\070\uff96\102\uff96\105\uff96\127\uff96\134\uff96\151" +
    "\uff96\170\uff96\215\uff96\220\uff96\244\uff96\264\uff96\267\uff96" +
    "\304\uff96\325\uff96\326\uff96\327\uff96\330\uff96\331\uff96\332" +
    "\uff96\u0105\uff96\u0106\uff96\u0107\uff96\u0108\uff96\u010a\uff96\u010b\uff96" +
    "\u010d\uff96\u010f\uff96\u0110\uff96\u0119\uff96\u011a\uff96\u011b\uff96\u011c" +
    "\uff96\u011d\uff96\u011e\uff96\u011f\uff96\u0120\uff96\u0121\uff96\u0122\uff96" +
    "\u0123\uff96\u0126\uff96\u0127\uff96\u0128\uff96\u0129\uff96\001\002\000" +
    "\142\042\uff97\046\uff97\051\uff97\054\uff97\063\uff97\070\uff97" +
    "\102\uff97\105\uff97\127\uff97\134\uff97\151\uff97\170\uff97\215" +
    "\uff97\220\uff97\244\uff97\264\uff97\267\uff97\304\uff97\325\uff97" +
    "\326\uff97\327\uff97\330\uff97\331\uff97\332\uff97\u0105\uff97\u0106" +
    "\uff97\u0107\uff97\u0108\uff97\u010a\uff97\u010b\uff97\u010d\uff97\u010f\uff97" +
    "\u0110\uff97\u0119\uff97\u011a\uff97\u011b\uff97\u011c\uff97\u011d\uff97\u011e" +
    "\uff97\u011f\uff97\u0120\uff97\u0121\uff97\u0122\uff97\u0123\uff97\u0126\uff97" +
    "\u0127\uff97\u0128\uff97\u0129\uff97\001\002\000\144\042\uffe0\046" +
    "\uffe0\051\uffe0\054\uffe0\063\uffe0\070\uffe0\102\uffe0\105\uffe0" +
    "\127\uffe0\134\uffe0\151\uffe0\170\uffe0\215\uffe0\220\uffe0\244" +
    "\uffe0\264\uffe0\267\uffe0\304\uffe0\325\uffe0\326\uffe0\327\uffe0" +
    "\330\uffe0\331\uffe0\332\uffe0\u0105\uffe0\u0106\uffe0\u0107\uffe0\u0108" +
    "\uffe0\u010a\uffe0\u010b\uffe0\u010c\227\u010d\uffe0\u010f\uffe0\u0110\uffe0" +
    "\u0119\uffe0\u011a\uffe0\u011b\uffe0\u011c\uffe0\u011d\uffe0\u011e\uffe0\u011f" +
    "\uffe0\u0120\uffe0\u0121\uffe0\u0122\uffe0\u0123\uffe0\u0126\uffe0\u0127\uffe0" +
    "\u0128\uffe0\u0129\uffe0\001\002\000\142\042\uff99\046\uff99\051" +
    "\uff99\054\uff99\063\uff99\070\uff99\102\uff99\105\uff99\127\uff99" +
    "\134\uff99\151\uff99\170\uff99\215\uff99\220\uff99\244\uff99\264" +
    "\uff99\267\uff99\304\uff99\325\uff99\326\uff99\327\uff99\330\uff99" +
    "\331\uff99\332\uff99\u0105\uff99\u0106\uff99\u0107\uff99\u0108\uff99\u010a" +
    "\uff99\u010b\uff99\u010d\uff99\u010f\uff99\u0110\uff99\u0119\uff99\u011a\uff99" +
    "\u011b\uff99\u011c\uff99\u011d\uff99\u011e\uff99\u011f\uff99\u0120\uff99\u0121" +
    "\uff99\u0122\uff99\u0123\uff99\u0126\uff99\u0127\uff99\u0128\uff99\u0129\uff99" +
    "\001\002\000\142\042\uff9b\046\uff9b\051\uff9b\054\uff9b\063" +
    "\uff9b\070\uff9b\102\uff9b\105\uff9b\127\uff9b\134\uff9b\151\uff9b" +
    "\170\uff9b\215\uff9b\220\uff9b\244\uff9b\264\uff9b\267\uff9b\304" +
    "\uff9b\325\uff9b\326\uff9b\327\uff9b\330\uff9b\331\uff9b\332\uff9b" +
    "\u0105\uff9b\u0106\uff9b\u0107\220\u0108\221\u010a\uff9b\u010b\uff9b\u010d" +
    "\uff9b\u010f\uff9b\u0110\uff9b\u0119\uff9b\u011a\uff9b\u011b\uff9b\u011c\uff9b" +
    "\u011d\uff9b\u011e\uff9b\u011f\uff9b\u0120\uff9b\u0121\uff9b\u0122\uff9b\u0123" +
    "\uff9b\u0126\uff9b\u0127\uff9b\u0128\uff9b\u0129\uff9b\001\002\000\006" +
    "\042\213\264\214\001\002\000\136\042\uff9f\046\uff9f\051" +
    "\uff9f\054\uff9f\063\uff9f\070\uff9f\102\uff9f\105\uff9f\127\uff9f" +
    "\134\uff9f\151\uff9f\170\uff9f\215\uff9f\220\uff9f\244\uff9f\264" +
    "\uff9f\267\uff9f\304\uff9f\325\uff9f\326\uff9f\327\uff9f\330\uff9f" +
    "\331\uff9f\332\uff9f\u0105\205\u0106\204\u010a\uff9f\u010b\uff9f\u010d" +
    "\uff9f\u010f\uff9f\u0110\uff9f\u0119\uff9f\u011a\uff9f\u011b\uff9f\u011c\uff9f" +
    "\u011d\uff9f\u011e\uff9f\u011f\uff9f\u0120\uff9f\u0121\uff9f\u0122\uff9f\u0123" +
    "\uff9f\u0126\uff9f\u0127\uff9f\u0128\uff9f\u0129\uff9f\001\002\000\004" +
    "\u010f\201\001\002\000\004\u010f\177\001\002\000\142\042" +
    "\uff94\046\uff94\051\uff94\054\uff94\063\uff94\070\uff94\102\uff94" +
    "\105\uff94\127\uff94\134\uff94\151\uff94\170\uff94\215\uff94\220" +
    "\uff94\244\uff94\264\uff94\267\uff94\304\uff94\325\uff94\326\uff94" +
    "\327\uff94\330\uff94\331\uff94\332\uff94\u0105\uff94\u0106\uff94\u0107" +
    "\uff94\u0108\uff94\u010a\uff94\u010b\uff94\u010d\uff94\u010f\uff94\u0110\uff94" +
    "\u0119\uff94\u011a\uff94\u011b\uff94\u011c\uff94\u011d\uff94\u011e\uff94\u011f" +
    "\uff94\u0120\uff94\u0121\uff94\u0122\uff94\u0123\uff94\u0126\uff94\u0127\uff94" +
    "\u0128\uff94\u0129\uff94\001\002\000\034\220\161\326\143\327" +
    "\154\330\162\331\160\332\155\u010d\047\u010f\157\u0123\141" +
    "\u0126\145\u0127\146\u0128\046\u0129\156\001\002\000\004\u010f" +
    "\173\001\002\000\142\042\uff93\046\uff93\051\uff93\054\uff93" +
    "\063\uff93\070\uff93\102\uff93\105\uff93\127\uff93\134\uff93\151" +
    "\uff93\170\uff93\215\uff93\220\uff93\244\uff93\264\uff93\267\uff93" +
    "\304\uff93\325\uff93\326\uff93\327\uff93\330\uff93\331\uff93\332" +
    "\uff93\u0105\uff93\u0106\uff93\u0107\uff93\u0108\uff93\u010a\uff93\u010b\uff93" +
    "\u010d\uff93\u010f\uff93\u0110\uff93\u0119\uff93\u011a\uff93\u011b\uff93\u011c" +
    "\uff93\u011d\uff93\u011e\uff93\u011f\uff93\u0120\uff93\u0121\uff93\u0122\uff93" +
    "\u0123\uff93\u0126\uff93\u0127\uff93\u0128\uff93\u0129\uff93\001\002\000" +
    "\004\u010f\163\001\002\000\012\u0107\167\u010d\047\u0127\165" +
    "\u0128\046\001\002\000\142\042\uff8e\046\uff8e\051\uff8e\054" +
    "\uff8e\063\uff8e\070\uff8e\102\uff8e\105\uff8e\127\uff8e\134\uff8e" +
    "\151\uff8e\170\uff8e\215\uff8e\220\uff8e\244\uff8e\264\uff8e\267" +
    "\uff8e\304\uff8e\325\uff8e\326\uff8e\327\uff8e\330\uff8e\331\uff8e" +
    "\332\uff8e\u0105\uff8e\u0106\uff8e\u0107\uff8e\u0108\uff8e\u010a\uff8e\u010b" +
    "\uff8e\u010d\uff8e\u010f\uff8e\u0110\uff8e\u0119\uff8e\u011a\uff8e\u011b\uff8e" +
    "\u011c\uff8e\u011d\uff8e\u011e\uff8e\u011f\uff8e\u0120\uff8e\u0121\uff8e\u0122" +
    "\uff8e\u0123\uff8e\u0126\uff8e\u0127\uff8e\u0128\uff8e\u0129\uff8e\001\002" +
    "\000\004\u0110\172\001\002\000\004\u0110\171\001\002\000" +
    "\004\u0110\170\001\002\000\142\042\uff8b\046\uff8b\051\uff8b" +
    "\054\uff8b\063\uff8b\070\uff8b\102\uff8b\105\uff8b\127\uff8b\134" +
    "\uff8b\151\uff8b\170\uff8b\215\uff8b\220\uff8b\244\uff8b\264\uff8b" +
    "\267\uff8b\304\uff8b\325\uff8b\326\uff8b\327\uff8b\330\uff8b\331" +
    "\uff8b\332\uff8b\u0105\uff8b\u0106\uff8b\u0107\uff8b\u0108\uff8b\u010a\uff8b" +
    "\u010b\uff8b\u010d\uff8b\u010f\uff8b\u0110\uff8b\u0119\uff8b\u011a\uff8b\u011b" +
    "\uff8b\u011c\uff8b\u011d\uff8b\u011e\uff8b\u011f\uff8b\u0120\uff8b\u0121\uff8b" +
    "\u0122\uff8b\u0123\uff8b\u0126\uff8b\u0127\uff8b\u0128\uff8b\u0129\uff8b\001" +
    "\002\000\142\042\uff8d\046\uff8d\051\uff8d\054\uff8d\063\uff8d" +
    "\070\uff8d\102\uff8d\105\uff8d\127\uff8d\134\uff8d\151\uff8d\170" +
    "\uff8d\215\uff8d\220\uff8d\244\uff8d\264\uff8d\267\uff8d\304\uff8d" +
    "\325\uff8d\326\uff8d\327\uff8d\330\uff8d\331\uff8d\332\uff8d\u0105" +
    "\uff8d\u0106\uff8d\u0107\uff8d\u0108\uff8d\u010a\uff8d\u010b\uff8d\u010d\uff8d" +
    "\u010f\uff8d\u0110\uff8d\u0119\uff8d\u011a\uff8d\u011b\uff8d\u011c\uff8d\u011d" +
    "\uff8d\u011e\uff8d\u011f\uff8d\u0120\uff8d\u0121\uff8d\u0122\uff8d\u0123\uff8d" +
    "\u0126\uff8d\u0127\uff8d\u0128\uff8d\u0129\uff8d\001\002\000\142\042" +
    "\uff8c\046\uff8c\051\uff8c\054\uff8c\063\uff8c\070\uff8c\102\uff8c" +
    "\105\uff8c\127\uff8c\134\uff8c\151\uff8c\170\uff8c\215\uff8c\220" +
    "\uff8c\244\uff8c\264\uff8c\267\uff8c\304\uff8c\325\uff8c\326\uff8c" +
    "\327\uff8c\330\uff8c\331\uff8c\332\uff8c\u0105\uff8c\u0106\uff8c\u0107" +
    "\uff8c\u0108\uff8c\u010a\uff8c\u010b\uff8c\u010d\uff8c\u010f\uff8c\u0110\uff8c" +
    "\u0119\uff8c\u011a\uff8c\u011b\uff8c\u011c\uff8c\u011d\uff8c\u011e\uff8c\u011f" +
    "\uff8c\u0120\uff8c\u0121\uff8c\u0122\uff8c\u0123\uff8c\u0126\uff8c\u0127\uff8c" +
    "\u0128\uff8c\u0129\uff8c\001\002\000\012\u0107\167\u010d\047\u0127" +
    "\165\u0128\046\001\002\000\142\042\uff8f\046\uff8f\051\uff8f" +
    "\054\uff8f\063\uff8f\070\uff8f\102\uff8f\105\uff8f\127\uff8f\134" +
    "\uff8f\151\uff8f\170\uff8f\215\uff8f\220\uff8f\244\uff8f\264\uff8f" +
    "\267\uff8f\304\uff8f\325\uff8f\326\uff8f\327\uff8f\330\uff8f\331" +
    "\uff8f\332\uff8f\u0105\uff8f\u0106\uff8f\u0107\uff8f\u0108\uff8f\u010a\uff8f" +
    "\u010b\uff8f\u010d\uff8f\u010f\uff8f\u0110\uff8f\u0119\uff8f\u011a\uff8f\u011b" +
    "\uff8f\u011c\uff8f\u011d\uff8f\u011e\uff8f\u011f\uff8f\u0120\uff8f\u0121\uff8f" +
    "\u0122\uff8f\u0123\uff8f\u0126\uff8f\u0127\uff8f\u0128\uff8f\u0129\uff8f\001" +
    "\002\000\004\u0110\176\001\002\000\142\042\uff9a\046\uff9a" +
    "\051\uff9a\054\uff9a\063\uff9a\070\uff9a\102\uff9a\105\uff9a\127" +
    "\uff9a\134\uff9a\151\uff9a\170\uff9a\215\uff9a\220\uff9a\244\uff9a" +
    "\264\uff9a\267\uff9a\304\uff9a\325\uff9a\326\uff9a\327\uff9a\330" +
    "\uff9a\331\uff9a\332\uff9a\u0105\uff9a\u0106\uff9a\u0107\uff9a\u0108\uff9a" +
    "\u010a\uff9a\u010b\uff9a\u010d\uff9a\u010f\uff9a\u0110\uff9a\u0119\uff9a\u011a" +
    "\uff9a\u011b\uff9a\u011c\uff9a\u011d\uff9a\u011e\uff9a\u011f\uff9a\u0120\uff9a" +
    "\u0121\uff9a\u0122\uff9a\u0123\uff9a\u0126\uff9a\u0127\uff9a\u0128\uff9a\u0129" +
    "\uff9a\001\002\000\012\u0107\167\u010d\047\u0127\165\u0128\046" +
    "\001\002\000\142\042\uff90\046\uff90\051\uff90\054\uff90\063" +
    "\uff90\070\uff90\102\uff90\105\uff90\127\uff90\134\uff90\151\uff90" +
    "\170\uff90\215\uff90\220\uff90\244\uff90\264\uff90\267\uff90\304" +
    "\uff90\325\uff90\326\uff90\327\uff90\330\uff90\331\uff90\332\uff90" +
    "\u0105\uff90\u0106\uff90\u0107\uff90\u0108\uff90\u010a\uff90\u010b\uff90\u010d" +
    "\uff90\u010f\uff90\u0110\uff90\u0119\uff90\u011a\uff90\u011b\uff90\u011c\uff90" +
    "\u011d\uff90\u011e\uff90\u011f\uff90\u0120\uff90\u0121\uff90\u0122\uff90\u0123" +
    "\uff90\u0126\uff90\u0127\uff90\u0128\uff90\u0129\uff90\001\002\000\012" +
    "\u0107\167\u010d\047\u0127\165\u0128\046\001\002\000\142\042" +
    "\uff91\046\uff91\051\uff91\054\uff91\063\uff91\070\uff91\102\uff91" +
    "\105\uff91\127\uff91\134\uff91\151\uff91\170\uff91\215\uff91\220" +
    "\uff91\244\uff91\264\uff91\267\uff91\304\uff91\325\uff91\326\uff91" +
    "\327\uff91\330\uff91\331\uff91\332\uff91\u0105\uff91\u0106\uff91\u0107" +
    "\uff91\u0108\uff91\u010a\uff91\u010b\uff91\u010d\uff91\u010f\uff91\u0110\uff91" +
    "\u0119\uff91\u011a\uff91\u011b\uff91\u011c\uff91\u011d\uff91\u011e\uff91\u011f" +
    "\uff91\u0120\uff91\u0121\uff91\u0122\uff91\u0123\uff91\u0126\uff91\u0127\uff91" +
    "\u0128\uff91\u0129\uff91\001\002\000\132\042\uffa2\046\uffa2\051" +
    "\uffa2\054\uffa2\063\uffa2\070\uffa2\102\uffa2\105\uffa2\127\uffa2" +
    "\134\uffa2\151\uffa2\170\uffa2\215\uffa2\220\uffa2\244\uffa2\264" +
    "\uffa2\267\uffa2\304\uffa2\325\uffa2\326\uffa2\327\uffa2\330\uffa2" +
    "\331\uffa2\332\uffa2\u010a\uffa2\u010b\uffa2\u010d\uffa2\u010f\uffa2\u0110" +
    "\uffa2\u0119\uffa2\u011a\uffa2\u011b\uffa2\u011c\uffa2\u011d\uffa2\u011e\uffa2" +
    "\u011f\uffa2\u0120\uffa2\u0121\uffa2\u0122\uffa2\u0123\uffa2\u0126\uffa2\u0127" +
    "\uffa2\u0128\uffa2\u0129\uffa2\001\002\000\034\220\161\326\143" +
    "\327\154\330\162\331\160\332\155\u010d\047\u010f\157\u0123" +
    "\141\u0126\145\u0127\146\u0128\046\u0129\156\001\002\000\034" +
    "\220\161\326\143\327\154\330\162\331\160\332\155\u010d" +
    "\047\u010f\157\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156" +
    "\001\002\000\136\042\uff9f\046\uff9f\051\uff9f\054\uff9f\063" +
    "\uff9f\070\uff9f\102\uff9f\105\uff9f\127\uff9f\134\uff9f\151\uff9f" +
    "\170\uff9f\215\uff9f\220\uff9f\244\uff9f\264\uff9f\267\uff9f\304" +
    "\uff9f\325\uff9f\326\uff9f\327\uff9f\330\uff9f\331\uff9f\332\uff9f" +
    "\u0105\205\u0106\204\u010a\uff9f\u010b\uff9f\u010d\uff9f\u010f\uff9f\u0110" +
    "\uff9f\u0119\uff9f\u011a\uff9f\u011b\uff9f\u011c\uff9f\u011d\uff9f\u011e\uff9f" +
    "\u011f\uff9f\u0120\uff9f\u0121\uff9f\u0122\uff9f\u0123\uff9f\u0126\uff9f\u0127" +
    "\uff9f\u0128\uff9f\u0129\uff9f\001\002\000\132\042\uffa1\046\uffa1" +
    "\051\uffa1\054\uffa1\063\uffa1\070\uffa1\102\uffa1\105\uffa1\127" +
    "\uffa1\134\uffa1\151\uffa1\170\uffa1\215\uffa1\220\uffa1\244\uffa1" +
    "\264\uffa1\267\uffa1\304\uffa1\325\uffa1\326\uffa1\327\uffa1\330" +
    "\uffa1\331\uffa1\332\uffa1\u010a\uffa1\u010b\uffa1\u010d\uffa1\u010f\uffa1" +
    "\u0110\uffa1\u0119\uffa1\u011a\uffa1\u011b\uffa1\u011c\uffa1\u011d\uffa1\u011e" +
    "\uffa1\u011f\uffa1\u0120\uffa1\u0121\uffa1\u0122\uffa1\u0123\uffa1\u0126\uffa1" +
    "\u0127\uffa1\u0128\uffa1\u0129\uffa1\001\002\000\136\042\uff9f\046" +
    "\uff9f\051\uff9f\054\uff9f\063\uff9f\070\uff9f\102\uff9f\105\uff9f" +
    "\127\uff9f\134\uff9f\151\uff9f\170\uff9f\215\uff9f\220\uff9f\244" +
    "\uff9f\264\uff9f\267\uff9f\304\uff9f\325\uff9f\326\uff9f\327\uff9f" +
    "\330\uff9f\331\uff9f\332\uff9f\u0105\205\u0106\204\u010a\uff9f\u010b" +
    "\uff9f\u010d\uff9f\u010f\uff9f\u0110\uff9f\u0119\uff9f\u011a\uff9f\u011b\uff9f" +
    "\u011c\uff9f\u011d\uff9f\u011e\uff9f\u011f\uff9f\u0120\uff9f\u0121\uff9f\u0122" +
    "\uff9f\u0123\uff9f\u0126\uff9f\u0127\uff9f\u0128\uff9f\u0129\uff9f\001\002" +
    "\000\132\042\uffa0\046\uffa0\051\uffa0\054\uffa0\063\uffa0\070" +
    "\uffa0\102\uffa0\105\uffa0\127\uffa0\134\uffa0\151\uffa0\170\uffa0" +
    "\215\uffa0\220\uffa0\244\uffa0\264\uffa0\267\uffa0\304\uffa0\325" +
    "\uffa0\326\uffa0\327\uffa0\330\uffa0\331\uffa0\332\uffa0\u010a\uffa0" +
    "\u010b\uffa0\u010d\uffa0\u010f\uffa0\u0110\uffa0\u0119\uffa0\u011a\uffa0\u011b" +
    "\uffa0\u011c\uffa0\u011d\uffa0\u011e\uffa0\u011f\uffa0\u0120\uffa0\u0121\uffa0" +
    "\u0122\uffa0\u0123\uffa0\u0126\uffa0\u0127\uffa0\u0128\uffa0\u0129\uffa0\001" +
    "\002\000\044\042\uff83\046\uff83\066\uff83\102\uff83\103\uff83" +
    "\105\uff83\135\uff83\154\uff83\165\uff83\237\uff83\264\uff83\267" +
    "\uff83\304\uff83\325\uff83\u010a\uff83\u010b\uff83\u0110\uff83\001\002" +
    "\000\100\042\uff82\046\uff82\066\uff82\102\uff82\103\uff82\105" +
    "\uff82\135\uff82\154\uff82\165\uff82\215\137\220\uff87\237\uff82" +
    "\264\uff82\267\uff82\304\uff82\325\uff82\326\uff87\327\uff87\330" +
    "\uff87\331\uff87\332\uff87\u010a\uff82\u010b\uff82\u010d\uff87\u010f\uff87" +
    "\u0110\uff82\u0123\uff87\u0126\uff87\u0127\uff87\u0128\uff87\u0129\uff87\001" +
    "\002\000\100\042\uff82\046\uff82\066\uff82\102\uff82\103\uff82" +
    "\105\uff82\135\uff82\154\uff82\165\uff82\215\137\220\uff87\237" +
    "\uff82\264\uff82\267\uff82\304\uff82\325\uff82\326\uff87\327\uff87" +
    "\330\uff87\331\uff87\332\uff87\u010a\uff82\u010b\uff82\u010d\uff87\u010f" +
    "\uff87\u0110\uff82\u0123\uff87\u0126\uff87\u0127\uff87\u0128\uff87\u0129\uff87" +
    "\001\002\000\044\042\uff80\046\uff80\066\uff80\102\uff80\103" +
    "\uff80\105\uff80\135\uff80\154\uff80\165\uff80\237\uff80\264\uff80" +
    "\267\uff80\304\uff80\325\uff80\u010a\uff80\u010b\uff80\u0110\uff80\001" +
    "\002\000\044\042\uff81\046\uff81\066\uff81\102\uff81\103\uff81" +
    "\105\uff81\135\uff81\154\uff81\165\uff81\237\uff81\264\uff81\267" +
    "\uff81\304\uff81\325\uff81\u010a\uff81\u010b\uff81\u0110\uff81\001\002" +
    "\000\136\042\uff9e\046\uff9e\051\uff9e\054\uff9e\063\uff9e\070" +
    "\uff9e\102\uff9e\105\uff9e\127\uff9e\134\uff9e\151\uff9e\170\uff9e" +
    "\215\uff9e\220\uff9e\244\uff9e\264\uff9e\267\uff9e\304\uff9e\325" +
    "\uff9e\326\uff9e\327\uff9e\330\uff9e\331\uff9e\332\uff9e\u0105\uff9e" +
    "\u0106\uff9e\u010a\uff9e\u010b\uff9e\u010d\uff9e\u010f\uff9e\u0110\uff9e\u0119" +
    "\uff9e\u011a\uff9e\u011b\uff9e\u011c\uff9e\u011d\uff9e\u011e\uff9e\u011f\uff9e" +
    "\u0120\uff9e\u0121\uff9e\u0122\uff9e\u0123\uff9e\u0126\uff9e\u0127\uff9e\u0128" +
    "\uff9e\u0129\uff9e\001\002\000\034\220\161\326\143\327\154" +
    "\330\162\331\160\332\155\u010d\047\u010f\157\u0123\141\u0126" +
    "\145\u0127\146\u0128\046\u0129\156\001\002\000\034\220\161" +
    "\326\143\327\154\330\162\331\160\332\155\u010d\047\u010f" +
    "\157\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156\001\002" +
    "\000\142\042\uff9b\046\uff9b\051\uff9b\054\uff9b\063\uff9b\070" +
    "\uff9b\102\uff9b\105\uff9b\127\uff9b\134\uff9b\151\uff9b\170\uff9b" +
    "\215\uff9b\220\uff9b\244\uff9b\264\uff9b\267\uff9b\304\uff9b\325" +
    "\uff9b\326\uff9b\327\uff9b\330\uff9b\331\uff9b\332\uff9b\u0105\uff9b" +
    "\u0106\uff9b\u0107\220\u0108\221\u010a\uff9b\u010b\uff9b\u010d\uff9b\u010f" +
    "\uff9b\u0110\uff9b\u0119\uff9b\u011a\uff9b\u011b\uff9b\u011c\uff9b\u011d\uff9b" +
    "\u011e\uff9b\u011f\uff9b\u0120\uff9b\u0121\uff9b\u0122\uff9b\u0123\uff9b\u0126" +
    "\uff9b\u0127\uff9b\u0128\uff9b\u0129\uff9b\001\002\000\136\042\uff9c" +
    "\046\uff9c\051\uff9c\054\uff9c\063\uff9c\070\uff9c\102\uff9c\105" +
    "\uff9c\127\uff9c\134\uff9c\151\uff9c\170\uff9c\215\uff9c\220\uff9c" +
    "\244\uff9c\264\uff9c\267\uff9c\304\uff9c\325\uff9c\326\uff9c\327" +
    "\uff9c\330\uff9c\331\uff9c\332\uff9c\u0105\uff9c\u0106\uff9c\u010a\uff9c" +
    "\u010b\uff9c\u010d\uff9c\u010f\uff9c\u0110\uff9c\u0119\uff9c\u011a\uff9c\u011b" +
    "\uff9c\u011c\uff9c\u011d\uff9c\u011e\uff9c\u011f\uff9c\u0120\uff9c\u0121\uff9c" +
    "\u0122\uff9c\u0123\uff9c\u0126\uff9c\u0127\uff9c\u0128\uff9c\u0129\uff9c\001" +
    "\002\000\142\042\uff9b\046\uff9b\051\uff9b\054\uff9b\063\uff9b" +
    "\070\uff9b\102\uff9b\105\uff9b\127\uff9b\134\uff9b\151\uff9b\170" +
    "\uff9b\215\uff9b\220\uff9b\244\uff9b\264\uff9b\267\uff9b\304\uff9b" +
    "\325\uff9b\326\uff9b\327\uff9b\330\uff9b\331\uff9b\332\uff9b\u0105" +
    "\uff9b\u0106\uff9b\u0107\220\u0108\221\u010a\uff9b\u010b\uff9b\u010d\uff9b" +
    "\u010f\uff9b\u0110\uff9b\u0119\uff9b\u011a\uff9b\u011b\uff9b\u011c\uff9b\u011d" +
    "\uff9b\u011e\uff9b\u011f\uff9b\u0120\uff9b\u0121\uff9b\u0122\uff9b\u0123\uff9b" +
    "\u0126\uff9b\u0127\uff9b\u0128\uff9b\u0129\uff9b\001\002\000\136\042" +
    "\uff9d\046\uff9d\051\uff9d\054\uff9d\063\uff9d\070\uff9d\102\uff9d" +
    "\105\uff9d\127\uff9d\134\uff9d\151\uff9d\170\uff9d\215\uff9d\220" +
    "\uff9d\244\uff9d\264\uff9d\267\uff9d\304\uff9d\325\uff9d\326\uff9d" +
    "\327\uff9d\330\uff9d\331\uff9d\332\uff9d\u0105\uff9d\u0106\uff9d\u010a" +
    "\uff9d\u010b\uff9d\u010d\uff9d\u010f\uff9d\u0110\uff9d\u0119\uff9d\u011a\uff9d" +
    "\u011b\uff9d\u011c\uff9d\u011d\uff9d\u011e\uff9d\u011f\uff9d\u0120\uff9d\u0121" +
    "\uff9d\u0122\uff9d\u0123\uff9d\u0126\uff9d\u0127\uff9d\u0128\uff9d\u0129\uff9d" +
    "\001\002\000\142\042\uffe2\046\uffe2\051\uffe2\054\uffe2\063" +
    "\uffe2\070\uffe2\102\uffe2\105\uffe2\127\uffe2\134\uffe2\151\uffe2" +
    "\170\uffe2\215\uffe2\220\uffe2\244\uffe2\264\uffe2\267\uffe2\304" +
    "\uffe2\325\uffe2\326\uffe2\327\uffe2\330\uffe2\331\uffe2\332\uffe2" +
    "\u0105\uffe2\u0106\uffe2\u0107\uffe2\u0108\uffe2\u010a\uffe2\u010b\uffe2\u010d" +
    "\uffe2\u010f\uffe2\u0110\uffe2\u0119\uffe2\u011a\uffe2\u011b\uffe2\u011c\uffe2" +
    "\u011d\uffe2\u011e\uffe2\u011f\uffe2\u0120\uffe2\u0121\uffe2\u0122\uffe2\u0123" +
    "\uffe2\u0126\uffe2\u0127\uffe2\u0128\uffe2\u0129\uffe2\001\002\000\006" +
    "\u010d\047\u0128\046\001\002\000\142\042\uffe1\046\uffe1\051" +
    "\uffe1\054\uffe1\063\uffe1\070\uffe1\102\uffe1\105\uffe1\127\uffe1" +
    "\134\uffe1\151\uffe1\170\uffe1\215\uffe1\220\uffe1\244\uffe1\264" +
    "\uffe1\267\uffe1\304\uffe1\325\uffe1\326\uffe1\327\uffe1\330\uffe1" +
    "\331\uffe1\332\uffe1\u0105\uffe1\u0106\uffe1\u0107\uffe1\u0108\uffe1\u010a" +
    "\uffe1\u010b\uffe1\u010d\uffe1\u010f\uffe1\u0110\uffe1\u0119\uffe1\u011a\uffe1" +
    "\u011b\uffe1\u011c\uffe1\u011d\uffe1\u011e\uffe1\u011f\uffe1\u0120\uffe1\u0121" +
    "\uffe1\u0122\uffe1\u0123\uffe1\u0126\uffe1\u0127\uffe1\u0128\uffe1\u0129\uffe1" +
    "\001\002\000\012\u0107\167\u010d\047\u0127\165\u0128\046\001" +
    "\002\000\142\042\uff92\046\uff92\051\uff92\054\uff92\063\uff92" +
    "\070\uff92\102\uff92\105\uff92\127\uff92\134\uff92\151\uff92\170" +
    "\uff92\215\uff92\220\uff92\244\uff92\264\uff92\267\uff92\304\uff92" +
    "\325\uff92\326\uff92\327\uff92\330\uff92\331\uff92\332\uff92\u0105" +
    "\uff92\u0106\uff92\u0107\uff92\u0108\uff92\u010a\uff92\u010b\uff92\u010d\uff92" +
    "\u010f\uff92\u0110\uff92\u0119\uff92\u011a\uff92\u011b\uff92\u011c\uff92\u011d" +
    "\uff92\u011e\uff92\u011f\uff92\u0120\uff92\u0121\uff92\u0122\uff92\u0123\uff92" +
    "\u0126\uff92\u0127\uff92\u0128\uff92\u0129\uff92\001\002\000\034\220" +
    "\161\326\143\327\154\330\162\331\160\332\155\u010d\047" +
    "\u010f\157\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156\001" +
    "\002\000\010\070\265\127\264\170\263\001\002\000\034" +
    "\220\161\326\143\327\154\330\162\331\160\332\155\u010d" +
    "\047\u010f\157\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156" +
    "\001\002\000\034\220\161\326\143\327\154\330\162\331" +
    "\160\332\155\u010d\047\u010f\157\u0123\141\u0126\145\u0127\146" +
    "\u0128\046\u0129\156\001\002\000\034\220\161\326\143\327" +
    "\154\330\162\331\160\332\155\u010d\047\u010f\157\u0123\141" +
    "\u0126\145\u0127\146\u0128\046\u0129\156\001\002\000\034\220" +
    "\161\326\143\327\154\330\162\331\160\332\155\u010d\047" +
    "\u010f\157\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156\001" +
    "\002\000\034\220\161\326\143\327\154\330\162\331\160" +
    "\332\155\u010d\047\u010f\157\u0123\141\u0126\145\u0127\146\u0128" +
    "\046\u0129\156\001\002\000\034\220\161\326\143\327\154" +
    "\330\162\331\160\332\155\u010d\047\u010f\157\u0123\141\u0126" +
    "\145\u0127\146\u0128\046\u0129\156\001\002\000\034\220\161" +
    "\326\143\327\154\330\162\331\160\332\155\u010d\047\u010f" +
    "\157\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156\001\002" +
    "\000\034\220\161\326\143\327\154\330\162\331\160\332" +
    "\155\u010d\047\u010f\157\u0123\141\u0126\145\u0127\146\u0128\046" +
    "\u0129\156\001\002\000\006\042\uff7f\264\uff7f\001\002\000" +
    "\006\215\137\220\uff87\001\002\000\034\220\161\326\143" +
    "\327\154\330\162\331\160\332\155\u010d\047\u010f\157\u0123" +
    "\141\u0126\145\u0127\146\u0128\046\u0129\156\001\002\000\006" +
    "\042\uff76\264\uff76\001\002\000\004\220\252\001\002\000" +
    "\006\042\uff74\264\uff74\001\002\000\006\042\uff75\264\uff75" +
    "\001\002\000\006\042\uff79\264\uff79\001\002\000\006\042" +
    "\uff77\264\uff77\001\002\000\006\042\uff7b\264\uff7b\001\002" +
    "\000\006\042\uff7c\264\uff7c\001\002\000\006\042\uff7a\264" +
    "\uff7a\001\002\000\006\042\uff78\264\uff78\001\002\000\006" +
    "\042\uff7d\264\uff7d\001\002\000\042\042\uff82\215\137\220" +
    "\uff87\264\uff82\326\uff87\327\uff87\330\uff87\331\uff87\332\uff87" +
    "\u010d\uff87\u010f\uff87\u0123\uff87\u0126\uff87\u0127\uff87\u0128\uff87\u0129" +
    "\uff87\001\002\000\004\u010f\272\001\002\000\040\042\uff82" +
    "\215\137\220\uff87\326\uff87\327\uff87\330\uff87\331\uff87\332" +
    "\uff87\u010d\uff87\u010f\uff87\u0123\uff87\u0126\uff87\u0127\uff87\u0128\uff87" +
    "\u0129\uff87\001\002\000\006\042\uff73\264\uff73\001\002\000" +
    "\004\042\270\001\002\000\042\042\uff82\215\137\220\uff87" +
    "\264\uff82\326\uff87\327\uff87\330\uff87\331\uff87\332\uff87\u010d" +
    "\uff87\u010f\uff87\u0123\uff87\u0126\uff87\u0127\uff87\u0128\uff87\u0129\uff87" +
    "\001\002\000\006\042\uff71\264\uff71\001\002\000\034\220" +
    "\161\326\143\327\154\330\162\331\160\332\155\u010d\047" +
    "\u010f\157\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156\001" +
    "\002\000\006\u010b\274\u0110\uff89\001\002\000\034\220\161" +
    "\326\143\327\154\330\162\331\160\332\155\u010d\047\u010f" +
    "\157\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156\001\002" +
    "\000\004\u0110\276\001\002\000\006\042\uff72\264\uff72\001" +
    "\002\000\006\u010b\274\u0110\uff89\001\002\000\004\u0110\uff8a" +
    "\001\002\000\006\042\uff70\264\uff70\001\002\000\006\042" +
    "\uff7e\264\uff7e\001\002\000\036\220\161\233\306\326\143" +
    "\327\154\330\162\331\160\332\155\u010d\047\u010f\157\u0123" +
    "\141\u0126\145\u0127\146\u0128\046\u0129\156\001\002\000\014" +
    "\063\uff28\304\uff28\325\uff28\u010a\uff28\u010b\uff28\001\002\000" +
    "\014\063\uff26\304\uff26\325\uff26\u010a\uff26\u010b\307\001\002" +
    "\000\014\063\uff29\304\uff29\325\uff29\u010a\uff29\u010b\uff29\001" +
    "\002\000\006\u010d\047\u0128\046\001\002\000\012\063\uff2a" +
    "\304\uff2a\325\uff2a\u010a\uff2a\001\002\000\012\063\uff27\304" +
    "\uff27\325\uff27\u010a\uff27\001\002\000\172\004\uffe5\037\uffe5" +
    "\042\uffe5\046\uffe5\051\uffe5\054\uffe5\063\uffe5\066\uffe5\070" +
    "\uffe5\102\uffe5\103\uffe5\105\uffe5\127\uffe5\134\uffe5\135\uffe5" +
    "\151\uffe5\152\uffe5\154\uffe5\165\uffe5\170\uffe5\215\uffe5\220" +
    "\uffe5\233\uffe5\237\uffe5\244\uffe5\263\uffe5\264\uffe5\265\uffe5" +
    "\267\uffe5\304\uffe5\325\uffe5\326\uffe5\327\uffe5\330\uffe5\331" +
    "\uffe5\332\uffe5\u0105\uffe5\u0106\uffe5\u0107\uffe5\u0108\uffe5\u010a\uffe5" +
    "\u010b\uffe5\u010d\uffe5\u010f\uffe5\u0110\uffe5\u0119\uffe5\u011a\uffe5\u011b" +
    "\uffe5\u011c\uffe5\u011d\uffe5\u011e\uffe5\u011f\uffe5\u0120\uffe5\u0121\uffe5" +
    "\u0122\uffe5\u0123\uffe5\u0126\uffe5\u0127\uffe5\u0128\uffe5\u0129\uffe5\001" +
    "\002\000\006\u010d\047\u0128\046\001\002\000\220\004\uffe6" +
    "\037\uffe6\042\uffe6\046\uffe6\051\uffe6\052\uffe6\054\uffe6\056" +
    "\uffe6\063\uffe6\066\uffe6\070\uffe6\102\uffe6\103\uffe6\105\uffe6" +
    "\115\uffe6\127\uffe6\134\uffe6\135\uffe6\150\uffe6\151\uffe6\152" +
    "\uffe6\154\uffe6\165\uffe6\170\uffe6\215\uffe6\220\uffe6\233\uffe6" +
    "\236\uffe6\237\uffe6\243\uffe6\244\uffe6\251\uffe6\263\uffe6\264" +
    "\uffe6\265\uffe6\267\uffe6\304\uffe6\312\uffe6\314\uffe6\325\uffe6" +
    "\326\uffe6\327\uffe6\330\uffe6\331\uffe6\332\uffe6\u0105\uffe6\u0106" +
    "\uffe6\u0107\uffe6\u0108\uffe6\u010a\uffe6\u010b\uffe6\u010c\317\u010d\uffe6" +
    "\u010f\uffe6\u0110\uffe6\u0116\uffe6\u0119\uffe6\u011a\uffe6\u011b\uffe6\u011c" +
    "\uffe6\u011d\uffe6\u011e\uffe6\u011f\uffe6\u0120\uffe6\u0121\uffe6\u0122\uffe6" +
    "\u0123\uffe6\u0126\uffe6\u0127\uffe6\u0128\uffe6\u0129\uffe6\001\002\000" +
    "\172\004\uffe4\037\uffe4\042\uffe4\046\uffe4\051\uffe4\054\uffe4" +
    "\063\uffe4\066\uffe4\070\uffe4\102\uffe4\103\uffe4\105\uffe4\127" +
    "\uffe4\134\uffe4\135\uffe4\151\uffe4\152\uffe4\154\uffe4\165\uffe4" +
    "\170\uffe4\215\uffe4\220\uffe4\233\uffe4\237\uffe4\244\uffe4\263" +
    "\uffe4\264\uffe4\265\uffe4\267\uffe4\304\uffe4\325\uffe4\326\uffe4" +
    "\327\uffe4\330\uffe4\331\uffe4\332\uffe4\u0105\uffe4\u0106\uffe4\u0107" +
    "\uffe4\u0108\uffe4\u010a\uffe4\u010b\uffe4\u010d\uffe4\u010f\uffe4\u0110\uffe4" +
    "\u0119\uffe4\u011a\uffe4\u011b\uffe4\u011c\uffe4\u011d\uffe4\u011e\uffe4\u011f" +
    "\uffe4\u0120\uffe4\u0121\uffe4\u0122\uffe4\u0123\uffe4\u0126\uffe4\u0127\uffe4" +
    "\u0128\uffe4\u0129\uffe4\001\002\000\216\004\uffe8\037\uffe8\042" +
    "\uffe8\046\uffe8\051\uffe8\052\uffe8\054\uffe8\056\uffe8\063\uffe8" +
    "\066\uffe8\070\uffe8\102\uffe8\103\uffe8\105\uffe8\115\uffe8\127" +
    "\uffe8\134\uffe8\135\uffe8\150\uffe8\151\uffe8\152\uffe8\154\uffe8" +
    "\165\uffe8\170\uffe8\215\uffe8\220\uffe8\233\uffe8\236\uffe8\237" +
    "\uffe8\243\uffe8\244\uffe8\251\uffe8\263\uffe8\264\uffe8\265\uffe8" +
    "\267\uffe8\304\uffe8\312\uffe8\314\uffe8\325\uffe8\326\uffe8\327" +
    "\uffe8\330\uffe8\331\uffe8\332\uffe8\u0105\uffe8\u0106\uffe8\u0107\uffe8" +
    "\u0108\uffe8\u010a\uffe8\u010b\uffe8\u010d\uffe8\u010f\uffe8\u0110\uffe8\u0116" +
    "\uffe8\u0119\uffe8\u011a\uffe8\u011b\uffe8\u011c\uffe8\u011d\uffe8\u011e\uffe8" +
    "\u011f\uffe8\u0120\uffe8\u0121\uffe8\u0122\uffe8\u0123\uffe8\u0126\uffe8\u0127" +
    "\uffe8\u0128\uffe8\u0129\uffe8\001\002\000\006\u010d\047\u0128\046" +
    "\001\002\000\216\004\uffe7\037\uffe7\042\uffe7\046\uffe7\051" +
    "\uffe7\052\uffe7\054\uffe7\056\uffe7\063\uffe7\066\uffe7\070\uffe7" +
    "\102\uffe7\103\uffe7\105\uffe7\115\uffe7\127\uffe7\134\uffe7\135" +
    "\uffe7\150\uffe7\151\uffe7\152\uffe7\154\uffe7\165\uffe7\170\uffe7" +
    "\215\uffe7\220\uffe7\233\uffe7\236\uffe7\237\uffe7\243\uffe7\244" +
    "\uffe7\251\uffe7\263\uffe7\264\uffe7\265\uffe7\267\uffe7\304\uffe7" +
    "\312\uffe7\314\uffe7\325\uffe7\326\uffe7\327\uffe7\330\uffe7\331" +
    "\uffe7\332\uffe7\u0105\uffe7\u0106\uffe7\u0107\uffe7\u0108\uffe7\u010a\uffe7" +
    "\u010b\uffe7\u010d\uffe7\u010f\uffe7\u0110\uffe7\u0116\uffe7\u0119\uffe7\u011a" +
    "\uffe7\u011b\uffe7\u011c\uffe7\u011d\uffe7\u011e\uffe7\u011f\uffe7\u0120\uffe7" +
    "\u0121\uffe7\u0122\uffe7\u0123\uffe7\u0126\uffe7\u0127\uffe7\u0128\uffe7\u0129" +
    "\uffe7\001\002\000\012\063\323\250\uff32\u010d\uff32\u0128\uff32" +
    "\001\002\000\010\250\326\u010d\047\u0128\046\001\002\000" +
    "\010\250\uff33\u010d\uff33\u0128\uff33\001\002\000\004\063\336" +
    "\001\002\000\006\325\uff34\u010a\uff34\001\002\000\004\u010f" +
    "\330\001\002\000\006\325\uff31\u010a\uff31\001\002\000\006" +
    "\u010d\047\u0128\046\001\002\000\004\u010b\332\001\002\000" +
    "\004\u0123\333\001\002\000\004\u0110\334\001\002\000\006" +
    "\325\uff2c\u010a\uff2c\001\002\000\010\304\134\325\uff6e\u010a" +
    "\uff6e\001\002\000\006\u010d\047\u0128\046\001\002\000\012" +
    "\304\uff2d\325\uff2d\u010a\uff2d\u010b\131\001\002\000\010\304" +
    "\uff2f\325\uff2f\u010a\uff2f\001\002\000\006\325\uff30\u010a\uff30" +
    "\001\002\000\050\002\uffec\003\uffec\037\uffec\065\uffec\072" +
    "\uffec\106\uffec\122\uffec\133\uffec\140\uffec\142\uffec\167\uffec" +
    "\227\uffec\230\uffec\236\uffec\251\uffec\263\uffec\274\uffec\325" +
    "\uffec\u010a\uffec\001\002\000\040\002\ufffe\003\034\037\030" +
    "\065\023\106\021\122\006\133\007\140\025\142\022\167" +
    "\024\227\012\230\043\236\040\251\041\263\031\001\002" +
    "\000\050\002\uffeb\003\uffeb\037\uffeb\065\uffeb\072\uffeb\106" +
    "\uffeb\122\uffeb\133\uffeb\140\uffeb\142\uffeb\167\uffeb\227\uffeb" +
    "\230\uffeb\236\uffeb\251\uffeb\263\uffeb\274\uffeb\325\uffeb\u010a" +
    "\uffeb\001\002\000\004\002\uffff\001\002\000\006\325\uffbb" +
    "\u010a\uffbb\001\002\000\004\124\361\001\002\000\004\124" +
    "\361\001\002\000\004\124\361\001\002\000\006\325\uffb8" +
    "\u010a\uffb8\001\002\000\006\325\uffbc\u010a\uffbc\001\002\000" +
    "\006\325\uffba\u010a\uffba\001\002\000\004\124\361\001\002" +
    "\000\004\124\361\001\002\000\006\325\uffb7\u010a\uffb7\001" +
    "\002\000\006\325\uffb9\u010a\uffb9\001\002\000\004\316\370" +
    "\001\002\000\006\u010d\047\u0128\046\001\002\000\010\325" +
    "\uffb1\u010a\uffb1\u010b\365\001\002\000\006\325\uffb3\u010a\uffb3" +
    "\001\002\000\006\u010d\047\u0128\046\001\002\000\010\325" +
    "\uffb1\u010a\uffb1\u010b\365\001\002\000\006\325\uffb2\u010a\uffb2" +
    "\001\002\000\006\u010d\uffdf\u0128\uffdf\001\002\000\006\u010d" +
    "\047\u0128\046\001\002\000\010\325\uffb4\u010a\uffb4\u010b\374" +
    "\001\002\000\006\325\uffb6\u010a\uffb6\001\002\000\006\u010d" +
    "\047\u0128\046\001\002\000\010\325\uffb4\u010a\uffb4\u010b\374" +
    "\001\002\000\006\325\uffb5\u010a\uffb5\001\002\000\006\u010d" +
    "\047\u0128\046\001\002\000\006\325\uffb0\u010a\uffb0\001\002" +
    "\000\006\u010d\047\u0128\046\001\002\000\004\237\u0108\001" +
    "\002\000\010\325\uffa9\u010a\uffa9\u010b\u0104\001\002\000\006" +
    "\u010d\047\u0128\046\001\002\000\006\325\uffac\u010a\uffac\001" +
    "\002\000\010\325\uffa9\u010a\uffa9\u010b\u0104\001\002\000\006" +
    "\325\uffaa\u010a\uffaa\001\002\000\006\u010d\047\u0128\046\001" +
    "\002\000\010\325\uffab\u010a\uffab\u010b\uffab\001\002\000\006" +
    "\u010d\047\u0128\046\001\002\000\010\325\uffad\u010a\uffad\u010b" +
    "\u010c\001\002\000\006\u010d\047\u0128\046\001\002\000\006" +
    "\325\uffaf\u010a\uffaf\001\002\000\010\325\uffad\u010a\uffad\u010b" +
    "\u010c\001\002\000\006\325\uffae\u010a\uffae\001\002\000\006" +
    "\325\ufe99\u010a\ufe99\001\002\000\006\325\ufe97\u010a\ufe97\001" +
    "\002\000\010\006\u0215\071\u0217\322\u0216\001\002\000\010" +
    "\175\u020d\u010d\047\u0128\046\001\002\000\006\325\ufe98\u010a" +
    "\ufe98\001\002\000\006\u010d\047\u0128\046\001\002\000\006" +
    "\325\ufe9d\u010a\ufe9d\001\002\000\006\325\ufe9c\u010a\ufe9c\001" +
    "\002\000\006\u010d\047\u0128\046\001\002\000\006\u010d\047" +
    "\u0128\046\001\002\000\006\325\ufe9a\u010a\ufe9a\001\002\000" +
    "\004\037\u011d\001\002\000\006\325\ufe9b\u010a\ufe9b\001\002" +
    "\000\010\006\ufe63\071\ufe63\322\ufe63\001\002\000\006\051" +
    "\ufe8e\u010f\u0121\001\002\000\004\051\ufe8f\001\002\000\004" +
    "\051\u0124\001\002\000\006\u010d\047\u0128\046\001\002\000" +
    "\004\u0110\u0123\001\002\000\020\051\uff49\233\uff49\237\uff49" +
    "\265\uff49\304\uff49\325\uff49\u010a\uff49\001\002\000\004\133" +
    "\007\001\002\000\006\325\ufe90\u010a\ufe90\001\002\000\010" +
    "\004\u0129\037\u0128\263\u012c\001\002\000\006\325\ufe8c\u010a" +
    "\ufe8c\001\002\000\004\137\u01f9\001\002\000\022\052\ufebe" +
    "\115\ufebe\132\u013f\150\u0140\243\ufebe\314\ufebe\u010d\047\u0128" +
    "\046\001\002\000\006\325\ufe8d\u010a\ufe8d\001\002\000\006" +
    "\325\ufe8a\u010a\ufe8a\001\002\000\010\124\ufe7b\137\u012d\150" +
    "\u012e\001\002\000\004\124\361\001\002\000\004\124\ufe7c" +
    "\001\002\000\004\124\361\001\002\000\010\325\ufe7d\u010a" +
    "\ufe7d\u010b\u0131\001\002\000\014\124\ufe7b\137\u012d\150\u012e" +
    "\u010d\047\u0128\046\001\002\000\006\325\ufe81\u010a\ufe81\001" +
    "\002\000\010\325\ufe7a\u010a\ufe7a\u010b\ufe7a\001\002\000\010" +
    "\325\ufe7d\u010a\ufe7d\u010b\u0131\001\002\000\010\325\ufe79\u010a" +
    "\ufe79\u010b\ufe79\001\002\000\006\325\ufe7e\u010a\ufe7e\001\002" +
    "\000\006\u010d\047\u0128\046\001\002\000\010\325\ufe80\u010a" +
    "\ufe80\u010b\ufe80\001\002\000\006\u010d\047\u0128\046\001\002" +
    "\000\010\325\ufe7f\u010a\ufe7f\u010b\ufe7f\001\002\000\012\325" +
    "\ufee5\u010a\ufee5\u010b\ufee5\u0110\ufee5\001\002\000\012\325\ufee4" +
    "\u010a\ufee4\u010b\ufee4\u0110\ufee4\001\002\000\012\325\ufee3\u010a" +
    "\ufee3\u010b\ufee3\u0110\ufee3\001\002\000\010\325\ufee1\u010a\ufee1" +
    "\u010b\u01f5\001\002\000\006\u010d\047\u0128\046\001\002\000" +
    "\006\u010d\047\u0128\046\001\002\000\070\337\u018c\340\u0189" +
    "\341\u019a\342\u01a0\343\u0199\344\u018b\345\u0185\346\u019e\347" +
    "\u0190\350\u0198\351\u019f\352\u018e\353\u0188\354\u018f\355\u0187" +
    "\356\u019c\357\u019b\360\u018d\361\u019d\362\u0195\363\u0192\364" +
    "\u01a2\365\u01a1\366\u0186\367\u018a\370\u0197\u010d\u0191\001\002" +
    "\000\012\052\u0143\115\u0144\243\u0147\314\u0145\001\002\000" +
    "\004\157\u0167\001\002\000\006\215\u015a\u010f\ufeec\001\002" +
    "\000\004\157\u0157\001\002\000\012\325\ufea9\u010a\ufea9\u010b" +
    "\ufea9\u0110\ufea9\001\002\000\010\126\u014a\212\u0149\u010f\ufeb8" +
    "\001\002\000\004\u010f\u014c\001\002\000\032\052\ufeb9\056" +
    "\ufeb9\115\ufeb9\132\ufeb9\150\ufeb9\243\ufeb9\314\ufeb9\325\ufeb9" +
    "\u010a\ufeb9\u010b\ufeb9\u010f\ufeb9\u0110\ufeb9\001\002\000\032\052" +
    "\ufeba\056\ufeba\115\ufeba\132\ufeba\150\ufeba\243\ufeba\314\ufeba" +
    "\325\ufeba\u010a\ufeba\u010b\ufeba\u010f\ufeba\u0110\ufeba\001\002\000" +
    "\012\325\ufea7\u010a\ufea7\u010b\ufea7\u0110\ufea7\001\002\000\006" +
    "\u010d\047\u0128\046\001\002\000\012\054\u014f\244\u0150\u010b" +
    "\uff61\u0110\uff61\001\002\000\006\u010b\u0152\u0110\ufe9f\001\002" +
    "\000\046\046\uff63\220\uff63\325\uff63\326\uff63\327\uff63\330" +
    "\uff63\331\uff63\332\uff63\u010a\uff63\u010b\uff63\u010d\uff63\u010f\uff63" +
    "\u0110\uff63\u0123\uff63\u0126\uff63\u0127\uff63\u0128\uff63\u0129\uff63\001" +
    "\002\000\046\046\uff62\220\uff62\325\uff62\326\uff62\327\uff62" +
    "\330\uff62\331\uff62\332\uff62\u010a\uff62\u010b\uff62\u010d\uff62\u010f" +
    "\uff62\u0110\uff62\u0123\uff62\u0126\uff62\u0127\uff62\u0128\uff62\u0129\uff62" +
    "\001\002\000\004\u0110\u0156\001\002\000\006\u010d\047\u0128" +
    "\046\001\002\000\012\054\u014f\244\u0150\u010b\uff61\u0110\uff61" +
    "\001\002\000\006\u010b\u0152\u0110\ufe9f\001\002\000\004\u0110" +
    "\ufea0\001\002\000\012\325\ufea4\u010a\ufea4\u010b\ufea4\u0110\ufea4" +
    "\001\002\000\010\126\u014a\212\u0149\u010f\ufeb8\001\002\000" +
    "\004\u010f\u014c\001\002\000\012\325\ufea8\u010a\ufea8\u010b\ufea8" +
    "\u0110\ufea8\001\002\000\006\046\u015f\220\u0161\001\002\000" +
    "\004\u010f\u015c\001\002\000\040\215\137\220\uff87\326\uff87" +
    "\327\uff87\330\uff87\331\uff87\332\uff87\u010d\uff87\u010f\uff87\u0110" +
    "\uff82\u0123\uff87\u0126\uff87\u0127\uff87\u0128\uff87\u0129\uff87\001\002" +
    "\000\004\u0110\u015e\001\002\000\012\325\ufea5\u010a\ufea5\u010b" +
    "\ufea5\u0110\ufea5\001\002\000\004\061\u0162\001\002\000\032" +
    "\052\ufeed\056\ufeed\114\ufeed\115\ufeed\150\ufeed\243\ufeed\314" +
    "\ufeed\325\ufeed\u010a\ufeed\u010b\ufeed\u010f\ufeed\u0110\ufeed\001\002" +
    "\000\032\052\ufeea\056\ufeea\114\ufeea\115\ufeea\150\ufeea\243" +
    "\ufeea\314\ufeea\325\ufeea\u010a\ufeea\u010b\ufeea\u010f\ufeea\u0110\ufeea" +
    "\001\002\000\034\052\ufee8\056\ufee8\114\ufee8\115\ufee8\150" +
    "\ufee8\215\u0163\243\ufee8\314\ufee8\325\ufee8\u010a\ufee8\u010b\ufee8" +
    "\u010f\ufee8\u0110\ufee8\001\002\000\034\052\ufee6\056\ufee6\114" +
    "\ufee6\115\ufee6\150\ufee6\220\u0166\243\ufee6\314\ufee6\325\ufee6" +
    "\u010a\ufee6\u010b\ufee6\u010f\ufee6\u0110\ufee6\001\002\000\032\052" +
    "\ufeeb\056\ufeeb\114\ufeeb\115\ufeeb\150\ufeeb\243\ufeeb\314\ufeeb" +
    "\325\ufeeb\u010a\ufeeb\u010b\ufeeb\u010f\ufeeb\u0110\ufeeb\001\002\000" +
    "\032\052\ufee9\056\ufee9\114\ufee9\115\ufee9\150\ufee9\243\ufee9" +
    "\314\ufee9\325\ufee9\u010a\ufee9\u010b\ufee9\u010f\ufee9\u0110\ufee9\001" +
    "\002\000\032\052\ufee7\056\ufee7\114\ufee7\115\ufee7\150\ufee7" +
    "\243\ufee7\314\ufee7\325\ufee7\u010a\ufee7\u010b\ufee7\u010f\ufee7\u0110" +
    "\ufee7\001\002\000\004\u010f\u0169\001\002\000\004\056\u0170" +
    "\001\002\000\006\u010d\047\u0128\046\001\002\000\006\u010b" +
    "\u016c\u0110\ufea1\001\002\000\004\u0110\u016f\001\002\000\006" +
    "\u010d\047\u0128\046\001\002\000\006\u010b\u016c\u0110\ufea1\001" +
    "\002\000\004\u0110\ufea2\001\002\000\004\056\ufea3\001\002" +
    "\000\006\u010d\047\u0128\046\001\002\000\012\236\ufeb4\237" +
    "\ufeb4\251\ufeb4\u010f\u0172\001\002\000\006\u010d\047\u0128\046" +
    "\001\002\000\010\236\ufeb2\237\u0174\251\ufeb2\001\002\000" +
    "\006\236\u0176\251\u0178\001\002\000\006\236\u0176\251\u0178" +
    "\001\002\000\006\107\u017b\152\u017a\001\002\000\014\215" +
    "\u015a\325\ufeec\u010a\ufeec\u010b\ufeec\u0110\ufeec\001\002\000\006" +
    "\107\u017b\152\u017a\001\002\000\036\052\ufeb0\056\ufeb0\115" +
    "\ufeb0\150\ufeb0\215\ufeb0\236\ufeb0\237\ufeb0\243\ufeb0\251\ufeb0" +
    "\314\ufeb0\325\ufeb0\u010a\ufeb0\u010b\ufeb0\u0110\ufeb0\001\002\000" +
    "\006\220\u017e\233\u017c\001\002\000\036\052\ufeaf\056\ufeaf" +
    "\115\ufeaf\150\ufeaf\215\ufeaf\236\ufeaf\237\ufeaf\243\ufeaf\251" +
    "\ufeaf\314\ufeaf\325\ufeaf\u010a\ufeaf\u010b\ufeaf\u0110\ufeaf\001\002" +
    "\000\036\052\ufeac\056\ufeac\115\ufeac\150\ufeac\215\ufeac\236" +
    "\ufeac\237\ufeac\243\ufeac\251\ufeac\314\ufeac\325\ufeac\u010a\ufeac" +
    "\u010b\ufeac\u0110\ufeac\001\002\000\036\052\ufeae\056\ufeae\115" +
    "\ufeae\150\ufeae\215\ufeae\236\ufeae\237\ufeae\243\ufeae\251\ufeae" +
    "\314\ufeae\325\ufeae\u010a\ufeae\u010b\ufeae\u0110\ufeae\001\002\000" +
    "\036\052\ufead\056\ufead\115\ufead\150\ufead\215\ufead\236\ufead" +
    "\237\ufead\243\ufead\251\ufead\314\ufead\325\ufead\u010a\ufead\u010b" +
    "\ufead\u0110\ufead\001\002\000\012\325\ufea6\u010a\ufea6\u010b\ufea6" +
    "\u0110\ufea6\001\002\000\036\052\ufeb1\056\ufeb1\115\ufeb1\150" +
    "\ufeb1\215\ufeb1\236\ufeb1\237\ufeb1\243\ufeb1\251\ufeb1\314\ufeb1" +
    "\325\ufeb1\u010a\ufeb1\u010b\ufeb1\u0110\ufeb1\001\002\000\036\052" +
    "\ufeb2\056\ufeb2\115\ufeb2\150\ufeb2\215\ufeb2\236\ufeb2\237\u0174" +
    "\243\ufeb2\251\ufeb2\314\ufeb2\325\ufeb2\u010a\ufeb2\u010b\ufeb2\u0110" +
    "\ufeb2\001\002\000\034\052\ufeb3\056\ufeb3\115\ufeb3\150\ufeb3" +
    "\215\ufeb3\236\ufeb3\243\ufeb3\251\ufeb3\314\ufeb3\325\ufeb3\u010a" +
    "\ufeb3\u010b\ufeb3\u0110\ufeb3\001\002\000\004\u0110\u0184\001\002" +
    "\000\036\052\ufeb5\056\ufeb5\115\ufeb5\150\ufeb5\215\ufeb5\236" +
    "\ufeb5\237\ufeb5\243\ufeb5\251\ufeb5\314\ufeb5\325\ufeb5\u010a\ufeb5" +
    "\u010b\ufeb5\u0110\ufeb5\001\002\000\066\010\uffd4\011\uffd4\046" +
    "\uffd4\051\uffd4\052\uffd4\056\uffd4\065\uffd4\113\uffd4\114\uffd4" +
    "\115\uffd4\134\uffd4\150\uffd4\215\uffd4\220\uffd4\233\uffd4\243" +
    "\uffd4\312\uffd4\314\uffd4\325\uffd4\377\uffd4\u010a\uffd4\u010b\uffd4" +
    "\u010e\uffd4\u010f\uffd4\u0110\uffd4\u0122\uffd4\001\002\000\066\010" +
    "\uffc3\011\uffc3\046\uffc3\051\uffc3\052\uffc3\056\uffc3\065\uffc3" +
    "\113\uffc3\114\uffc3\115\uffc3\134\uffc3\150\uffc3\215\uffc3\220" +
    "\uffc3\233\uffc3\243\uffc3\312\uffc3\314\uffc3\325\uffc3\377\uffc3" +
    "\u010a\uffc3\u010b\uffc3\u010e\uffc3\u010f\uffc3\u0110\uffc3\u0122\uffc3\001" +
    "\002\000\066\010\uffcc\011\uffcc\046\uffcc\051\uffcc\052\uffcc" +
    "\056\uffcc\065\uffcc\113\uffcc\114\uffcc\115\uffcc\134\uffcc\150" +
    "\uffcc\215\uffcc\220\uffcc\233\uffcc\243\uffcc\312\uffcc\314\uffcc" +
    "\325\uffcc\377\uffcc\u010a\uffcc\u010b\uffcc\u010e\uffcc\u010f\uffcc\u0110" +
    "\uffcc\u0122\uffcc\001\002\000\066\010\uffce\011\uffce\046\uffce" +
    "\051\uffce\052\uffce\056\uffce\065\uffce\113\uffce\114\uffce\115" +
    "\uffce\134\uffce\150\uffce\215\uffce\220\uffce\233\uffce\243\uffce" +
    "\312\uffce\314\uffce\325\uffce\377\uffce\u010a\uffce\u010b\uffce\u010e" +
    "\uffce\u010f\uffce\u0110\uffce\u0122\uffce\001\002\000\066\010\uffd9" +
    "\011\uffd9\046\uffd9\051\uffd9\052\uffd9\056\uffd9\065\uffd9\113" +
    "\uffd9\114\uffd9\115\uffd9\134\uffd9\150\uffd9\215\uffd9\220\uffd9" +
    "\233\uffd9\243\uffd9\312\uffd9\314\uffd9\325\uffd9\377\uffd9\u010a" +
    "\uffd9\u010b\uffd9\u010e\uffd9\u010f\uffd9\u0110\uffd9\u0122\uffd9\001\002" +
    "\000\066\010\uffc2\011\uffc2\046\uffc2\051\uffc2\052\uffc2\056" +
    "\uffc2\065\uffc2\113\uffc2\114\uffc2\115\uffc2\134\uffc2\150\uffc2" +
    "\215\uffc2\220\uffc2\233\uffc2\243\uffc2\312\uffc2\314\uffc2\325" +
    "\uffc2\377\uffc2\u010a\uffc2\u010b\uffc2\u010e\uffc2\u010f\uffc2\u0110\uffc2" +
    "\u0122\uffc2\001\002\000\066\010\uffd5\011\uffd5\046\uffd5\051" +
    "\uffd5\052\uffd5\056\uffd5\065\uffd5\113\uffd5\114\uffd5\115\uffd5" +
    "\134\uffd5\150\uffd5\215\uffd5\220\uffd5\233\uffd5\243\uffd5\312" +
    "\uffd5\314\uffd5\325\uffd5\377\uffd5\u010a\uffd5\u010b\uffd5\u010e\uffd5" +
    "\u010f\uffd5\u0110\uffd5\u0122\uffd5\001\002\000\066\010\uffda\011" +
    "\uffda\046\uffda\051\uffda\052\uffda\056\uffda\065\uffda\113\uffda" +
    "\114\uffda\115\uffda\134\uffda\150\uffda\215\uffda\220\uffda\233" +
    "\uffda\243\uffda\312\uffda\314\uffda\325\uffda\377\uffda\u010a\uffda" +
    "\u010b\uffda\u010e\uffda\u010f\uffda\u0110\uffda\u0122\uffda\001\002\000" +
    "\066\010\uffc9\011\uffc9\046\uffc9\051\uffc9\052\uffc9\056\uffc9" +
    "\065\uffc9\113\uffc9\114\uffc9\115\uffc9\134\uffc9\150\uffc9\215" +
    "\uffc9\220\uffc9\233\uffc9\243\uffc9\312\uffc9\314\uffc9\325\uffc9" +
    "\377\uffc9\u010a\uffc9\u010b\uffc9\u010e\uffc9\u010f\uffc9\u0110\uffc9\u0122" +
    "\uffc9\001\002\000\066\010\uffcf\011\uffcf\046\uffcf\051\uffcf" +
    "\052\uffcf\056\uffcf\065\uffcf\113\uffcf\114\uffcf\115\uffcf\134" +
    "\uffcf\150\uffcf\215\uffcf\220\uffcf\233\uffcf\243\uffcf\312\uffcf" +
    "\314\uffcf\325\uffcf\377\uffcf\u010a\uffcf\u010b\uffcf\u010e\uffcf\u010f" +
    "\uffcf\u0110\uffcf\u0122\uffcf\001\002\000\066\010\uffcd\011\uffcd" +
    "\046\uffcd\051\uffcd\052\uffcd\056\uffcd\065\uffcd\113\uffcd\114" +
    "\uffcd\115\uffcd\134\uffcd\150\uffcd\215\uffcd\220\uffcd\233\uffcd" +
    "\243\uffcd\312\uffcd\314\uffcd\325\uffcd\377\uffcd\u010a\uffcd\u010b" +
    "\uffcd\u010e\uffcd\u010f\uffcd\u0110\uffcd\u0122\uffcd\001\002\000\066" +
    "\010\uffd2\011\uffd2\046\uffd2\051\uffd2\052\uffd2\056\uffd2\065" +
    "\uffd2\113\uffd2\114\uffd2\115\uffd2\134\uffd2\150\uffd2\215\uffd2" +
    "\220\uffd2\233\uffd2\243\uffd2\312\uffd2\314\uffd2\325\uffd2\377" +
    "\uffd2\u010a\uffd2\u010b\uffd2\u010e\uffd2\u010f\uffd2\u0110\uffd2\u0122\uffd2" +
    "\001\002\000\066\337\u018c\340\u0189\341\u019a\342\u01a0\343" +
    "\u0199\344\u018b\345\u0185\346\u019e\347\u0190\350\u0198\351\u019f" +
    "\352\u018e\353\u0188\354\u018f\355\u0187\356\u019c\357\u019b\360" +
    "\u018d\361\u019d\362\u0195\363\u0192\364\u01a2\365\u01a1\366\u0186" +
    "\367\u018a\370\u0197\001\002\000\066\010\uffc6\011\uffc6\046" +
    "\uffc6\051\uffc6\052\uffc6\056\uffc6\065\uffc6\113\uffc6\114\uffc6" +
    "\115\uffc6\134\uffc6\150\uffc6\215\uffc6\220\uffc6\233\uffc6\243" +
    "\uffc6\312\uffc6\314\uffc6\325\uffc6\377\uffc6\u010a\uffc6\u010b\uffc6" +
    "\u010e\uffc6\u010f\uffc6\u0110\uffc6\u0122\uffc6\001\002\000\044\052" +
    "\uffdc\056\uffdc\113\uffdc\114\uffdc\115\uffdc\134\uffdc\150\uffdc" +
    "\215\uffdc\220\uffdc\233\uffdc\243\uffdc\314\uffdc\325\uffdc\u010a" +
    "\uffdc\u010b\uffdc\u010f\uffdc\u0110\uffdc\001\002\000\044\052\uffbf" +
    "\056\uffbf\113\uffbf\114\uffbf\115\uffbf\134\uffbf\150\uffbf\215" +
    "\uffbf\220\uffbf\233\uffbf\243\uffbf\314\uffbf\325\uffbf\u010a\uffbf" +
    "\u010b\uffbf\u010f\u01e8\u0110\uffbf\001\002\000\066\010\uffc7\011" +
    "\uffc7\046\uffc7\051\uffc7\052\uffc7\056\uffc7\065\uffc7\113\uffc7" +
    "\114\uffc7\115\uffc7\134\uffc7\150\uffc7\215\uffc7\220\uffc7\233" +
    "\uffc7\243\uffc7\312\uffc7\314\uffc7\325\uffc7\377\uffc7\u010a\uffc7" +
    "\u010b\uffc7\u010e\uffc7\u010f\uffc7\u0110\uffc7\u0122\uffc7\001\002\000" +
    "\040\052\ufede\056\ufede\113\ufede\114\ufede\115\ufede\134\u01a3" +
    "\150\ufede\215\ufede\233\ufede\243\ufede\314\ufede\325\ufede\u010a" +
    "\ufede\u010b\ufede\u0110\ufede\001\002\000\066\010\uffc1\011\uffc1" +
    "\046\uffc1\051\uffc1\052\uffc1\056\uffc1\065\uffc1\113\uffc1\114" +
    "\uffc1\115\uffc1\134\uffc1\150\uffc1\215\uffc1\220\uffc1\233\uffc1" +
    "\243\uffc1\312\uffc1\314\uffc1\325\uffc1\377\uffc1\u010a\uffc1\u010b" +
    "\uffc1\u010e\uffc1\u010f\uffc1\u0110\uffc1\u0122\uffc1\001\002\000\066" +
    "\010\uffd1\011\uffd1\046\uffd1\051\uffd1\052\uffd1\056\uffd1\065" +
    "\uffd1\113\uffd1\114\uffd1\115\uffd1\134\uffd1\150\uffd1\215\uffd1" +
    "\220\uffd1\233\uffd1\243\uffd1\312\uffd1\314\uffd1\325\uffd1\377" +
    "\uffd1\u010a\uffd1\u010b\uffd1\u010e\uffd1\u010f\uffd1\u0110\uffd1\u0122\uffd1" +
    "\001\002\000\066\010\uffd6\011\uffd6\046\uffd6\051\uffd6\052" +
    "\uffd6\056\uffd6\065\uffd6\113\uffd6\114\uffd6\115\uffd6\134\uffd6" +
    "\150\uffd6\215\uffd6\220\uffd6\233\uffd6\243\uffd6\312\uffd6\314" +
    "\uffd6\325\uffd6\377\uffd6\u010a\uffd6\u010b\uffd6\u010e\uffd6\u010f\uffd6" +
    "\u0110\uffd6\u0122\uffd6\001\002\000\066\010\uffd8\011\uffd8\046" +
    "\uffd8\051\uffd8\052\uffd8\056\uffd8\065\uffd8\113\uffd8\114\uffd8" +
    "\115\uffd8\134\uffd8\150\uffd8\215\uffd8\220\uffd8\233\uffd8\243" +
    "\uffd8\312\uffd8\314\uffd8\325\uffd8\377\uffd8\u010a\uffd8\u010b\uffd8" +
    "\u010e\uffd8\u010f\uffd8\u0110\uffd8\u0122\uffd8\001\002\000\066\010" +
    "\uffca\011\uffca\046\uffca\051\uffca\052\uffca\056\uffca\065\uffca" +
    "\113\uffca\114\uffca\115\uffca\134\uffca\150\uffca\215\uffca\220" +
    "\uffca\233\uffca\243\uffca\312\uffca\314\uffca\325\uffca\377\uffca" +
    "\u010a\uffca\u010b\uffca\u010e\uffca\u010f\uffca\u0110\uffca\u0122\uffca\001" +
    "\002\000\066\010\uffcb\011\uffcb\046\uffcb\051\uffcb\052\uffcb" +
    "\056\uffcb\065\uffcb\113\uffcb\114\uffcb\115\uffcb\134\uffcb\150" +
    "\uffcb\215\uffcb\220\uffcb\233\uffcb\243\uffcb\312\uffcb\314\uffcb" +
    "\325\uffcb\377\uffcb\u010a\uffcb\u010b\uffcb\u010e\uffcb\u010f\uffcb\u0110" +
    "\uffcb\u0122\uffcb\001\002\000\066\010\uffc8\011\uffc8\046\uffc8" +
    "\051\uffc8\052\uffc8\056\uffc8\065\uffc8\113\uffc8\114\uffc8\115" +
    "\uffc8\134\uffc8\150\uffc8\215\uffc8\220\uffc8\233\uffc8\243\uffc8" +
    "\312\uffc8\314\uffc8\325\uffc8\377\uffc8\u010a\uffc8\u010b\uffc8\u010e" +
    "\uffc8\u010f\uffc8\u0110\uffc8\u0122\uffc8\001\002\000\066\010\uffd3" +
    "\011\uffd3\046\uffd3\051\uffd3\052\uffd3\056\uffd3\065\uffd3\113" +
    "\uffd3\114\uffd3\115\uffd3\134\uffd3\150\uffd3\215\uffd3\220\uffd3" +
    "\233\uffd3\243\uffd3\312\uffd3\314\uffd3\325\uffd3\377\uffd3\u010a" +
    "\uffd3\u010b\uffd3\u010e\uffd3\u010f\uffd3\u0110\uffd3\u0122\uffd3\001\002" +
    "\000\066\010\uffd0\011\uffd0\046\uffd0\051\uffd0\052\uffd0\056" +
    "\uffd0\065\uffd0\113\uffd0\114\uffd0\115\uffd0\134\uffd0\150\uffd0" +
    "\215\uffd0\220\uffd0\233\uffd0\243\uffd0\312\uffd0\314\uffd0\325" +
    "\uffd0\377\uffd0\u010a\uffd0\u010b\uffd0\u010e\uffd0\u010f\uffd0\u0110\uffd0" +
    "\u0122\uffd0\001\002\000\066\010\uffd7\011\uffd7\046\uffd7\051" +
    "\uffd7\052\uffd7\056\uffd7\065\uffd7\113\uffd7\114\uffd7\115\uffd7" +
    "\134\uffd7\150\uffd7\215\uffd7\220\uffd7\233\uffd7\243\uffd7\312" +
    "\uffd7\314\uffd7\325\uffd7\377\uffd7\u010a\uffd7\u010b\uffd7\u010e\uffd7" +
    "\u010f\uffd7\u0110\uffd7\u0122\uffd7\001\002\000\066\010\uffc4\011" +
    "\uffc4\046\uffc4\051\uffc4\052\uffc4\056\uffc4\065\uffc4\113\uffc4" +
    "\114\uffc4\115\uffc4\134\uffc4\150\uffc4\215\uffc4\220\uffc4\233" +
    "\uffc4\243\uffc4\312\uffc4\314\uffc4\325\uffc4\377\uffc4\u010a\uffc4" +
    "\u010b\uffc4\u010e\uffc4\u010f\uffc4\u0110\uffc4\u0122\uffc4\001\002\000" +
    "\066\010\uffc5\011\uffc5\046\uffc5\051\uffc5\052\uffc5\056\uffc5" +
    "\065\uffc5\113\uffc5\114\uffc5\115\uffc5\134\uffc5\150\uffc5\215" +
    "\uffc5\220\uffc5\233\uffc5\243\uffc5\312\uffc5\314\uffc5\325\uffc5" +
    "\377\uffc5\u010a\uffc5\u010b\uffc5\u010e\uffc5\u010f\uffc5\u0110\uffc5\u0122" +
    "\uffc5\001\002\000\006\u010d\047\u0128\046\001\002\000\036" +
    "\052\u01b3\056\ufeb6\113\u01a5\114\u01ac\115\u01b1\150\u01ab\215" +
    "\u01b0\233\u01aa\243\u01a9\314\u01b2\325\ufed2\u010a\ufed2\u010b\ufed2" +
    "\u0110\ufed2\001\002\000\034\052\ufed5\056\ufed5\114\ufed5\115" +
    "\ufed5\150\ufed5\215\ufed5\243\ufed5\314\ufed5\325\ufed5\u010a\ufed5" +
    "\u010b\ufed5\u010f\u01d3\u0110\ufed5\001\002\000\006\046\u01da\220" +
    "\u01db\001\002\000\012\325\ufed3\u010a\ufed3\u010b\ufed3\u0110\ufed3" +
    "\001\002\000\012\325\ufee0\u010a\ufee0\u010b\ufee0\u0110\ufee0\001" +
    "\002\000\032\052\ufeaa\056\ufeaa\115\ufeaa\126\ufeaa\150\ufeaa" +
    "\212\ufeaa\243\ufeaa\314\ufeaa\325\ufeaa\u010a\ufeaa\u010b\ufeaa\u0110" +
    "\ufeaa\001\002\000\014\220\u01cb\u0123\u01cc\u0126\u01c8\u0127\u01c7" +
    "\u0129\u01c9\001\002\000\006\u010d\047\u0128\046\001\002\000" +
    "\026\052\ufebe\056\ufebe\115\ufebe\150\u0140\243\ufebe\314\ufebe" +
    "\325\ufec0\u010a\ufec0\u010b\ufec0\u0110\ufec0\001\002\000\032\052" +
    "\ufeb8\056\ufeb8\115\ufeb8\126\u014a\150\ufeb8\212\u0149\243\ufeb8" +
    "\314\ufeb8\325\ufeb8\u010a\ufeb8\u010b\ufeb8\u0110\ufeb8\001\002\000" +
    "\004\056\u01be\001\002\000\026\052\ufebe\056\ufebe\115\ufebe" +
    "\150\u0140\243\ufebe\314\ufebe\325\ufec0\u010a\ufec0\u010b\ufec0\u0110" +
    "\ufec0\001\002\000\006\046\ufec7\220\ufec7\001\002\000\006" +
    "\215\u015a\u010f\ufeec\001\002\000\004\157\u01b5\001\002\000" +
    "\004\157\u01b4\001\002\000\004\056\ufeb7\001\002\000\032" +
    "\052\ufeab\056\ufeab\115\ufeab\126\ufeab\150\ufeab\212\ufeab\243" +
    "\ufeab\314\ufeab\325\ufeab\u010a\ufeab\u010b\ufeab\u0110\ufeab\001\002" +
    "\000\004\u010f\u01b7\001\002\000\040\215\137\220\uff87\326" +
    "\uff87\327\uff87\330\uff87\331\uff87\332\uff87\u010d\uff87\u010f\uff87" +
    "\u0110\uff82\u0123\uff87\u0126\uff87\u0127\uff87\u0128\uff87\u0129\uff87\001" +
    "\002\000\004\u0110\u01b9\001\002\000\026\052\ufebb\056\ufebb" +
    "\115\ufebb\150\ufebb\243\ufebb\314\ufebb\325\ufebb\u010a\ufebb\u010b" +
    "\ufebb\u0110\ufebb\001\002\000\014\052\u01b3\056\ufeb6\115\u01b1" +
    "\243\u01a9\314\u01b2\001\002\000\012\325\ufecd\u010a\ufecd\u010b" +
    "\ufecd\u0110\ufecd\001\002\000\026\052\ufebe\056\ufebe\115\ufebe" +
    "\150\u0140\243\ufebe\314\ufebe\325\ufec0\u010a\ufec0\u010b\ufec0\u0110" +
    "\ufec0\001\002\000\012\325\ufec1\u010a\ufec1\u010b\ufec1\u0110\ufec1" +
    "\001\002\000\006\u010d\047\u0128\046\001\002\000\034\052" +
    "\ufeb4\056\ufeb4\115\ufeb4\150\ufeb4\215\ufeb4\237\ufeb4\243\ufeb4" +
    "\314\ufeb4\325\ufeb4\u010a\ufeb4\u010b\ufeb4\u010f\u0172\u0110\ufeb4\001" +
    "\002\000\032\052\ufeb2\056\ufeb2\115\ufeb2\150\ufeb2\215\ufeb2" +
    "\237\u0174\243\ufeb2\314\ufeb2\325\ufeb2\u010a\ufeb2\u010b\ufeb2\u0110" +
    "\ufeb2\001\002\000\030\052\ufeec\056\ufeec\115\ufeec\150\ufeec" +
    "\215\u015a\243\ufeec\314\ufeec\325\ufeec\u010a\ufeec\u010b\ufeec\u0110" +
    "\ufeec\001\002\000\026\052\ufebc\056\ufebc\115\ufebc\150\ufebc" +
    "\243\ufebc\314\ufebc\325\ufebc\u010a\ufebc\u010b\ufebc\u0110\ufebc\001" +
    "\002\000\026\052\ufebd\056\ufebd\115\ufebd\150\ufebd\243\ufebd" +
    "\314\ufebd\325\ufebd\u010a\ufebd\u010b\ufebd\u0110\ufebd\001\002\000" +
    "\012\325\ufece\u010a\ufece\u010b\ufece\u0110\ufece\001\002\000\024" +
    "\052\u01b3\056\ufeb6\113\u01a5\114\u01ac\115\u01b1\215\u01b0\233" +
    "\u01aa\243\u01a9\314\u01b2\001\002\000\012\325\ufed4\u010a\ufed4" +
    "\u010b\ufed4\u0110\ufed4\001\002\000\034\052\ufecc\056\ufecc\113" +
    "\ufecc\114\ufecc\115\ufecc\150\ufecc\215\ufecc\243\ufecc\314\ufecc" +
    "\325\ufecc\u010a\ufecc\u010b\ufecc\u0110\ufecc\001\002\000\034\052" +
    "\ufecb\056\ufecb\113\ufecb\114\ufecb\115\ufecb\150\ufecb\215\ufecb" +
    "\243\ufecb\314\ufecb\325\ufecb\u010a\ufecb\u010b\ufecb\u0110\ufecb\001" +
    "\002\000\034\052\ufec9\056\ufec9\113\ufec9\114\ufec9\115\ufec9" +
    "\150\ufec9\215\ufec9\243\ufec9\314\ufec9\325\ufec9\u010a\ufec9\u010b" +
    "\ufec9\u0110\ufec9\001\002\000\034\052\ufedc\056\ufedc\113\u01cd" +
    "\114\ufedc\115\ufedc\150\ufedc\215\ufedc\243\ufedc\314\ufedc\325" +
    "\ufedc\u010a\ufedc\u010b\ufedc\u0110\ufedc\001\002\000\034\052\ufec8" +
    "\056\ufec8\113\ufec8\114\ufec8\115\ufec8\150\ufec8\215\ufec8\243" +
    "\ufec8\314\ufec8\325\ufec8\u010a\ufec8\u010b\ufec8\u0110\ufec8\001\002" +
    "\000\034\052\ufeca\056\ufeca\113\ufeca\114\ufeca\115\ufeca\150" +
    "\ufeca\215\ufeca\243\ufeca\314\ufeca\325\ufeca\u010a\ufeca\u010b\ufeca" +
    "\u0110\ufeca\001\002\000\034\052\ufed5\056\ufed5\114\ufed5\115" +
    "\ufed5\150\ufed5\215\ufed5\243\ufed5\314\ufed5\325\ufed5\u010a\ufed5" +
    "\u010b\ufed5\u010f\u01d3\u0110\ufed5\001\002\000\032\052\ufeec\056" +
    "\ufeec\114\ufeec\115\ufeec\150\ufeec\215\u015a\243\ufeec\314\ufeec" +
    "\325\ufeec\u010a\ufeec\u010b\ufeec\u0110\ufeec\001\002\000\030\052" +
    "\ufed7\056\ufed7\114\u01d0\115\ufed7\150\ufed7\243\ufed7\314\ufed7" +
    "\325\ufed7\u010a\ufed7\u010b\ufed7\u0110\ufed7\001\002\000\026\052" +
    "\ufed8\056\ufed8\115\ufed8\150\ufed8\243\ufed8\314\ufed8\325\ufed8" +
    "\u010a\ufed8\u010b\ufed8\u0110\ufed8\001\002\000\026\052\ufebe\056" +
    "\ufebe\115\ufebe\150\u0140\243\ufebe\314\ufebe\325\ufec0\u010a\ufec0" +
    "\u010b\ufec0\u0110\ufec0\001\002\000\012\325\ufed1\u010a\ufed1\u010b" +
    "\ufed1\u0110\ufed1\001\002\000\004\u0127\u01d5\001\002\000\032" +
    "\052\ufedd\056\ufedd\114\ufedd\115\ufedd\150\ufedd\215\ufedd\243" +
    "\ufedd\314\ufedd\325\ufedd\u010a\ufedd\u010b\ufedd\u0110\ufedd\001\002" +
    "\000\004\u010b\u01d6\001\002\000\004\u0127\u01d7\001\002\000" +
    "\004\u0110\u01d8\001\002\000\032\052\ufed6\056\ufed6\114\ufed6" +
    "\115\ufed6\150\ufed6\215\ufed6\243\ufed6\314\ufed6\325\ufed6\u010a" +
    "\ufed6\u010b\ufed6\u0110\ufed6\001\002\000\030\052\ufed7\056\ufed7" +
    "\114\u01d0\115\ufed7\150\ufed7\243\ufed7\314\ufed7\325\ufed7\u010a" +
    "\ufed7\u010b\ufed7\u0110\ufed7\001\002\000\004\061\u01dc\001\002" +
    "\000\030\052\ufec6\056\ufec6\114\ufec6\115\ufec6\150\ufec6\243" +
    "\ufec6\314\ufec6\325\ufec6\u010a\ufec6\u010b\ufec6\u0110\ufec6\001\002" +
    "\000\034\052\ufec2\056\ufec2\114\ufec2\115\ufec2\150\ufec2\215" +
    "\u01dd\220\u01de\243\ufec2\314\ufec2\325\ufec2\u010a\ufec2\u010b\ufec2" +
    "\u0110\ufec2\001\002\000\004\220\u01e0\001\002\000\030\052" +
    "\ufec3\056\ufec3\114\ufec3\115\ufec3\150\ufec3\243\ufec3\314\ufec3" +
    "\325\ufec3\u010a\ufec3\u010b\ufec3\u0110\ufec3\001\002\000\030\052" +
    "\ufec5\056\ufec5\114\ufec5\115\ufec5\150\ufec5\243\ufec5\314\ufec5" +
    "\325\ufec5\u010a\ufec5\u010b\ufec5\u0110\ufec5\001\002\000\030\052" +
    "\ufec4\056\ufec4\114\ufec4\115\ufec4\150\ufec4\243\ufec4\314\ufec4" +
    "\325\ufec4\u010a\ufec4\u010b\ufec4\u0110\ufec4\001\002\000\026\052" +
    "\ufebe\056\ufebe\115\ufebe\150\u0140\243\ufebe\314\ufebe\325\ufec0" +
    "\u010a\ufec0\u010b\ufec0\u0110\ufec0\001\002\000\012\325\ufecf\u010a" +
    "\ufecf\u010b\ufecf\u0110\ufecf\001\002\000\032\052\ufeec\056\ufeec" +
    "\114\ufeec\115\ufeec\150\ufeec\215\u015a\243\ufeec\314\ufeec\325" +
    "\ufeec\u010a\ufeec\u010b\ufeec\u0110\ufeec\001\002\000\030\052\ufed7" +
    "\056\ufed7\114\u01d0\115\ufed7\150\ufed7\243\ufed7\314\ufed7\325" +
    "\ufed7\u010a\ufed7\u010b\ufed7\u0110\ufed7\001\002\000\026\052\ufebe" +
    "\056\ufebe\115\ufebe\150\u0140\243\ufebe\314\ufebe\325\ufec0\u010a" +
    "\ufec0\u010b\ufec0\u0110\ufec0\001\002\000\012\325\ufed0\u010a\ufed0" +
    "\u010b\ufed0\u0110\ufed0\001\002\000\040\052\ufedf\056\ufedf\113" +
    "\ufedf\114\ufedf\115\ufedf\150\ufedf\215\ufedf\220\ufedf\233\ufedf" +
    "\243\ufedf\314\ufedf\325\ufedf\u010a\ufedf\u010b\ufedf\u0110\ufedf\001" +
    "\002\000\004\u0127\u01ea\001\002\000\042\052\uffdd\056\uffdd" +
    "\113\uffdd\114\uffdd\115\uffdd\134\uffdd\150\uffdd\215\uffdd\220" +
    "\uffdd\233\uffdd\243\uffdd\314\uffdd\325\uffdd\u010a\uffdd\u010b\uffdd" +
    "\u0110\uffdd\001\002\000\006\u010b\u01eb\u0110\uffbd\001\002\000" +
    "\004\u0127\u01ee\001\002\000\004\u0110\u01ed\001\002\000\042" +
    "\052\uffc0\056\uffc0\113\uffc0\114\uffc0\115\uffc0\134\uffc0\150" +
    "\uffc0\215\uffc0\220\uffc0\233\uffc0\243\uffc0\314\uffc0\325\uffc0" +
    "\u010a\uffc0\u010b\uffc0\u0110\uffc0\001\002\000\004\u0110\uffbe\001" +
    "\002\000\004\u010e\u01f0\001\002\000\044\052\uffdb\056\uffdb" +
    "\113\uffdb\114\uffdb\115\uffdb\134\uffdb\150\uffdb\215\uffdb\220" +
    "\uffdb\233\uffdb\243\uffdb\314\uffdb\325\uffdb\u010a\uffdb\u010b\uffdb" +
    "\u010f\uffdb\u0110\uffdb\001\002\000\014\052\ufebf\056\ufebf\115" +
    "\ufebf\243\ufebf\314\ufebf\001\002\000\010\126\u014a\212\u0149" +
    "\u010f\ufeb8\001\002\000\004\u010f\u014c\001\002\000\012\325" +
    "\ufe9e\u010a\ufe9e\u010b\ufe9e\u0110\ufe9e\001\002\000\022\052\ufebe" +
    "\115\ufebe\132\u013f\150\u0140\243\ufebe\314\ufebe\u010d\047\u0128" +
    "\046\001\002\000\006\325\ufe8b\u010a\ufe8b\001\002\000\012" +
    "\325\ufee1\u010a\ufee1\u010b\u01f5\u0110\ufee1\001\002\000\010\325" +
    "\ufee2\u010a\ufee2\u0110\ufee2\001\002\000\006\u010d\047\u0128\046" +
    "\001\002\000\074\004\u01ff\263\u0200\337\u018c\340\u0189\341" +
    "\u019a\342\u01a0\343\u0199\344\u018b\345\u0185\346\u019e\347\u0190" +
    "\350\u0198\351\u019f\352\u018e\353\u0188\354\u018f\355\u0187\356" +
    "\u019c\357\u019b\360\u018d\361\u019d\362\u0195\363\u0192\364\u01a2" +
    "\365\u01a1\366\u0186\367\u018a\370\u0197\u010d\u0191\001\002\000" +
    "\006\114\u0206\215\u0207\001\002\000\006\325\ufe88\u010a\ufe88" +
    "\001\002\000\006\325\ufe89\u010a\ufe89\001\002\000\014\134" +
    "\u01a3\215\ufede\220\ufede\325\ufede\u010a\ufede\001\002\000\006" +
    "\114\ufe85\215\ufe85\001\002\000\006\114\ufe84\215\ufe84\001" +
    "\002\000\012\215\u0203\220\u0204\325\ufed9\u010a\ufed9\001\002" +
    "\000\006\325\ufe86\u010a\ufe86\001\002\000\004\220\u0205\001" +
    "\002\000\006\325\ufedb\u010a\ufedb\001\002\000\006\325\ufeda" +
    "\u010a\ufeda\001\002\000\006\325\ufe83\u010a\ufe83\001\002\000" +
    "\004\046\u0209\001\002\000\006\325\ufe87\u010a\ufe87\001\002" +
    "\000\004\061\u020a\001\002\000\006\325\ufe82\u010a\ufe82\001" +
    "\002\000\006\325\ufe91\u010a\ufe91\001\002\000\006\134\ufe95" +
    "\152\ufe95\001\002\000\006\134\ufe94\152\ufe94\001\002\000" +
    "\006\134\u020f\152\u0210\001\002\000\006\u010d\047\u0128\046" +
    "\001\002\000\004\106\u0212\001\002\000\006\325\ufe96\u010a" +
    "\ufe96\001\002\000\004\324\u0213\001\002\000\006\325\ufe92" +
    "\u010a\ufe92\001\002\000\006\325\ufe93\u010a\ufe93\001\002\000" +
    "\006\u010d\ufe5f\u0128\ufe5f\001\002\000\006\u010d\ufe60\u0128\ufe60" +
    "\001\002\000\006\u010d\047\u0128\046\001\002\000\006\u010d" +
    "\047\u0128\046\001\002\000\014\046\ufe5d\051\ufe5d\312\ufe5d" +
    "\u010a\u021a\u0116\ufe5d\001\002\000\004\u0127\u0255\001\002\000" +
    "\012\046\ufe5b\051\ufe5b\312\ufe5b\u0116\u021e\001\002\000\010" +
    "\046\ufe5c\051\ufe5c\312\ufe5c\001\002\000\010\046\ufe4d\051" +
    "\ufe4d\312\u0233\001\002\000\004\u0128\u0231\001\002\000\074" +
    "\214\u0220\337\u018c\340\u0189\341\u019a\342\u01a0\343\u0199\344" +
    "\u018b\345\u0185\346\u019e\347\u0190\350\u0198\351\u019f\352\u018e" +
    "\353\u0188\354\u018f\355\u0187\356\u019c\357\u019b\360\u018d\361" +
    "\u019d\362\u0195\363\u0192\364\u01a2\365\u01a1\366\u0186\367\u018a" +
    "\370\u0197\u010d\047\u0128\046\001\002\000\004\270\u022f\001" +
    "\002\000\020\010\ufe53\046\ufe53\051\ufe53\312\ufe53\377\ufe53" +
    "\u010b\ufe53\u0122\u0229\001\002\000\004\011\u0227\001\002\000" +
    "\012\046\ufe58\051\ufe58\312\ufe58\u010b\u0225\001\002\000\010" +
    "\046\ufe5a\051\ufe5a\312\ufe5a\001\002\000\004\u0116\u021e\001" +
    "\002\000\010\046\ufe59\051\ufe59\312\ufe59\001\002\000\012" +
    "\046\ufe55\051\ufe55\312\ufe55\u010b\ufe55\001\002\000\016\010" +
    "\u022b\046\ufe51\051\ufe51\312\ufe51\377\u022c\u010b\ufe51\001\002" +
    "\000\004\233\u022a\001\002\000\022\010\ufe54\011\ufe54\046" +
    "\ufe54\051\ufe54\312\ufe54\377\ufe54\u010b\ufe54\u0110\ufe54\001\002" +
    "\000\012\046\ufe50\051\ufe50\312\ufe50\u010b\ufe50\001\002\000" +
    "\012\046\ufe4f\051\ufe4f\312\ufe4f\u010b\ufe4f\001\002\000\012" +
    "\046\ufe52\051\ufe52\312\ufe52\u010b\ufe52\001\002\000\012\046" +
    "\ufe57\051\ufe57\312\ufe57\u010b\ufe57\001\002\000\006\010\u022b" +
    "\377\u022c\001\002\000\012\046\ufe56\051\ufe56\312\ufe56\u010b" +
    "\ufe56\001\002\000\104\051\uffde\214\uffde\274\uffde\325\uffde" +
    "\337\uffde\340\uffde\341\uffde\342\uffde\343\uffde\344\uffde\345" +
    "\uffde\346\uffde\347\uffde\350\uffde\351\uffde\352\uffde\353\uffde" +
    "\354\uffde\355\uffde\356\uffde\357\uffde\360\uffde\361\uffde\362" +
    "\uffde\363\uffde\364\uffde\365\uffde\366\uffde\367\uffde\370\uffde" +
    "\u010a\uffde\u010d\uffde\u0128\uffde\001\002\000\006\046\u0244\051" +
    "\ufe3f\001\002\000\012\012\u0238\022\u023a\310\u0239\313\u0236" +
    "\001\002\000\010\046\ufe47\051\ufe47\u010b\u0241\001\002\000" +
    "\006\046\ufe4e\051\ufe4e\001\002\000\004\051\ufe45\001\002" +
    "\000\004\051\u023b\001\002\000\010\046\ufe4b\051\ufe4b\u010b" +
    "\ufe4b\001\002\000\004\051\ufe46\001\002\000\010\046\ufe4a" +
    "\051\ufe4a\u010b\ufe4a\001\002\000\014\017\u023d\020\u0240\021" +
    "\u023c\u010d\047\u0128\046\001\002\000\014\046\ufe42\051\ufe42" +
    "\065\ufe42\072\ufe42\u010b\ufe42\001\002\000\014\046\ufe44\051" +
    "\ufe44\065\ufe44\072\ufe44\u010b\ufe44\001\002\000\014\046\ufe41" +
    "\051\ufe41\065\ufe41\072\ufe41\u010b\ufe41\001\002\000\010\046" +
    "\ufe49\051\ufe49\u010b\ufe49\001\002\000\014\046\ufe43\051\ufe43" +
    "\065\ufe43\072\ufe43\u010b\ufe43\001\002\000\012\012\u0238\022" +
    "\u023a\310\u0239\313\u0236\001\002\000\006\046\ufe4c\051\ufe4c" +
    "\001\002\000\006\046\ufe48\051\ufe48\001\002\000\004\061" +
    "\u0254\001\002\000\004\051\u0246\001\002\000\014\065\u024a" +
    "\133\007\140\025\236\040\251\041\001\002\000\006\325" +
    "\344\u010a\342\001\002\000\006\325\ufe61\u010a\ufe61\001\002" +
    "\000\006\325\ufe3d\u010a\ufe3d\001\002\000\012\133\007\140" +
    "\025\236\040\251\041\001\002\000\004\274\u024c\001\002" +
    "\000\006\325\ufe3e\u010a\ufe3e\001\002\000\020\133\007\140" +
    "\025\236\040\251\041\274\ufe3a\325\ufe3a\u010a\ufe3a\001\002" +
    "\000\006\325\344\u010a\342\001\002\000\010\274\ufe3c\325" +
    "\ufe3c\u010a\ufe3c\001\002\000\020\133\007\140\025\236\040" +
    "\251\041\274\ufe38\325\ufe38\u010a\ufe38\001\002\000\006\325" +
    "\344\u010a\342\001\002\000\010\274\ufe3b\325\ufe3b\u010a\ufe3b" +
    "\001\002\000\010\274\ufe39\325\ufe39\u010a\ufe39\001\002\000" +
    "\004\051\ufe40\001\002\000\012\046\ufe5e\051\ufe5e\312\ufe5e" +
    "\u0116\ufe5e\001\002\000\004\u010f\u0257\001\002\000\006\u0110" +
    "\ufe35\u0116\u021e\001\002\000\004\u0110\u0265\001\002\000\006" +
    "\u010b\u0262\u0110\ufe31\001\002\000\004\u0110\ufe36\001\002\000" +
    "\070\051\u025c\337\ufe2f\340\ufe2f\341\ufe2f\342\ufe2f\343\ufe2f" +
    "\344\ufe2f\345\ufe2f\346\ufe2f\347\ufe2f\350\ufe2f\351\ufe2f\352" +
    "\ufe2f\353\ufe2f\354\ufe2f\355\ufe2f\356\ufe2f\357\ufe2f\360\ufe2f" +
    "\361\ufe2f\362\ufe2f\363\ufe2f\364\ufe2f\365\ufe2f\366\ufe2f\367" +
    "\ufe2f\370\ufe2f\001\002\000\072\065\ufe30\072\ufe30\337\ufe30" +
    "\340\ufe30\341\ufe30\342\ufe30\343\ufe30\344\ufe30\345\ufe30\346" +
    "\ufe30\347\ufe30\350\ufe30\351\ufe30\352\ufe30\353\ufe30\354\ufe30" +
    "\355\ufe30\356\ufe30\357\ufe30\360\ufe30\361\ufe30\362\ufe30\363" +
    "\ufe30\364\ufe30\365\ufe30\366\ufe30\367\ufe30\370\ufe30\001\002" +
    "\000\066\337\u018c\340\u0189\341\u019a\342\u01a0\343\u0199\344" +
    "\u018b\345\u0185\346\u019e\347\u0190\350\u0198\351\u019f\352\u018e" +
    "\353\u0188\354\u018f\355\u0187\356\u019c\357\u019b\360\u018d\361" +
    "\u019d\362\u0195\363\u0192\364\u01a2\365\u01a1\366\u0186\367\u018a" +
    "\370\u0197\001\002\000\012\011\ufe53\u010b\ufe53\u0110\ufe53\u0122" +
    "\u0229\001\002\000\010\011\u0261\u010b\ufe2d\u0110\ufe2d\001\002" +
    "\000\006\u010b\ufe33\u0110\ufe33\001\002\000\006\u010b\ufe2e\u0110" +
    "\ufe2e\001\002\000\004\u0116\u021e\001\002\000\004\u0110\ufe34" +
    "\001\002\000\004\u0110\ufe32\001\002\000\004\013\u0266\001" +
    "\002\000\070\174\u026a\337\u018c\340\u0189\341\u019a\342\u01a0" +
    "\343\u0199\344\u018b\345\u0185\346\u019e\347\u0190\350\u0198\351" +
    "\u019f\352\u018e\353\u0188\354\u018f\355\u0187\356\u019c\357\u019b" +
    "\360\u018d\361\u019d\362\u0195\363\u0192\364\u01a2\365\u01a1\366" +
    "\u0186\367\u018a\370\u0197\001\002\000\006\325\ufe2b\u010a\ufe2b" +
    "\001\002\000\006\325\ufe37\u010a\ufe37\001\002\000\010\051" +
    "\ufe28\065\ufe28\312\u026d\001\002\000\010\051\ufe28\072\ufe28" +
    "\312\u026d\001\002\000\006\325\ufe2c\u010a\ufe2c\001\002\000" +
    "\006\051\u025c\072\ufe2f\001\002\000\014\012\u0272\013\u026f" +
    "\014\u0271\015\u0270\313\u026e\001\002\000\004\051\u027e\001" +
    "\002\000\004\220\u027a\001\002\000\004\237\u0277\001\002" +
    "\000\012\051\ufe24\065\ufe24\072\ufe24\u010b\ufe24\001\002\000" +
    "\012\051\ufe25\065\ufe25\072\ufe25\u010b\ufe25\001\002\000\012" +
    "\051\ufe26\065\ufe26\072\ufe26\u010b\u0275\001\002\000\010\051" +
    "\ufe29\065\ufe29\072\ufe29\001\002\000\012\051\ufe28\065\ufe28" +
    "\072\ufe28\312\u026d\001\002\000\010\051\ufe27\065\ufe27\072" +
    "\ufe27\001\002\000\004\220\u0278\001\002\000\004\u0100\u0279" +
    "\001\002\000\012\051\ufe22\065\ufe22\072\ufe22\u010b\ufe22\001" +
    "\002\000\004\237\u027b\001\002\000\004\220\u027c\001\002" +
    "\000\004\u0100\u027d\001\002\000\012\051\ufe23\065\ufe23\072" +
    "\ufe23\u010b\ufe23\001\002\000\014\017\u023d\020\u0240\021\u023c" +
    "\u010d\047\u0128\046\001\002\000\012\051\ufe21\065\ufe21\072" +
    "\ufe21\u010b\ufe21\001\002\000\004\072\u0281\001\002\000\006" +
    "\133\007\u010f\u0283\001\002\000\006\325\ufe2a\u010a\ufe2a\001" +
    "\002\000\004\133\007\001\002\000\006\325\ufe1f\u010a\ufe1f" +
    "\001\002\000\004\u0110\u0286\001\002\000\006\325\ufe20\u010a" +
    "\ufe20\001\002\000\006\051\u025c\065\ufe2f\001\002\000\004" +
    "\065\u0289\001\002\000\012\133\007\140\025\236\040\251" +
    "\041\001\002\000\006\325\344\u010a\342\001\002\000\004" +
    "\072\u028c\001\002\000\006\u0116\u021e\u0127\u028d\001\002\000" +
    "\004\274\ufe1c\001\002\000\004\274\u0290\001\002\000\004" +
    "\274\ufe1d\001\002\000\006\325\ufe1e\u010a\ufe1e\001\002\000" +
    "\010\146\u0293\u010d\uff43\u0128\uff43\001\002\000\006\u010d\047" +
    "\u0128\046\001\002\000\006\u010d\uff44\u0128\uff44\001\002\000" +
    "\010\233\uff41\265\uff41\u010f\u0121\001\002\000\006\233\uff42" +
    "\265\uff42\001\002\000\006\233\u0297\265\u0298\001\002\000" +
    "\004\265\u02ad\001\002\000\004\u010f\u029a\001\002\000\006" +
    "\325\uff45\u010a\uff45\001\002\000\014\233\u029b\u0123\u02a1\u0126" +
    "\u029d\u0127\u029c\u0129\u029e\001\002\000\006\u010b\uff3f\u0110\uff3f" +
    "\001\002\000\006\u010b\uff3e\u0110\uff3e\001\002\000\006\u010b" +
    "\uff3d\u0110\uff3d\001\002\000\006\u010b\uff3b\u0110\uff3b\001\002" +
    "\000\006\u010b\u02a9\u0110\uff39\001\002\000\004\u0110\u02a2\001" +
    "\002\000\006\u010b\uff3c\u0110\uff3c\001\002\000\010\325\uff35" +
    "\u010a\uff35\u010b\u02a3\001\002\000\004\u010f\u02a5\001\002\000" +
    "\006\325\uff38\u010a\uff38\001\002\000\014\233\u029b\u0123\u02a1" +
    "\u0126\u029d\u0127\u029c\u0129\u029e\001\002\000\004\u0110\u02a7\001" +
    "\002\000\010\325\uff35\u010a\uff35\u010b\u02a3\001\002\000\006" +
    "\325\uff36\u010a\uff36\001\002\000\014\233\u029b\u0123\u02a1\u0126" +
    "\u029d\u0127\u029c\u0129\u029e\001\002\000\004\u0110\uff40\001\002" +
    "\000\006\u010b\u02a9\u0110\uff39\001\002\000\004\u0110\uff3a\001" +
    "\002\000\006\325\uff37\u010a\uff37\001\002\000\006\325\uff1f" +
    "\u010a\uff1f\001\002\000\006\325\uff21\u010a\uff21\001\002\000" +
    "\006\325\uff20\u010a\uff20\001\002\000\006\325\uff1d\u010a\uff1d" +
    "\001\002\000\006\325\uff23\u010a\uff23\001\002\000\006\325" +
    "\uff22\u010a\uff22\001\002\000\006\u010d\047\u0128\046\001\002" +
    "\000\006\u010d\047\u0128\046\001\002\000\010\126\ufefa\132" +
    "\ufefa\212\ufefa\001\002\000\010\126\u014a\132\ufeb8\212\u0149" +
    "\001\002\000\006\u010d\047\u0128\046\001\002\000\006\u010d" +
    "\047\u0128\046\001\002\000\006\325\uff1c\u010a\uff1c\001\002" +
    "\000\006\325\uff1e\u010a\uff1e\001\002\000\004\u010f\u02bd\001" +
    "\002\000\022\052\ufebe\115\ufebe\132\u013f\150\u0140\243\ufebe" +
    "\314\ufebe\u010d\047\u0128\046\001\002\000\006\u010b\u01f5\u0110" +
    "\ufee1\001\002\000\004\u0110\u02c0\001\002\000\010\237\u02c2" +
    "\325\ufeee\u010a\ufeee\001\002\000\006\325\ufef0\u010a\ufef0\001" +
    "\002\000\004\314\u02c3\001\002\000\006\325\ufeef\u010a\ufeef" +
    "\001\002\000\004\051\u02c5\001\002\000\004\133\007\001" +
    "\002\000\006\325\ufefc\u010a\ufefc\001\002\000\004\132\u02c8" +
    "\001\002\000\006\u010d\047\u0128\046\001\002\000\004\237" +
    "\u02ca\001\002\000\006\u010d\047\u0128\046\001\002\000\004" +
    "\u010f\u02cd\001\002\000\014\237\ufef3\304\ufef3\323\u02d8\325" +
    "\ufef3\u010a\ufef3\001\002\000\006\u010d\047\u0128\046\001\002" +
    "\000\012\054\u014f\244\u0150\u010b\uff61\u0110\uff61\001\002\000" +
    "\004\u0110\u02d0\001\002\000\014\237\ufef8\304\ufef8\323\ufef8" +
    "\325\ufef8\u010a\ufef8\001\002\000\006\u010b\u02d2\u0110\ufef5\001" +
    "\002\000\006\u010d\047\u0128\046\001\002\000\004\u0110\ufef7" +
    "\001\002\000\012\054\u014f\244\u0150\u010b\uff61\u0110\uff61\001" +
    "\002\000\006\u010b\u02d2\u0110\ufef5\001\002\000\004\u0110\ufef6" +
    "\001\002\000\012\237\uff6e\304\134\325\uff6e\u010a\uff6e\001" +
    "\002\000\004\u010f\u0121\001\002\000\012\237\ufef4\304\ufef4" +
    "\325\ufef4\u010a\ufef4\001\002\000\010\237\u02db\325\ufef1\u010a" +
    "\ufef1\001\002\000\006\u010d\047\u0128\046\001\002\000\006" +
    "\325\ufefb\u010a\ufefb\001\002\000\004\u010f\u02de\001\002\000" +
    "\006\u010d\047\u0128\046\001\002\000\004\u0110\u02e0\001\002" +
    "\000\006\325\ufef2\u010a\ufef2\001\002\000\006\325\uff1b\u010a" +
    "\uff1b\001\002\000\012\134\uff17\237\u02e4\325\uff17\u010a\uff17" +
    "\001\002\000\006\325\uff1a\u010a\uff1a\001\002\000\006\314" +
    "\u02e9\u010f\uff13\001\002\000\010\134\u02e7\325\uff15\u010a\uff15" +
    "\001\002\000\006\325\uff19\u010a\uff19\001\002\000\006\u010d" +
    "\047\u0128\046\001\002\000\006\325\uff16\u010a\uff16\001\002" +
    "\000\004\u010f\uff14\001\002\000\004\u010f\u02ec\001\002\000" +
    "\012\134\uff11\325\uff11\u010a\uff11\u010b\u0313\001\002\000\004" +
    "\372\u02ee\001\002\000\010\134\uff18\325\uff18\u010a\uff18\001" +
    "\002\000\004\u0122\u02ef\001\002\000\004\u0123\u02f0\001\002" +
    "\000\004\u010b\u02f1\001\002\000\006\040\u02f4\371\u02f2\001" +
    "\002\000\004\u0122\uff0f\001\002\000\004\u0122\u02f5\001\002" +
    "\000\004\u0122\uff0e\001\002\000\004\u0123\u02f6\001\002\000" +
    "\006\u010b\u02f7\u0110\uff0c\001\002\000\010\373\u0300\374\u02fe" +
    "\375\u02fc\001\002\000\004\u0110\u02f9\001\002\000\012\134" +
    "\uff10\325\uff10\u010a\uff10\u010b\uff10\001\002\000\006\u010b\uff0b" +
    "\u0110\uff0b\001\002\000\006\u010b\u02f7\u0110\uff0c\001\002\000" +
    "\004\u0122\u030d\001\002\000\006\u010b\uff09\u0110\uff09\001\002" +
    "\000\004\u0122\u0308\001\002\000\006\u010b\uff0a\u0110\uff0a\001" +
    "\002\000\004\u0122\u0301\001\002\000\004\u0127\u0302\001\002" +
    "\000\012\333\u0305\334\u0306\335\u0304\336\u0307\001\002\000" +
    "\006\u010b\uff08\u0110\uff08\001\002\000\006\u010b\uff04\u0110\uff04" +
    "\001\002\000\006\u010b\uff07\u0110\uff07\001\002\000\006\u010b" +
    "\uff05\u0110\uff05\001\002\000\006\u010b\uff06\u0110\uff06\001\002" +
    "\000\006\376\u030b\u0127\u0309\001\002\000\012\333\u0305\334" +
    "\u0306\335\u0304\336\u0307\001\002\000\006\u010b\uff03\u0110\uff03" +
    "\001\002\000\006\u010b\uff01\u0110\uff01\001\002\000\006\u010b" +
    "\uff02\u0110\uff02\001\002\000\004\u0127\u030e\001\002\000\020" +
    "\333\u0305\334\u0306\335\u0304\336\u0307\u0109\u0311\u010b\ufefd\u0110" +
    "\ufefd\001\002\000\006\u010b\uff00\u0110\uff00\001\002\000\006" +
    "\u010b\ufeff\u0110\ufeff\001\002\000\006\u010b\ufefe\u0110\ufefe\001" +
    "\002\000\004\u0110\uff0d\001\002\000\004\u010f\u02ec\001\002" +
    "\000\010\134\uff12\325\uff12\u010a\uff12\001\002\000\016\325" +
    "\ufe70\372\ufe70\u010a\ufe70\u010d\ufe70\u0116\ufe70\u0128\ufe70\001\002" +
    "\000\010\325\ufe76\372\u0318\u010a\ufe76\001\002\000\016\325" +
    "\ufe71\372\ufe71\u010a\ufe71\u010d\ufe71\u0116\ufe71\u0128\ufe71\001\002" +
    "\000\010\312\u031a\325\ufe74\u010a\ufe74\001\002\000\006\325" +
    "\ufe78\u010a\ufe78\001\002\000\004\023\u031c\001\002\000\006" +
    "\325\ufe77\u010a\ufe77\001\002\000\010\325\ufe72\u010a\ufe72\u0123" +
    "\u031e\001\002\000\006\325\ufe75\u010a\ufe75\001\002\000\006" +
    "\325\ufe73\u010a\ufe73\001\002\000\006\325\ufe67\u010a\ufe67\001" +
    "\002\000\014\325\ufe6b\u010a\ufe6b\u010d\047\u0116\u021e\u0128\046" +
    "\001\002\000\006\325\ufe6d\u010a\ufe6d\001\002\000\006\325" +
    "\ufe66\u010a\ufe66\001\002\000\006\325\ufe6c\u010a\ufe6c\001\002" +
    "\000\006\325\ufe6a\u010a\ufe6a\001\002\000\014\325\ufe6b\u010a" +
    "\ufe6b\u010d\047\u0116\u021e\u0128\046\001\002\000\006\325\ufe69" +
    "\u010a\ufe69\001\002\000\006\u010d\047\u0128\046\001\002\000" +
    "\006\325\uffa8\u010a\uffa8\001\002\000\004\002\001\001\002" +
    "\000\040\002\ufffe\003\034\037\030\065\023\106\021\122" +
    "\006\133\007\140\025\142\022\167\024\227\012\230\043" +
    "\236\040\251\041\263\031\001\002\000\004\002\000\001" +
    "\002\000\004\213\uff6b\001\002\000\004\213\uff6c\001\002" +
    "\000\004\213\112\001\002\000\036\220\161\326\143\327" +
    "\154\330\162\331\160\332\155\u0107\u0331\u010d\047\u010f\157" +
    "\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156\001\002\000" +
    "\036\046\uffa5\051\u0338\063\uffa5\102\uffa5\105\uffa5\267\uffa5" +
    "\304\uffa5\325\uffa5\u010a\uffa5\u010b\uffa5\u010d\047\u0110\uffa5\u0123" +
    "\u033a\u0128\046\001\002\000\026\046\uff4a\063\uff4a\102\uff4a" +
    "\105\uff4a\267\uff4a\304\uff4a\325\uff4a\u010a\uff4a\u010b\u0369\u0110" +
    "\uff4a\001\002\000\024\046\uff59\063\u0334\102\uff59\105\uff59" +
    "\267\uff59\304\uff59\325\uff59\u010a\uff59\u0110\uff59\001\002\000" +
    "\022\046\uff6e\102\uff6e\105\uff6e\267\uff6e\304\134\325\uff6e" +
    "\u010a\uff6e\u0110\uff6e\001\002\000\006\u010d\047\u0128\046\001" +
    "\002\000\046\046\uffa5\051\u0338\066\uffa5\102\uffa5\103\uffa5" +
    "\105\uffa5\135\uffa5\154\uffa5\165\uffa5\267\uffa5\304\uffa5\325" +
    "\uffa5\u010a\uffa5\u010b\uffa5\u010d\047\u0110\uffa5\u0123\u033a\u0128\046" +
    "\001\002\000\042\046\uffa4\063\uffa4\066\uffa4\102\uffa4\103" +
    "\uffa4\105\uffa4\135\uffa4\154\uffa4\165\uffa4\237\uffa4\267\uffa4" +
    "\304\uffa4\325\uffa4\u010a\uffa4\u010b\uffa4\u0110\uffa4\001\002\000" +
    "\036\046\uff55\066\u0340\102\uff55\103\u033f\105\uff55\135\u033d" +
    "\154\uff50\165\u033c\267\uff55\304\uff55\325\uff55\u010a\uff55\u010b" +
    "\uff55\u0110\uff55\001\002\000\010\u010d\047\u0123\u033a\u0128\046" +
    "\001\002\000\042\046\uffa6\063\uffa6\066\uffa6\102\uffa6\103" +
    "\uffa6\105\uffa6\135\uffa6\154\uffa6\165\uffa6\237\uffa6\267\uffa6" +
    "\304\uffa6\325\uffa6\u010a\uffa6\u010b\uffa6\u0110\uffa6\001\002\000" +
    "\042\046\uffa3\063\uffa3\066\uffa3\102\uffa3\103\uffa3\105\uffa3" +
    "\135\uffa3\154\uffa3\165\uffa3\237\uffa3\267\uffa3\304\uffa3\325" +
    "\uffa3\u010a\uffa3\u010b\uffa3\u0110\uffa3\001\002\000\042\046\uffa7" +
    "\063\uffa7\066\uffa7\102\uffa7\103\uffa7\105\uffa7\135\uffa7\154" +
    "\uffa7\165\uffa7\237\uffa7\267\uffa7\304\uffa7\325\uffa7\u010a\uffa7" +
    "\u010b\uffa7\u0110\uffa7\001\002\000\006\154\uff4e\272\u0348\001" +
    "\002\000\004\154\uff54\001\002\000\024\046\uff57\102\uff57" +
    "\105\uff57\267\uff57\304\uff57\325\uff57\u010a\uff57\u010b\u034b\u0110" +
    "\uff57\001\002\000\006\154\uff4e\272\u0348\001\002\000\006" +
    "\154\uff4e\272\u0348\001\002\000\004\154\u0342\001\002\000" +
    "\006\u010d\047\u0128\046\001\002\000\014\051\u0338\237\uffa5" +
    "\u010d\047\u0123\u033a\u0128\046\001\002\000\004\237\u0345\001" +
    "\002\000\072\046\uff82\066\uff82\102\uff82\103\uff82\105\uff82" +
    "\135\uff82\154\uff82\165\uff82\215\137\220\uff87\267\uff82\304" +
    "\uff82\325\uff82\326\uff87\327\uff87\330\uff87\331\uff87\332\uff87" +
    "\u010a\uff82\u010b\uff82\u010d\uff87\u010f\uff87\u0110\uff82\u0123\uff87\u0126" +
    "\uff87\u0127\uff87\u0128\uff87\u0129\uff87\001\002\000\036\046\uff55" +
    "\066\u0340\102\uff55\103\u033f\105\uff55\135\u033d\154\uff50\165" +
    "\u033c\267\uff55\304\uff55\325\uff55\u010a\uff55\u010b\uff55\u0110\uff55" +
    "\001\002\000\024\046\uff56\102\uff56\105\uff56\267\uff56\304" +
    "\uff56\325\uff56\u010a\uff56\u010b\uff56\u0110\uff56\001\002\000\004" +
    "\154\uff4f\001\002\000\004\154\uff51\001\002\000\004\154" +
    "\uff53\001\002\000\006\u010d\047\u0128\046\001\002\000\022" +
    "\046\uff5a\102\uff5a\105\uff5a\267\uff5a\304\uff5a\325\uff5a\u010a" +
    "\uff5a\u0110\uff5a\001\002\000\044\046\uffa5\051\u0338\066\uffa5" +
    "\102\uffa5\103\uffa5\105\uffa5\135\uffa5\154\uffa5\165\uffa5\267" +
    "\uffa5\304\uffa5\325\uffa5\u010a\uffa5\u010d\047\u0110\uffa5\u0123\u033a" +
    "\u0128\046\001\002\000\034\046\uff55\066\u0340\102\uff55\103" +
    "\u033f\105\uff55\135\u033d\154\uff50\165\u033c\267\uff55\304\uff55" +
    "\325\uff55\u010a\uff55\u0110\uff55\001\002\000\022\046\uff58\102" +
    "\uff58\105\uff58\267\uff58\304\uff58\325\uff58\u010a\uff58\u0110\uff58" +
    "\001\002\000\004\154\uff52\001\002\000\020\046\uff5d\102" +
    "\u0352\105\uff5d\267\uff5d\325\uff5d\u010a\uff5d\u0110\uff5d\001\002" +
    "\000\004\104\u0363\001\002\000\016\046\uff68\105\u0354\267" +
    "\uff68\325\uff68\u010a\uff68\u0110\uff68\001\002\000\050\046\uff82" +
    "\215\137\220\uff87\267\uff82\325\uff82\326\uff87\327\uff87\330" +
    "\uff87\331\uff87\332\uff87\u010a\uff82\u010d\uff87\u010f\uff87\u0110\uff82" +
    "\u0123\uff87\u0126\uff87\u0127\uff87\u0128\uff87\u0129\uff87\001\002\000" +
    "\014\046\uff66\267\u0356\325\uff66\u010a\uff66\u0110\uff66\001\002" +
    "\000\004\104\u0358\001\002\000\012\046\uff6d\325\uff6d\u010a" +
    "\uff6d\u0110\uff6d\001\002\000\034\220\161\326\143\327\154" +
    "\330\162\331\160\332\155\u010d\047\u010f\157\u0123\141\u0126" +
    "\145\u0127\146\u0128\046\u0129\156\001\002\000\052\046\uff64" +
    "\054\uff64\134\u035b\220\uff64\244\uff64\325\uff64\326\uff64\327" +
    "\uff64\330\uff64\331\uff64\332\uff64\u010a\uff64\u010d\uff64\u010f\uff64" +
    "\u0110\uff64\u0123\uff64\u0126\uff64\u0127\uff64\u0128\uff64\u0129\uff64\001" +
    "\002\000\050\046\uff61\054\u014f\220\uff61\244\u0150\325\uff61" +
    "\326\uff61\327\uff61\330\uff61\331\uff61\332\uff61\u010a\uff61\u010d" +
    "\uff61\u010f\uff61\u0110\uff61\u0123\uff61\u0126\uff61\u0127\uff61\u0128\uff61" +
    "\u0129\uff61\001\002\000\006\u010d\047\u0128\046\001\002\000" +
    "\050\046\uff65\054\uff65\220\uff65\244\uff65\325\uff65\326\uff65" +
    "\327\uff65\330\uff65\331\uff65\332\uff65\u010a\uff65\u010d\uff65\u010f" +
    "\uff65\u0110\uff65\u0123\uff65\u0126\uff65\u0127\uff65\u0128\uff65\u0129\uff65" +
    "\001\002\000\044\046\uff5f\220\161\325\uff5f\326\143\327" +
    "\154\330\162\331\160\332\155\u010a\uff5f\u010d\047\u010f\157" +
    "\u0110\uff5f\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156\001" +
    "\002\000\020\046\uff64\054\uff64\134\u035b\244\uff64\325\uff64" +
    "\u010a\uff64\u0110\uff64\001\002\000\012\046\uff67\325\uff67\u010a" +
    "\uff67\u0110\uff67\001\002\000\016\046\uff61\054\u014f\244\u0150" +
    "\325\uff61\u010a\uff61\u0110\uff61\001\002\000\012\046\uff60\325" +
    "\uff60\u010a\uff60\u0110\uff60\001\002\000\014\046\uff69\267\uff69" +
    "\325\uff69\u010a\uff69\u0110\uff69\001\002\000\034\220\161\326" +
    "\143\327\154\330\162\331\160\332\155\u010d\047\u010f\157" +
    "\u0123\141\u0126\145\u0127\146\u0128\046\u0129\156\001\002\000" +
    "\020\046\uff5b\105\uff5b\267\uff5b\325\uff5b\u010a\uff5b\u010b\u0365" +
    "\u0110\uff5b\001\002\000\034\220\161\326\143\327\154\330" +
    "\162\331\160\332\155\u010d\047\u010f\157\u0123\141\u0126\145" +
    "\u0127\146\u0128\046\u0129\156\001\002\000\016\046\uff5e\105" +
    "\uff5e\267\uff5e\325\uff5e\u010a\uff5e\u0110\uff5e\001\002\000\020" +
    "\046\uff5b\105\uff5b\267\uff5b\325\uff5b\u010a\uff5b\u010b\u0365\u0110" +
    "\uff5b\001\002\000\016\046\uff5c\105\uff5c\267\uff5c\325\uff5c" +
    "\u010a\uff5c\u0110\uff5c\001\002\000\034\220\161\326\143\327" +
    "\154\330\162\331\160\332\155\u010d\047\u010f\157\u0123\141" +
    "\u0126\145\u0127\146\u0128\046\u0129\156\001\002\000\024\046" +
    "\uff4c\063\uff4c\102\uff4c\105\uff4c\267\uff4c\304\uff4c\325\uff4c" +
    "\u010a\uff4c\u0110\uff4c\001\002\000\036\046\uffa5\051\u0338\063" +
    "\uffa5\102\uffa5\105\uffa5\267\uffa5\304\uffa5\325\uffa5\u010a\uffa5" +
    "\u010b\uffa5\u010d\047\u0110\uffa5\u0123\u033a\u0128\046\001\002\000" +
    "\026\046\uff4a\063\uff4a\102\uff4a\105\uff4a\267\uff4a\304\uff4a" +
    "\325\uff4a\u010a\uff4a\u010b\u0369\u0110\uff4a\001\002\000\024\046" +
    "\uff4b\063\uff4b\102\uff4b\105\uff4b\267\uff4b\304\uff4b\325\uff4b" +
    "\u010a\uff4b\u0110\uff4b\001\002\000\026\046\uff4a\063\uff4a\102" +
    "\uff4a\105\uff4a\267\uff4a\304\uff4a\325\uff4a\u010a\uff4a\u010b\u0369" +
    "\u0110\uff4a\001\002\000\024\046\uff4d\063\uff4d\102\uff4d\105" +
    "\uff4d\267\uff4d\304\uff4d\325\uff4d\u010a\uff4d\u0110\uff4d\001\002" +
    "\000\010\u010d\047\u0116\u021e\u0128\046\001\002\000\006\325" +
    "\ufe6f\u010a\ufe6f\001\002\000\006\325\ufe64\u010a\ufe64\001\002" +
    "\000\006\325\ufe6e\u010a\ufe6e\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0371\000\050\002\010\003\007\004\016\005\012\006" +
    "\034\007\032\027\026\043\004\070\025\113\043\123\013" +
    "\131\014\136\041\240\015\264\035\273\017\275\036\277" +
    "\003\345\031\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\270\u036f\001\001\000\004\071\u032d\001\001\000" +
    "\004\010\u0329\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\270\u0324\274\u0323\001\001\000\006\270\u031f\276\u031e\001" +
    "\001\000\004\270\u0315\001\001\000\026\137\u02b1\140\u02ba" +
    "\141\u02ad\162\u02b0\163\u02b9\164\u02b6\172\u02af\300\u0111\301" +
    "\u02b2\326\u02ae\001\001\000\004\057\u0290\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\241\u0115\242\u011b\245" +
    "\u0116\246\u0119\250\u010f\300\u0111\301\u0113\326\u0110\001\001" +
    "\000\016\030\352\031\345\033\357\035\353\036\351\040" +
    "\356\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\342\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\057\320\001\001\000\004\057\110" +
    "\001\001\000\002\001\001\000\004\011\044\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\346" +
    "\054\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\347\056\001\001\000\002\001\001\000\004\350\060\001" +
    "\001\000\002\001\001\000\004\351\065\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\352\071\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\070\074\001\001\000\004\353\075\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\354\101\001" +
    "\001\000\006\011\102\111\103\001\001\000\002\001\001" +
    "\000\004\112\104\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\106\001\001\000\004\112\107\001\001" +
    "\000\002\001\001\000\006\011\117\014\120\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\060\116\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\015\311\001\001\000\002\001\001\000\006\011\122" +
    "\132\123\001\001\000\002\001\001\000\004\135\124\001" +
    "\001\000\004\067\134\001\001\000\006\011\117\014\126" +
    "\001\001\000\004\127\127\001\001\000\002\001\001\000" +
    "\006\011\117\014\131\001\001\000\004\127\132\001\001" +
    "\000\002\001\001\000\006\056\135\061\137\001\001\000" +
    "\002\001\001\000\020\011\146\016\143\046\141\050\152" +
    "\052\150\053\147\063\151\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\056\233\064\244" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\017\225\001\001\000\002" +
    "\001\001\000\004\051\216\001\001\000\004\062\211\001" +
    "\001\000\004\047\202\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\011\146\016\143\046" +
    "\174\050\152\052\150\053\147\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\011\146\016" +
    "\165\054\163\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\011\146\016\165" +
    "\054\173\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\011\146\016\165\054\177\001\001" +
    "\000\002\001\001\000\010\011\146\016\165\054\201\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\011\146" +
    "\016\143\050\207\052\150\053\147\001\001\000\014\011" +
    "\146\016\143\050\205\052\150\053\147\001\001\000\004" +
    "\047\206\001\001\000\002\001\001\000\004\047\210\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\056\135" +
    "\061\215\001\001\000\006\056\135\061\214\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\011\146\016\143\052\223\053\147\001\001\000\012\011" +
    "\146\016\143\052\221\053\147\001\001\000\004\051\222" +
    "\001\001\000\002\001\001\000\004\051\224\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\011\117\014\227" +
    "\001\001\000\002\001\001\000\010\011\146\016\165\054" +
    "\231\001\001\000\002\001\001\000\016\011\146\016\143" +
    "\046\301\050\152\052\150\053\147\001\001\000\004\065" +
    "\265\001\001\000\016\011\146\016\143\046\261\050\152" +
    "\052\150\053\147\001\001\000\016\011\146\016\143\046" +
    "\260\050\152\052\150\053\147\001\001\000\016\011\146" +
    "\016\143\046\257\050\152\052\150\053\147\001\001\000" +
    "\016\011\146\016\143\046\256\050\152\052\150\053\147" +
    "\001\001\000\016\011\146\016\143\046\255\050\152\052" +
    "\150\053\147\001\001\000\016\011\146\016\143\046\254" +
    "\050\152\052\150\053\147\001\001\000\016\011\146\016" +
    "\143\046\253\050\152\052\150\053\147\001\001\000\016" +
    "\011\146\016\143\046\252\050\152\052\150\053\147\001" +
    "\001\000\002\001\001\000\004\056\250\001\001\000\016" +
    "\011\146\016\143\046\247\050\152\052\150\053\147\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\056\135\061\300\001" +
    "\001\000\002\001\001\000\006\056\135\061\266\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\056\135\061" +
    "\270\001\001\000\002\001\001\000\016\011\146\016\143" +
    "\046\272\050\152\052\150\053\147\001\001\000\004\055" +
    "\274\001\001\000\016\011\146\016\143\046\276\050\152" +
    "\052\150\053\147\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\055\277\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\011\146\016\143\046" +
    "\303\050\152\052\150\053\147\133\304\001\001\000\002" +
    "\001\001\000\004\134\307\001\001\000\002\001\001\000" +
    "\006\011\122\132\310\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\011\313\012\314\001" +
    "\001\000\004\013\315\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\317\001\001\000\002\001\001\000" +
    "\004\124\321\001\001\000\010\011\117\014\323\125\324" +
    "\001\001\000\002\001\001\000\004\126\334\001\001\000" +
    "\002\001\001\000\004\130\326\001\001\000\002\001\001" +
    "\000\004\011\330\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\067\340" +
    "\001\001\000\006\011\117\014\336\001\001\000\004\127" +
    "\337\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\050\002\344\003\007\004\016\005\012\006" +
    "\034\007\032\027\026\043\004\070\025\113\043\123\013" +
    "\131\014\136\041\240\015\264\035\273\017\275\036\277" +
    "\003\345\031\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\020\u0109\001\001\000\004\020" +
    "\u0100\001\001\000\004\020\376\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\020\370\001" +
    "\001\000\004\020\361\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\011\313\012\362\001" +
    "\001\000\004\034\363\001\001\000\002\001\001\000\006" +
    "\011\313\012\365\001\001\000\004\034\366\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\011\117\014\371" +
    "\001\001\000\004\032\372\001\001\000\002\001\001\000" +
    "\006\011\117\014\374\001\001\000\004\032\375\001\001" +
    "\000\002\001\001\000\004\011\377\001\001\000\002\001" +
    "\001\000\006\011\u0101\041\u0102\001\001\000\002\001\001" +
    "\000\004\042\u0104\001\001\000\006\011\u0101\041\u0105\001" +
    "\001\000\002\001\001\000\004\042\u0106\001\001\000\002" +
    "\001\001\000\006\011\117\014\u0108\001\001\000\002\001" +
    "\001\000\004\011\u010a\001\001\000\004\037\u010c\001\001" +
    "\000\004\011\u010d\001\001\000\002\001\001\000\004\037" +
    "\u010e\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\302\u0217\001\001\000\006\011\u020b\243" +
    "\u020d\001\001\000\002\001\001\000\004\011\u020a\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\011\117\014" +
    "\u0125\001\001\000\006\011\313\012\u011d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\110\u011e\247\u011f\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\011\102\111\u0121\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\070\u0124\001\001" +
    "\000\002\001\001\000\010\251\u0129\252\u0126\257\u012a\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\011\u0140" +
    "\175\u013d\202\u013a\217\u0141\231\u013b\237\u013c\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\260\u012f\262\u012e" +
    "\001\001\000\004\020\u0138\001\001\000\002\001\001\000" +
    "\004\020\u0136\001\001\000\004\261\u0131\001\001\000\012" +
    "\011\u0132\260\u0134\262\u012e\263\u0133\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\261\u0135\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\u0137\001\001\000" +
    "\002\001\001\000\004\011\u0139\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\176\u01f5\001\001\000\004\011\u01f1\001\001\000\004" +
    "\011\u01f0\001\001\000\010\022\u0195\023\u0193\024\u0192\001" +
    "\001\000\004\232\u0145\001\001\000\002\001\001\000\004" +
    "\174\u015a\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\221\u0147\001\001\000\004\233\u014a\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\u014c\001\001\000\004\075\u014d\001\001\000\004\236\u0150" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\u0152\001\001\000\004\075\u0153\001\001" +
    "\000\004\236\u0154\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\221\u0157\001\001\000\004\233\u0158\001\001" +
    "\000\002\001\001\000\004\177\u015f\001\001\000\002\001" +
    "\001\000\006\056\135\061\u015c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\200\u0163\001\001\000\004\201\u0164" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\234\u0167\001\001\000\002\001\001\000\004" +
    "\011\u0169\001\001\000\004\235\u016a\001\001\000\002\001" +
    "\001\000\004\011\u016c\001\001\000\004\235\u016d\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\011\313\012" +
    "\u0170\001\001\000\004\223\u0172\001\001\000\004\011\u0182" +
    "\001\001\000\004\224\u0174\001\001\000\004\225\u0180\001" +
    "\001\000\004\225\u0176\001\001\000\004\226\u017f\001\001" +
    "\000\004\174\u017e\001\001\000\004\226\u0178\001\001\000" +
    "\002\001\001\000\004\227\u017c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\224\u0181\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\024\u01ee\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\025\u01e8" +
    "\001\001\000\002\001\001\000\004\203\u01a3\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\u01e6\001" +
    "\001\000\016\210\u01a7\211\u01a6\213\u01a5\220\u01ae\222\u01ad" +
    "\230\u01ac\001\001\000\004\207\u01e2\001\001\000\004\214" +
    "\u01d8\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\212\u01c9\001\001\000\004\011\u01c4\001" +
    "\001\000\006\216\u01c3\217\u01b9\001\001\000\004\221\u01c2" +
    "\001\001\000\002\001\001\000\006\216\u01ba\217\u01b9\001" +
    "\001\000\002\001\001\000\004\174\u01b5\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\056\135\061\u01b7\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\220\u01bb\222" +
    "\u01ad\230\u01ac\001\001\000\002\001\001\000\006\216\u01bc" +
    "\217\u01b9\001\001\000\002\001\001\000\006\011\313\012" +
    "\u01be\001\001\000\004\223\u01bf\001\001\000\004\224\u01c0" +
    "\001\001\000\004\174\u01c1\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\211\u01c5\213\u01a5" +
    "\220\u01ae\222\u01ad\230\u01ac\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\204\u01cd\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\207\u01d3\001\001\000\004\174\u01ce\001\001\000\004" +
    "\206\u01d0\001\001\000\002\001\001\000\006\216\u01d1\217" +
    "\u01b9\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\206\u01e0\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\215\u01de\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\216\u01e1\217\u01b9\001\001\000\002\001" +
    "\001\000\004\174\u01e3\001\001\000\004\206\u01e4\001\001" +
    "\000\006\216\u01e5\217\u01b9\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\026\u01eb\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\221\u01f2\001\001\000" +
    "\004\233\u01f3\001\001\000\002\001\001\000\016\011\u0140" +
    "\175\u01f6\202\u013a\217\u0141\231\u013b\237\u013c\001\001\000" +
    "\002\001\001\000\004\176\u01f7\001\001\000\002\001\001" +
    "\000\004\011\u01f9\001\001\000\016\022\u01fd\023\u0193\024" +
    "\u0192\253\u01fc\254\u01fb\255\u01fa\001\001\000\004\256\u0207" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\203" +
    "\u0200\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\205\u0201\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\244\u0210\001\001\000\004\011\u0213\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\011\313\012\u0255\001\001\000\006\011\313" +
    "\012\u0218\001\001\000\004\303\u021a\001\001\000\002\001" +
    "\001\000\010\021\u021e\304\u021c\305\u021b\001\001\000\002" +
    "\001\001\000\004\313\u0231\001\001\000\002\001\001\000" +
    "\010\011\u0221\024\u0220\307\u0222\001\001\000\002\001\001" +
    "\000\004\310\u0227\001\001\000\002\001\001\000\004\306" +
    "\u0223\001\001\000\002\001\001\000\006\021\u021e\305\u0225" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\311" +
    "\u022d\312\u022c\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\312\u022f\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\321\u0244\001\001\000\010\314" +
    "\u0234\315\u0233\317\u0236\001\001\000\004\316\u0241\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\011\u023d\320\u023e\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\314\u0242\315\u0233\317\u0236\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\004\u0246\070\025\113\043\123\013\131\014\322" +
    "\u0247\323\u0248\001\001\000\004\010\u024c\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\004\u0246\070\025\113" +
    "\043\123\013\131\014\323\u024a\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\004\u024d\070\025\113\043\123" +
    "\013\131\014\324\u024e\001\001\000\004\010\u024f\001\001" +
    "\000\002\001\001\000\016\004\u0250\070\025\113\043\123" +
    "\013\131\014\325\u0251\001\001\000\004\010\u0252\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\021\u025a\327\u0257" +
    "\330\u0259\331\u0258\001\001\000\002\001\001\000\004\332" +
    "\u0262\001\001\000\002\001\001\000\004\333\u025c\001\001" +
    "\000\002\001\001\000\004\024\u025d\001\001\000\004\310" +
    "\u025e\001\001\000\004\334\u025f\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\021\u025a\330\u0263\331\u0258\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\024\u0268\335\u0267\336\u026a\343\u0266\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\337\u0286\001\001" +
    "\000\004\337\u026b\001\001\000\002\001\001\000\004\333" +
    "\u027f\001\001\000\004\341\u0272\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\340\u0273\001\001\000\002\001\001" +
    "\000\004\337\u0275\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\011\u023d\320\u027e\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\070\u0283\342\u0281\001\001\000\002\001" +
    "\001\000\004\070\u0284\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\333\u0287\001\001\000" +
    "\002\001\001\000\014\004\u0289\070\025\113\043\123\013" +
    "\131\014\001\001\000\004\010\u028a\001\001\000\002\001" +
    "\001\000\006\021\u028e\344\u028d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\114\u0291\001\001\000\006\011\117\014\u0293\001\001" +
    "\000\002\001\001\000\006\110\u0294\115\u0295\001\001\000" +
    "\002\001\001\000\004\121\u0298\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\116\u029f\117" +
    "\u029e\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\120\u02a9\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\122\u02a3\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\116\u02a5\117" +
    "\u029e\001\001\000\002\001\001\000\004\122\u02a7\001\001" +
    "\000\002\001\001\000\004\117\u02aa\001\001\000\002\001" +
    "\001\000\004\120\u02ab\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\u02e1\001\001\000\004\011\u02e0\001\001\000" +
    "\002\001\001\000\004\221\u02c6\001\001\000\006\011\313" +
    "\012\u02c3\001\001\000\006\011\117\014\u02bb\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\011\u0140\175\u02bd\202\u013a\217\u0141\231\u013b\237\u013c\001" +
    "\001\000\004\176\u02be\001\001\000\002\001\001\000\004" +
    "\173\u02c0\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\070\u02c5\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\u02c8\001" +
    "\001\000\002\001\001\000\006\011\117\014\u02ca\001\001" +
    "\000\004\165\u02cb\001\001\000\004\170\u02d6\001\001\000" +
    "\006\011\u02cd\166\u02ce\001\001\000\004\075\u02d0\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\167\u02d2\001" +
    "\001\000\004\011\u02d3\001\001\000\002\001\001\000\004" +
    "\075\u02d4\001\001\000\004\167\u02d5\001\001\000\002\001" +
    "\001\000\004\067\u02d9\001\001\000\004\110\u02d8\001\001" +
    "\000\002\001\001\000\004\171\u02db\001\001\000\004\011" +
    "\u02dc\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\u02de\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\142\u02e2\143\u02e4\001\001\000\002" +
    "\001\001\000\004\145\u02e9\001\001\000\004\144\u02e5\001" +
    "\001\000\002\001\001\000\004\011\u02e7\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\146\u02ec\147\u02ea\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\150\u02f2\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\151\u02f7\001" +
    "\001\000\012\153\u02fa\154\u02f9\156\u02fe\160\u02fc\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\151\u0311\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\155\u0302\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\157\u0309\001\001\000\004\155\u030b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\155\u030f\161\u030e\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\146\u0313\147\u02ea\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\265\u0318\001\001\000" +
    "\002\001\001\000\004\266\u031a\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\267\u031c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\011\u0320\021\u0322\272\u0321\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\011\u0320\021\u0322\272\u0325\001\001\000\002\001" +
    "\001\000\006\011\117\014\u0327\001\001\000\002\001\001" +
    "\000\002\001\001\000\050\002\u032a\003\007\004\016\005" +
    "\012\006\034\007\032\027\026\043\004\070\025\113\043" +
    "\123\013\131\014\136\041\240\015\264\035\273\017\275" +
    "\036\277\003\345\031\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\057\u032e\001\001\000" +
    "\020\011\146\016\143\046\u032f\050\152\052\150\053\147" +
    "\106\u0331\001\001\000\010\011\u0335\044\u036d\045\u0338\001" +
    "\001\000\004\107\u0369\001\001\000\004\101\u0332\001\001" +
    "\000\004\067\u0350\001\001\000\006\011\117\014\u0334\001" +
    "\001\000\010\011\u0335\044\u0336\045\u0338\001\001\000\002" +
    "\001\001\000\006\103\u033d\104\u0340\001\001\000\006\011" +
    "\u0335\045\u033a\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\105\u034f\001\001\000\002\001" +
    "\001\000\004\102\u034b\001\001\000\004\105\u0349\001\001" +
    "\000\004\105\u0348\001\001\000\002\001\001\000\006\011" +
    "\117\014\u0342\001\001\000\010\011\u0335\044\u0343\045\u0338" +
    "\001\001\000\002\001\001\000\006\056\135\061\u0345\001" +
    "\001\000\006\103\u0346\104\u0340\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\011\117\014\u034c\001\001\000\002\001\001\000\010" +
    "\011\u0335\044\u034d\045\u0338\001\001\000\006\103\u034e\104" +
    "\u0340\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\077\u0352\001\001\000\002\001\001\000\004\072\u0354\001" +
    "\001\000\006\056\135\061\u0361\001\001\000\004\073\u0356" +
    "\001\001\000\002\001\001\000\002\001\001\000\016\011" +
    "\146\016\143\046\u0358\050\152\052\150\053\147\001\001" +
    "\000\004\074\u0359\001\001\000\004\075\u035c\001\001\000" +
    "\004\011\u035b\001\001\000\002\001\001\000\020\011\146" +
    "\016\143\046\u035d\050\152\052\150\053\147\076\u035e\001" +
    "\001\000\004\074\u035f\001\001\000\002\001\001\000\004" +
    "\075\u0360\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\011\146\016\143\046\u0363\050\152\052\150\053\147" +
    "\001\001\000\004\100\u0365\001\001\000\016\011\146\016" +
    "\143\046\u0366\050\152\052\150\053\147\001\001\000\002" +
    "\001\001\000\004\100\u0367\001\001\000\002\001\001\000" +
    "\016\011\146\016\143\046\u036a\050\152\052\150\053\147" +
    "\001\001\000\002\001\001\000\010\011\u0335\044\u036b\045" +
    "\u0338\001\001\000\004\107\u036c\001\001\000\002\001\001" +
    "\000\004\107\u036e\001\001\000\002\001\001\000\010\011" +
    "\u0370\021\u0372\271\u0371\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public String Er = "";
    private Symbol s;

    public final Class getSymbolContainer() {
        return sym.class;
    }

    public void syntax_error(Symbol s){
  	this.s=s; 
 	List<Integer> ids = expected_token_ids();
	LinkedList<String> idsNames = new LinkedList<String>();
	for (Integer esperado : ids){
            idsNames.add(symbl_name_from_id(esperado));
            idsNames.add(", ");
	}
       	Er = Er + ("Error de sintaxis en Token " + s.value + ", en columna " + (s.left+1) + ", en linea " + (s.right+1) + ", esperando tokens " + idsNames + "\n\n");
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        List<Integer> ids = expected_token_ids();
	LinkedList<String> idsNames = new LinkedList<String>();
	for (Integer esperado : ids){
            idsNames.add(symbl_name_from_id(esperado));
            idsNames.add(", ");
	}
       	Er = Er + ("Error de sintaxis en Token " + s.value + ", en columna " + (s.left+1) + ", en linea " + (s.right+1) + ", esperando tokens " + idsNames + "\n\n");   
    }
    
    public String symbl_name_from_id(int id){
	Field[] fields = getSymbolContainer().getFields();
	for(Field f : fields){
            try {
		if (f.getInt(null)==id)
                    return f.getName();
            } catch (IllegalArgumentException e) {
                //e.printStackTrace();
            } catch (IllegalAccessException e) {
                //e.printStackTrace();
            }
	}
	return "invalid symbol id";
    }

    public List<Integer> expected_token_ids() {
        List<Integer> ret = new LinkedList<Integer>();
	int parse_state = ((Symbol)stack.peek()).parse_state ;
	short[] row = action_tab[parse_state];
	for (int i = 0; i<row.length; i+=2){
	    if (row[i]==-1) continue;
            if (!validate_expected_symbol(row[i])) continue;
            ret.add(new Integer(row[i]));
	}
	return ret;
    }
    
    private boolean validate_expected_symbol(int id){
	short lhs,rhs_size;
	int act;
	try {
            virtual_parse_stack vstack = new virtual_parse_stack(stack);
            /* parse until we fail or get past the lookahead input */
            for (;;){
                /* look up the action from the current state (on top of stack) */
		act = get_action(vstack.top(), id);

                /* if its an error, we fail */
		if (act == 0) return false;

                /* > 0 encodes a shift */
		if (act > 0){
                    /* push the new state on the stack */
                    vstack.push(act-1);
                    /* advance simulated input, if we run off the end, we are done */
                    if (!advance_lookahead()) return true;
		}
                    /* < 0 encodes a reduce */
		else{
                    /* if this is a reduce with the start production we are done */
                    if ((-act)-1 == start_production())  return true;

		    /* get the lhs Symbol and the rhs size */
                    lhs = production_tab[(-act)-1][0];
                    rhs_size = production_tab[(-act)-1][1];
                    /* pop handle off the stack */
                    for (int i = 0; i < rhs_size; i++) vstack.pop();
                    vstack.push(get_reduce(vstack.top(), lhs));
		}
            }
	} catch (Exception e) {
            e.printStackTrace();
	}
	return true;
    }

    protected static final int _error_sync_size(){
	return 1;
    }

    public String obtenerErrores(){
        return Er;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // Cursor7 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor7",234, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // Cursor7 ::= OF ListaColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor7",234, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // Cursor6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor6",233, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // Cursor6 ::= FOR UPDATE Cursor7 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor6",233, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // Cursor5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor5",232, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // Cursor5 ::= TYPE_WARNING 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor5",232, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // Cursor4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",231, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // Cursor4 ::= OPTIMISTIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",231, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // Cursor4 ::= SCROLL_LOCKS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",231, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // Cursor4 ::= READ_ONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",231, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // Cursor3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",230, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // Cursor3 ::= FASTFORWARD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",230, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // Cursor3 ::= DYNAMIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",230, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // Cursor3 ::= KEYSET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",230, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // Cursor3 ::= STATIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",230, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // Cursor2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",229, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // Cursor2 ::= SCROLL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",229, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // Cursor2 ::= FORWARDONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",229, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // Cursor1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",228, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // Cursor1 ::= GLOBAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",228, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // Cursor1 ::= LOCAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",228, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // Cursor ::= DECLARE ID CURSOR Cursor1 Cursor2 Cursor3 Cursor4 Cursor5 FOR Select Cursor6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor",227, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // ReturnData1 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData1",226, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // ReturnData1 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData1",226, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // ReturnData ::= TipoDeDato3 ReturnTable1 AsWord BEGIN SentenciasDML Fin RETURN ReturnData1 END 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData",225, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // SelectOption ::= Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectOption",224, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // SelectOption ::= Aparentesis Select Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectOption",224, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // FunctionOption ::= EXECUTE AS ExecuteType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // FunctionOption ::= CALLED ON NULL INPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // FunctionOption ::= RETURNS NULL ON NULL INPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // FunctionOption ::= SCHEMABINDING 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // FunctionOption ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // ReturnTable2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable2",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // ReturnTable2 ::= Coma ReturnTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable2",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // ReturnTable1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable1",221, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // ReturnTable1 ::= WITH FunctionOption ReturnTable2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable1",221, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // ReturnTable ::= TABLE ReturnTable1 AsWord RETURN SelectOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable",220, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // ReturnType ::= ReturnData 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnType",219, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // ReturnType ::= ReturnTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnType",219, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // ReadOnlyWord ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReadOnlyWord",218, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // ReadOnlyWord ::= READONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReadOnlyWord",218, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // AsWord ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsWord",217, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // AsWord ::= AS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsWord",217, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // FunctionParam3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam3",216, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // FunctionParam3 ::= Coma FunctionParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam3",216, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // FunctionParam2 ::= Var AsWord TipoDeDato3 ProcedureDataType1 ReadOnlyWord 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam2",215, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // FunctionParam1 ::= FunctionParam2 FunctionParam3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam1",214, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // FunctionParam ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam",213, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // FunctionParam ::= FunctionParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam",213, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // Function ::= OrAlter FUNCTION IDL1 Aparentesis FunctionParam Cparentesis RETURNS ReturnType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Function",212, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // ProcedureStatement2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement2",211, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // ProcedureStatement2 ::= SentenciasDML Fin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement2",211, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // ProcedureStatement1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement1",210, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // ProcedureStatement1 ::= SentenciasDML Fin ProcedureStatement2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement1",210, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // ProcedureStatement ::= SentenciasDML Fin ProcedureStatement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement",209, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // BeginProcedure ::= ProcedureStatement 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BeginProcedure",208, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // BeginProcedure ::= BEGIN ProcedureStatement END 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BeginProcedure",208, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // ProcedureReplication ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureReplication",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // ProcedureReplication ::= FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureReplication",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // ExecuteType ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",206, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // ExecuteType ::= OWNER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",206, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // ExecuteType ::= SELF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",206, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // ExecuteType ::= CALLER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",206, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // Execute ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Execute",205, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // Execute ::= EXEC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Execute",205, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // ProcedureOption3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption3",204, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // ProcedureOption3 ::= Coma ProcedureOption1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption3",204, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // ProcedureOption2 ::= Execute AS ExecuteType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",203, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // ProcedureOption2 ::= RECOMPILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",203, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // ProcedureOption2 ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",203, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // ProcedureOption1 ::= ProcedureOption2 ProcedureOption3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption1",202, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // ProcedureOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption",201, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // ProcedureOption ::= WITH ProcedureOption1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption",201, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // ProcedureDataType3 ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType3",200, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // ProcedureDataType3 ::= OUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType3",200, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // ProcedureDataType2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType2",199, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // ProcedureDataType2 ::= ProcedureDataType3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType2",199, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // ProcedureDataType1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType1",198, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // ProcedureDataType1 ::= Igual DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType1",198, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // ProcedureDataType ::= ID READONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",197, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // ProcedureDataType ::= CURSOR VARYING ProcedureDataType3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",197, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // ProcedureDataType ::= TipoDeDato3 ProcedureDataType1 ProcedureDataType2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",197, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // ProcedureParam2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam2",196, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // ProcedureParam2 ::= Coma ProcedureParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam2",196, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // ProcedureParam1 ::= Var ProcedureDataType ProcedureParam2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam1",195, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // ProcedureParam ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam",194, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // ProcedureParam ::= ProcedureParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam",194, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // ProcedureNum ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureNum",193, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // ProcedureNum ::= PuntoYComa Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureNum",193, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // ProcedureName ::= PROCEDURE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureName",192, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // ProcedureName ::= PROC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureName",192, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // Procedure ::= OrAlter ProcedureName IDL1 ProcedureNum ProcedureParam ProcedureOption ProcedureReplication AS BeginProcedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Procedure",191, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // OrAlter ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrAlter",190, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // OrAlter ::= OR ALTER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrAlter",190, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // Save ::= SAVE TransactName Name 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Save",189, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // Commit1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit1",188, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // Commit1 ::= TransactName Name1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit1",188, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // Commit ::= COMMIT Commit1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit",187, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // Rollback1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback1",186, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // Rollback1 ::= TransactName Name1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback1",186, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // Rollback ::= ROLLBACK Rollback1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback",185, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // Name1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",184, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // Name1 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",184, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // Name1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",184, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // Name ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name",183, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // Name ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name",183, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // TransactName ::= TRANSACTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TransactName",182, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // TransactName ::= TRAN 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TransactName",182, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // Transact3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact3",181, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // Transact3 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact3",181, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // Transact2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact2",180, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // Transact2 ::= WITH MARK Transact3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact2",180, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // Transact1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact1",179, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // Transact1 ::= NAME Transact2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact1",179, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // Transact ::= BEGIN TransactName Transact1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact",178, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // AlterTableDrop4 ::= AlterTableDrop1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop4",177, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // AlterTableDrop4 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop4",177, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // AlterTableDrop3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop3",176, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // AlterTableDrop3 ::= CONSTRAINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop3",176, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // AlterTableDrop2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop2",175, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // AlterTableDrop2 ::= Coma AlterTableDrop4 AlterTableDrop2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop2",175, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // AlterTableDrop1 ::= COLUMN IFExists ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop1",174, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // AlterTableDrop1 ::= AlterTableDrop3 IFExists ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop1",174, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // AlterTableDrop ::= DROP AlterTableDrop1 AlterTableDrop2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop",173, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // AlterColumna4 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna4",172, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // AlterColumna4 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna4",172, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // AlterColumna3 ::= DROP 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna3",171, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // AlterColumna3 ::= ADD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna3",171, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // AlterColumna2 ::= TipoDeDato DefinicionColumna1 DefinicionColumna3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna2",170, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // AlterColumna1 ::= AlterColumna3 AlterColumna4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna1",169, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // AlterColumna1 ::= AlterColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna1",169, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // AlterColumna ::= ALTER COLUMN ID AlterColumna1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna",168, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // AlterTable1 ::= AlterTableDrop 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",167, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // AlterTable1 ::= ADD TableElement2 TableElement3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",167, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // AlterTable1 ::= AlterColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",167, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // AlterTable ::= TABLE IDL3 AlterTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable",166, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // AlterView1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView1",165, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // AlterView1 ::= ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView1",165, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // AlterView ::= VIEW IDL1 AlterView1 AS Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView",164, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // AlterUser ::= USER ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterUser",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // AlterDataBase2 ::= SET ROLLBACK IMMEDIATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase2",162, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // AlterDataBase2 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase2",162, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // AlterDataBase1 ::= CURRENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase1",161, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // AlterDataBase1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase1",161, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // AlterDataBase ::= DATABASE AlterDataBase1 AlterDataBase2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase",160, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // Alter1 ::= Function 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // Alter1 ::= Procedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // Alter1 ::= AlterTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // Alter1 ::= AlterView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // Alter1 ::= AlterDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // Alter1 ::= AlterUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // Alter ::= ALTER Alter1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter",158, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // IndexTabla ::= INDEX ID ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexTabla",157, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // ConstraintTabla5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla5",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // ConstraintTabla5 ::= Coma ID OrderBy2 ConstraintTabla5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla5",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // ConstraintTabla4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla4",155, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // ConstraintTabla4 ::= Coma ID ConstraintTabla4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla4",155, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // ConstraintTabla3 ::= Aparentesis ID ConstraintTabla4 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla3",154, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // ConstraintTabla2 ::= Aparentesis ID OrderBy2 ConstraintTabla5 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla2",153, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // ConstraintTabla1 ::= CHECK TableElement1 Aparentesis Condicion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",152, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // ConstraintTabla1 ::= FOREIGN KEY ConstraintTabla3 REFERENCES IDL1 ConstraintColumna5 ConstraintColumna6 ConstraintColumna7 TableElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",152, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // ConstraintTabla1 ::= UNIQUE ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",152, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ConstraintTabla1 ::= PRIMARY KEY ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",152, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ConstraintTabla ::= ConstraintColumna1 ConstraintTabla1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla",151, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ConstraintColumna10 ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna10",150, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ConstraintColumna10 ::= PRIMARY KEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna10",150, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // ConstraintColumna9 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna9",149, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // ConstraintColumna9 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna9",149, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // ConstraintColumna8 ::= SET ConstraintColumna9 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna8",148, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // ConstraintColumna8 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna8",148, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // ConstraintColumna7 ::= UPDATE ConstraintColumna8 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna7",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // ConstraintColumna7 ::= DELETE ConstraintColumna8 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna7",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // ConstraintColumna6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna6",146, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // ConstraintColumna6 ::= ON ConstraintColumna7 ConstraintColumna6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna6",146, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // ConstraintColumna5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna5",145, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // ConstraintColumna5 ::= Aparentesis ID Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna5",145, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // ConstraintColumna4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna4",144, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // ConstraintColumna4 ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna4",144, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // ConstraintColumna3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",143, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // ConstraintColumna3 ::= NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",143, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // ConstraintColumna3 ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",143, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // ConstraintColumna2 ::= CHECK TableElement1 Aparentesis Condicion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // ConstraintColumna2 ::= ConstraintColumna4 REFERENCES IDL1 ConstraintColumna5 ConstraintColumna6 TableElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // ConstraintColumna2 ::= ConstraintColumna10 ConstraintColumna3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // ConstraintColumna1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna1",141, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // ConstraintColumna1 ::= CONSTRAINT ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna1",141, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // ConstraintColumna ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // ConstraintColumna ::= ConstraintColumna1 ConstraintColumna2 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // DefinicionColumna11 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // DefinicionColumna11 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // DefinicionColumna11 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // DefinicionColumna10 ::= FOR REPLICATION DefinicionColumna11 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna10",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // DefinicionColumna10 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna10",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // DefinicionColumna9 ::= NOT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna9",137, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // DefinicionColumna8 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // DefinicionColumna8 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // DefinicionColumna8 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // DefinicionColumna8 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // DefinicionColumna8 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // DefinicionColumna7 ::= ConstraintColumna2 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // DefinicionColumna7 ::= ROWGUIDCOL ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // DefinicionColumna7 ::= DefinicionColumna9 DefinicionColumna10 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // DefinicionColumna7 ::= IDENTITY DefinicionColumna5 TableElement1 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // DefinicionColumna7 ::= DEFAULT DefinicionColumna8 DefinicionColumna2 TableElement1 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // DefinicionColumna6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // DefinicionColumna6 ::= DefinicionColumna7 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // DefinicionColumna6 ::= CONSTRAINT ID DefinicionColumna7 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // DefinicionColumna5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna5",133, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // DefinicionColumna5 ::= Aparentesis Integer Coma Integer Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna5",133, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // DefinicionColumna4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna4",132, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // DefinicionColumna4 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna4",132, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // DefinicionColumna3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",131, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // DefinicionColumna3 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",131, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // DefinicionColumna3 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",131, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // DefinicionColumna2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna2",130, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // DefinicionColumna2 ::= IDENTITY DefinicionColumna5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna2",130, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // DefinicionColumna1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna1",129, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // DefinicionColumna1 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna1",129, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // DefinicionColumna ::= ID TipoDeDato DefinicionColumna1 DefinicionColumna6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna",128, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // TableElement3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement3",124, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // TableElement3 ::= Coma TableElement2 TableElement3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement3",124, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // TableElement2 ::= IndexTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",123, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // TableElement2 ::= ConstraintTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",123, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // TableElement2 ::= DefinicionColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",123, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // TableElement6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement6",127, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // TableElement6 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement6",127, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // TableElement5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement5",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // TableElement5 ::= NOT TableElement6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement5",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // TableElement4 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement4",125, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // TableElement4 ::= FOR REPLICATION TableElement5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement4",125, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // TableElement1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement1",122, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // TableElement1 ::= NOT TableElement4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement1",122, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // TableOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableOption",121, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // TableOption ::= ON PRIMARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableOption",121, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // CreateTable ::= TABLE IDL3 Aparentesis TableElement2 TableElement3 Cparentesis TableOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateTable",120, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // OnOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OnOption",119, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // OnOption ::= ON ID Aparentesis ID Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OnOption",119, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // IndexInclude ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexInclude",118, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // IndexInclude ::= INCLUDE ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexInclude",118, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // IndexColumna2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna2",117, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // IndexColumna2 ::= Coma ID OrderBy2 IndexColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna2",117, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // IndexColumna1 ::= ID OrderBy2 IndexColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna1",116, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // IndexColumna ::= Aparentesis IndexColumna1 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna",115, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // CreateIndex1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex1",114, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // CreateIndex1 ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex1",114, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // CreateIndex ::= CreateIndex1 ConstraintColumna3 INDEX ID ON IDL3 IndexColumna IndexInclude Where OnOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex",113, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // CreateView ::= VIEW IDL1 AS Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateView",112, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // FileGrowth1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",111, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // FileGrowth1 ::= Porce 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",111, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // FileGrowth1 ::= Size1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",111, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // FileGrowth ::= FILEGROWTH Igual Integer FileGrowth1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth",110, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // MaxSize1 ::= UNLIMITED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize1",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // MaxSize1 ::= Integer Size1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize1",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // MaxSize ::= MAXSIZE Igual MaxSize1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize",108, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // Size1 ::= TB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size1",107, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // Size1 ::= GB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size1",107, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // Size1 ::= MB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size1",107, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // Size1 ::= KB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size1",107, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // Size ::= SIZE Igual Integer Size1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size",106, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // DefinitionOption ::= FileGrowth 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",105, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // DefinitionOption ::= MaxSize 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",105, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // DefinitionOption ::= Size 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",105, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // DefinitionOptions ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOptions",103, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // DefinitionOptions ::= Coma DefinitionOption DefinitionOptions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOptions",103, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // FileName ::= FILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileName",102, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // FileName ::= FILENAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileName",102, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // Definition ::= Aparentesis NAME Igual Varchar Coma FileName Igual Varchar DefinitionOptions Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definition",101, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // Definitions ::= Definition 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definitions",100, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // Definitions ::= Definition Coma Definitions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definitions",100, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // Primary ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Primary",99, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // Primary ::= PRIMARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Primary",99, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // CollateDataBase ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CollateDataBase",98, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // CollateDataBase ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CollateDataBase",98, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // CreateDataBase2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase2",97, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // CreateDataBase2 ::= ON Primary Definitions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase2",97, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // CreateDataBase1 ::= CreateDataBase2 CollateDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase1",96, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // CreateDataBase ::= DATABASE ID CreateDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase",95, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // CreateUser ::= USER ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateUser",94, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // Create1 ::= CreateIndex 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // Create1 ::= CreateView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // Create1 ::= CreateUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // Create1 ::= CreateDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // Create1 ::= CreateTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // Create1 ::= Function 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // Create1 ::= Procedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // Create ::= CREATE Create1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create",92, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // UpdateFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("UpdateFrom",91, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // UpdateFrom ::= FROM IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("UpdateFrom",91, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // Update3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update3",90, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // Update3 ::= Coma Update1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update3",90, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // Update2 ::= Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update2",89, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // Update2 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update2",89, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // Update1 ::= ID Igual Update2 Update3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update1",88, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // Update ::= UPDATE Top IDL3 SET Update1 UpdateFrom Where 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update",87, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // DeleteServer ::= Aparentesis ID Coma Varchar Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteServer",86, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // Delete3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete3",85, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // Delete3 ::= Coma IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete3",85, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // Delete2 ::= FROM IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete2",84, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // Delete1 ::= IDL3 Delete2 Where 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete1",83, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // Delete1 ::= OPENQUERY DeleteServer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete1",83, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // DeleteFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteFrom",82, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // DeleteFrom ::= FROM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteFrom",82, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // Delete ::= DELETE Top DeleteFrom Delete1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete",81, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // InsertValores1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores1",80, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // InsertValores1 ::= Coma Aparentesis InsertTipo Cparentesis InsertValores1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores1",80, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // InsertValores ::= DEFAULT VALUES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores",79, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // InsertValores ::= VALUES Aparentesis InsertTipo Cparentesis InsertValores1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores",79, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // InsertTipo2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo2",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // InsertTipo2 ::= Coma InsertTipo1 InsertTipo2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo2",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // InsertTipo1 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // InsertTipo1 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // InsertTipo1 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // InsertTipo1 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // InsertTipo1 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // InsertTipo ::= InsertTipo1 InsertTipo2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo",76, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // InsertListaColumna ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertListaColumna",75, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // InsertListaColumna ::= ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertListaColumna",75, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // InsertInto ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertInto",74, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // InsertInto ::= INTO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertInto",74, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // Insert ::= INSERT Top InsertInto IDL3 InsertListaColumna InsertValores 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Insert",73, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // ListaColumnas2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas2",72, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // ListaColumnas2 ::= Coma ID ListaColumnas2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas2",72, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // ListaColumnas1 ::= ID ListaColumnas2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas1",71, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // ListaColumnas ::= Aparentesis ListaColumnas1 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas",70, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // SelectColumnas1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas1",69, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // SelectColumnas1 ::= Coma Operacion AsElement SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas1",69, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // SelectColumnas ::= Mul SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas",68, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // SelectColumnas ::= Operacion AsElement SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas",68, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // JoinOuter ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinOuter",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // JoinOuter ::= OUTER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinOuter",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // JoinType ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // JoinType ::= FULL JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // JoinType ::= LEFT JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // JoinType ::= RIGHT JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // JoinType ::= INNER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // SelectFromJoin ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFromJoin",65, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // SelectFromJoin ::= JoinType JOIN IDL3 AsElement ON Condicion SelectFromJoin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFromJoin",65, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // SelectFrom1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom1",64, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // SelectFrom1 ::= Coma IDL3 AsElement SelectFromJoin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom1",64, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // SelectFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom",63, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // SelectFrom ::= FROM IDL3 AsElement SelectFromJoin SelectFrom1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom",63, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // GroupBy1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy1",62, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // GroupBy1 ::= Coma Operacion GroupBy1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy1",62, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // GroupBy ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy",61, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // GroupBy ::= GROUP BY Operacion GroupBy1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy",61, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // OrderBy3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy3",60, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // OrderBy3 ::= Operacion OrderBy1 OrderBy2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy3",60, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // OrderBy2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // OrderBy2 ::= DESC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // OrderBy2 ::= ASC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // OrderBy1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy1",58, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // OrderBy1 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy1",58, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // OrderBy ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy",57, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // OrderBy ::= ORDER BY Operacion OrderBy1 OrderBy2 OrderBy3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy",57, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Having ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Having",56, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Having ::= HAVING Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Having",56, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Select1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",55, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Select1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",55, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Select1 ::= ALL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",55, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Select ::= SELECT Select1 Top SelectColumnas SelectFrom Where GroupBy Having OrderBy 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select",54, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Where ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Where",53, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Where ::= WHERE Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Where",53, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Condicion4 ::= LIKE Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Condicion4 ::= BETWEEN Condicion AND Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Condicion4 ::= IN Aparentesis Operacion Operaciones Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Condicion3 ::= Not Condicion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Condicion3 ::= IS Not NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Condicion3 ::= Igual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Condicion3 ::= Exclamacion Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Condicion3 ::= Dbarra Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Condicion3 ::= Dampersand Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Condicion3 ::= Diferente Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // Condicion3 ::= Digual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // Condicion3 ::= MayorIgual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // Condicion3 ::= Mayor Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Condicion3 ::= MenorIgual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // Condicion3 ::= Menor Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Condicion2 ::= Operacion Condicion3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion2",49, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Condicion1 ::= OR Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion1",48, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Condicion1 ::= AND Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion1",48, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // Condicion ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion",47, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // Condicion ::= Not Condicion2 Condicion1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion",47, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Top1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top1",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Top1 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top1",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Top ::= TOP Aparentesis Integer Cparentesis Top1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Not ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Not",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Not ::= NOT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Not",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Operaciones ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operaciones",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Operaciones ::= Coma Operacion Operaciones 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operaciones",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Operacion6 ::= Mul Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Operacion6 ::= Integer Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Operacion6 ::= IDL5 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Operacion5 ::= COUNT Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Operacion5 ::= MAX Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Operacion5 ::= MIN Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Operacion5 ::= AVG Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Operacion5 ::= SUM Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Operacion5 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Operacion5 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Operacion5 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Operacion5 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Operacion5 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Operacion5 ::= IDL5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Operacion3 ::= Operacion5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion3",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Operacion3 ::= Aparentesis Operacion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion3",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Operacion4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Operacion4 ::= Div Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Operacion4 ::= Mul Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Operacion1 ::= Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion1",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Operacion2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Operacion2 ::= Resta Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Operacion2 ::= Suma Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Operacion ::= Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // AsElement1 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement1",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // AsElement1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement1",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // AsElement ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // AsElement ::= AsElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // AsElement ::= AS AsElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Truncate ::= TRUNCATE TABLE IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Truncate",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // DropIndex2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex2",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // DropIndex2 ::= Coma DropIndex1 DropIndex2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex2",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // DropIndex1 ::= ID ON IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex1",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // DropIndex ::= INDEX IFExists DropIndex1 DropIndex2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // DropDataBase1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase1",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // DropDataBase1 ::= Coma ID DropDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase1",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // DropDataBase ::= DATABASE IFExists ID DropDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // DropUser ::= USER IFExists ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropUser",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // DropView1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView1",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // DropView1 ::= Coma IDL1 DropView1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView1",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // DropView ::= VIEW IFExists IDL1 DropView1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // DropTable1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable1",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // DropTable1 ::= Coma IDL3 DropTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable1",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // DropTable ::= TABLE IFExists IDL3 DropTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // DropOptions ::= DropIndex 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // DropOptions ::= DropDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // DropOptions ::= DropView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // DropOptions ::= DropUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // DropOptions ::= DropTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Drop ::= DROP DropOptions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Drop",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // TipoDeDato4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato4",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // TipoDeDato4 ::= Coma Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato4",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // TipoDeDato2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato2",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // TipoDeDato2 ::= Aparentesis Integer TipoDeDato4 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato2",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // TipoDeDato3 ::= VARBINARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // TipoDeDato3 ::= IMAGE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // TipoDeDato3 ::= BINARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // TipoDeDato3 ::= NVARCHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // TipoDeDato3 ::= NTEXT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // TipoDeDato3 ::= NCHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // TipoDeDato3 ::= VARCHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // TipoDeDato3 ::= TEXT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // TipoDeDato3 ::= CHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // TipoDeDato3 ::= TIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // TipoDeDato3 ::= SMALLDATETIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // TipoDeDato3 ::= DATETIMEOFFSET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // TipoDeDato3 ::= DATETIME2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // TipoDeDato3 ::= DATETIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // TipoDeDato3 ::= DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // TipoDeDato3 ::= REAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // TipoDeDato3 ::= FLOAT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // TipoDeDato3 ::= SMALLMONEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // TipoDeDato3 ::= NUMERIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // TipoDeDato3 ::= MONEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // TipoDeDato3 ::= DECIMAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // TipoDeDato3 ::= BIT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // TipoDeDato3 ::= TINYINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // TipoDeDato3 ::= SMALLINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // TipoDeDato3 ::= INT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // TipoDeDato3 ::= BIGINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // TipoDeDato1 ::= Acorchete TipoDeDato3 Ccorchete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato1",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // TipoDeDato1 ::= TipoDeDato3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato1",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // TipoDeDato ::= TipoDeDato1 TipoDeDato2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Var ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Var",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // IFExists ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IFExists",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // IDL6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL6",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // IDL6 ::= Punto IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL6",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // IDL5 ::= ID IDL6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL5",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // IDL4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL4",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // IDL4 ::= Punto IDL1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL4",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // IDL3 ::= ID IDL4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL3",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // IDL2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL2",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // IDL2 ::= Punto ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL2",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // IDL1 ::= ID IDL2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL1",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ID ::= Acorchete Identificador Ccorchete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ID",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ID ::= Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ID",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Fin ::= GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Fin",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Fin ::= PuntoYComa 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Fin",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SentenciasTSQL ::= Cursor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTSQL",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SentenciasTCL ::= Save 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SentenciasTCL ::= Commit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SentenciasTCL ::= Rollback 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // SentenciasTCL ::= Transact 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // SentenciasDDL ::= Drop 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // SentenciasDDL ::= Alter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // SentenciasDDL ::= Truncate 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SentenciasDDL ::= Create 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SentenciasDML ::= Update 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // SentenciasDML ::= Delete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // SentenciasDML ::= Insert 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // SentenciasDML ::= Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Inicio2 ::= SentenciasTSQL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Inicio2 ::= SentenciasTCL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Inicio2 ::= SentenciasDDL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Inicio2 ::= SentenciasDML 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Inicio1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Inicio1 ::= error Fin Inicio1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Inicio1 ::= Inicio2 Fin Inicio1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Inicio1 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

