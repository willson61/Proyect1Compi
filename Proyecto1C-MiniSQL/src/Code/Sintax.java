
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Thu Oct 31 18:14:01 CST 2019
//----------------------------------------------------

package Code;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java_cup.runtime.virtual_parse_stack;
import java.lang.reflect.Field;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Thu Oct 31 18:14:01 CST 2019
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0231\000\002\002\004\000\002\002\005\000\002\002" +
    "\005\000\002\002\002\000\002\003\003\000\002\003\003" +
    "\000\002\003\003\000\002\003\003\000\002\004\003\000" +
    "\002\004\003\000\002\004\003\000\002\004\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\006\003\000\002\006\003\000\002\006\003" +
    "\000\002\006\003\000\002\007\003\000\002\007\003\000" +
    "\002\007\003\000\002\007\003\000\002\010\003\000\002" +
    "\010\003\000\002\011\005\000\002\011\003\000\002\012" +
    "\004\000\002\013\004\000\002\013\002\000\002\014\004" +
    "\000\002\015\004\000\002\015\002\000\002\016\004\000" +
    "\002\017\004\000\002\017\002\000\002\020\004\000\002" +
    "\021\004\000\002\022\004\000\002\023\003\000\002\023" +
    "\005\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\024\010\000" +
    "\002\024\003\000\002\024\010\000\002\024\003\000\002" +
    "\024\003\000\002\024\006\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\024\006\000" +
    "\002\024\003\000\002\024\006\000\002\024\006\000\002" +
    "\024\006\000\002\024\003\000\002\024\006\000\002\024" +
    "\006\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\025\006\000\002\025\002\000\002\026\004\000" +
    "\002\026\002\000\002\027\004\000\002\030\003\000\002" +
    "\030\003\000\002\030\003\000\002\030\003\000\002\030" +
    "\003\000\002\031\006\000\002\032\005\000\002\032\002" +
    "\000\002\033\006\000\002\034\005\000\002\034\002\000" +
    "\002\035\005\000\002\036\006\000\002\037\005\000\002" +
    "\037\002\000\002\040\006\000\002\041\005\000\002\042" +
    "\005\000\002\042\002\000\002\043\005\000\002\044\004" +
    "\000\002\044\003\000\002\044\002\000\002\045\003\000" +
    "\002\045\003\000\002\046\004\000\002\047\005\000\002" +
    "\047\005\000\002\047\002\000\002\050\004\000\002\051" +
    "\005\000\002\051\005\000\002\051\002\000\002\052\005" +
    "\000\002\052\003\000\002\053\003\000\002\053\003\000" +
    "\002\053\003\000\002\053\003\000\002\053\003\000\002" +
    "\053\003\000\002\053\003\000\002\053\005\000\002\053" +
    "\005\000\002\053\005\000\002\053\005\000\002\053\005" +
    "\000\002\054\004\000\002\054\004\000\002\054\004\000" +
    "\002\055\005\000\002\055\002\000\002\056\003\000\002" +
    "\056\002\000\002\057\007\000\002\057\002\000\002\060" +
    "\003\000\002\060\002\000\002\061\006\000\002\061\005" +
    "\000\002\062\004\000\002\062\002\000\002\063\004\000" +
    "\002\064\004\000\002\064\004\000\002\064\004\000\002" +
    "\064\004\000\002\064\004\000\002\064\004\000\002\064" +
    "\004\000\002\064\004\000\002\064\004\000\002\064\004" +
    "\000\002\064\005\000\002\064\003\000\002\065\010\000" +
    "\002\065\007\000\002\065\007\000\002\067\003\000\002" +
    "\067\002\000\002\066\003\000\002\066\003\000\002\070" +
    "\004\000\002\070\002\000\002\071\013\000\002\072\003" +
    "\000\002\072\003\000\002\072\002\000\002\073\004\000" +
    "\002\073\002\000\002\074\010\000\002\074\002\000\002" +
    "\075\004\000\002\075\002\000\002\076\003\000\002\076" +
    "\003\000\002\076\002\000\002\077\005\000\002\077\002" +
    "\000\002\100\006\000\002\100\002\000\002\101\005\000" +
    "\002\101\002\000\002\102\007\000\002\102\002\000\002" +
    "\103\006\000\002\103\002\000\002\104\011\000\002\104" +
    "\002\000\002\105\003\000\002\105\004\000\002\105\004" +
    "\000\002\105\004\000\002\105\002\000\002\106\003\000" +
    "\002\106\002\000\002\107\005\000\002\107\004\000\002" +
    "\110\006\000\002\110\002\000\002\111\005\000\002\112" +
    "\004\000\002\113\005\000\002\113\002\000\002\114\010" +
    "\000\002\115\003\000\002\115\002\000\002\116\003\000" +
    "\002\116\002\000\002\117\004\000\002\120\003\000\002" +
    "\120\003\000\002\120\003\000\002\120\003\000\002\120" +
    "\003\000\002\120\003\000\002\121\005\000\002\121\002" +
    "\000\002\122\007\000\002\122\004\000\002\123\007\000" +
    "\002\123\002\000\002\124\006\000\002\125\003\000\002" +
    "\125\002\000\002\126\004\000\002\126\005\000\002\127" +
    "\005\000\002\127\002\000\002\130\005\000\002\130\002" +
    "\000\002\131\007\000\002\132\011\000\002\133\006\000" +
    "\002\134\003\000\002\134\003\000\002\135\004\000\002" +
    "\135\002\000\002\136\005\000\002\136\002\000\002\137" +
    "\004\000\002\140\003\000\002\140\003\000\002\140\003" +
    "\000\002\140\003\000\002\140\003\000\002\140\003\000" +
    "\002\140\003\000\002\141\004\000\002\142\005\000\002" +
    "\143\004\000\002\144\005\000\002\144\002\000\002\145" +
    "\004\000\002\145\002\000\002\146\003\000\002\146\002" +
    "\000\002\147\005\000\002\147\003\000\002\150\014\000" +
    "\002\151\003\000\002\151\003\000\002\152\003\000\002" +
    "\152\003\000\002\153\005\000\002\153\002\000\002\155" +
    "\003\000\002\155\003\000\002\155\003\000\002\156\006" +
    "\000\002\157\003\000\002\157\002\000\002\160\003\000" +
    "\002\160\003\000\002\160\003\000\002\160\003\000\002" +
    "\161\005\000\002\162\004\000\002\163\003\000\002\163" +
    "\003\000\002\163\002\000\002\164\006\000\002\165\003" +
    "\000\002\165\003\000\002\165\002\000\002\166\006\000" +
    "\002\167\014\000\002\170\003\000\002\170\002\000\002" +
    "\171\005\000\002\172\005\000\002\173\006\000\002\173" +
    "\002\000\002\174\004\000\002\174\002\000\002\175\007" +
    "\000\002\175\002\000\002\176\011\000\002\177\004\000" +
    "\002\177\002\000\002\200\004\000\002\200\003\000\002" +
    "\200\002\000\002\203\005\000\002\203\003\000\002\204" +
    "\004\000\002\204\003\000\002\204\002\000\002\205\003" +
    "\000\002\201\003\000\002\201\003\000\002\201\003\000" +
    "\002\202\005\000\002\202\002\000\002\206\006\000\002" +
    "\207\004\000\002\207\002\000\002\210\004\000\002\210" +
    "\002\000\002\211\003\000\002\211\004\000\002\211\002" +
    "\000\002\212\003\000\002\212\002\000\002\213\007\000" +
    "\002\213\002\000\002\214\005\000\002\214\003\000\002" +
    "\214\002\000\002\215\007\000\002\215\006\000\002\215" +
    "\004\000\002\215\005\000\002\216\003\000\002\216\003" +
    "\000\002\216\003\000\002\216\003\000\002\216\003\000" +
    "\002\217\003\000\002\217\002\000\002\220\003\000\002" +
    "\220\005\000\002\221\004\000\002\221\003\000\002\221" +
    "\002\000\002\222\010\000\002\223\005\000\002\223\002" +
    "\000\002\224\004\000\002\224\002\000\002\225\004\000" +
    "\002\225\010\000\002\225\007\000\002\226\003\000\002" +
    "\226\003\000\002\226\002\000\002\227\004\000\002\227" +
    "\002\000\002\230\005\000\002\230\002\000\002\231\005" +
    "\000\002\231\002\000\002\232\004\000\002\232\004\000" +
    "\002\233\003\000\002\233\004\000\002\234\003\000\002" +
    "\234\003\000\002\235\004\000\002\235\003\000\002\236" +
    "\004\000\002\237\006\000\002\237\005\000\002\237\012" +
    "\000\002\237\007\000\002\240\007\000\002\241\006\000" +
    "\002\242\005\000\002\242\002\000\002\243\006\000\002" +
    "\243\002\000\002\244\006\000\002\245\004\000\002\246" +
    "\003\000\002\246\003\000\002\246\003\000\002\246\003" +
    "\000\002\246\003\000\002\246\003\000\002\247\005\000" +
    "\002\250\003\000\002\250\003\000\002\251\004\000\002" +
    "\251\005\000\002\252\004\000\002\253\007\000\002\254" +
    "\003\000\002\254\002\000\002\255\005\000\002\256\003" +
    "\000\002\256\005\000\002\256\003\000\002\257\006\000" +
    "\002\260\003\000\002\260\004\000\002\261\005\000\002" +
    "\262\003\000\002\262\003\000\002\263\003\000\002\263" +
    "\005\000\002\264\005\000\002\265\004\000\002\266\005" +
    "\000\002\266\002\000\002\267\003\000\002\267\002\000" +
    "\002\270\003\000\002\270\003\000\002\271\003\000\002" +
    "\271\002\000\002\272\004\000\002\272\004\000\002\273" +
    "\005\000\002\274\004\000\002\274\002\000\002\275\005" +
    "\000\002\275\002\000\002\276\003\000\002\276\002\000" +
    "\002\277\003\000\002\277\003\000\002\300\003\000\002" +
    "\300\003\000\002\301\003\000\002\301\003\000\002\301" +
    "\002\000\002\302\005\000\002\303\003\000\002\303\002" +
    "\000\002\304\004\000\002\305\004\000\002\305\002\000" +
    "\002\306\005\000\002\307\004\000\002\307\002\000\002" +
    "\310\003\000\002\310\003\000\002\311\007\000\002\312" +
    "\004\000\002\312\002\000\002\313\004\000\002\313\003" +
    "\000\002\314\004\000\002\314\002\000\002\315\005\000" +
    "\002\315\002\000\002\316\003\000\002\316\002\000\002" +
    "\317\004\000\002\320\004\000\002\320\002\000\002\321" +
    "\003\000\002\321\003\000\002\321\003\000\002\321\004" +
    "\000\002\321\003\000\002\322\003\000\002\322\002\000" +
    "\002\323\003\000\002\323\002\000\002\324\013\000\002" +
    "\325\003\000\002\325\003\000\002\326\004\000\002\326" +
    "\002\000\002\327\003\000\002\327\002\000\002\330\005" +
    "\000\002\331\004\000\002\331\002\000\002\332\005\000" +
    "\002\332\005\000\002\332\004\000\002\333\004\000\002" +
    "\333\002\000\002\334\003\000\002\334\002\000\002\335" +
    "\003\000\002\335\003\000\002\336\004\000\002\336\002" +
    "\000\002\337\004\000\002\340\003\000\002\340\003\000" +
    "\002\340\005\000\002\341\004\000\002\341\002\000\002" +
    "\342\003\000\002\342\003\000\002\343\003\000\002\343" +
    "\003\000\002\343\003\000\002\343\003\000\002\344\004" +
    "\000\002\344\002\000\002\345\005\000\002\345\003\000" +
    "\002\346\003\000\002\347\005\000\002\350\005\000\002" +
    "\350\002\000\002\351\004\000\002\351\002\000\002\352" +
    "\012\000\002\353\003\000\002\353\002\000\002\354\004" +
    "\000\002\355\007\000\002\356\004\000\002\356\002\000" +
    "\002\357\003\000\002\357\002\000\002\360\003\000\002" +
    "\360\002\000\002\361\003\000\002\361\003\000\002\362" +
    "\007\000\002\363\005\000\002\363\002\000\002\364\004" +
    "\000\002\364\002\000\002\365\003\000\002\365\003\000" +
    "\002\365\007\000\002\365\006\000\002\365\005\000\002" +
    "\366\005\000\002\366\003\000\002\367\013\000\002\370" +
    "\003\000\002\370\003\000\002\370\003\000\002\370\003" +
    "\000\002\371\015\000\002\372\003\000\002\372\003\000" +
    "\002\372\002\000\002\373\003\000\002\373\003\000\002" +
    "\373\002\000\002\374\003\000\002\374\003\000\002\374" +
    "\003\000\002\374\003\000\002\374\002\000\002\375\003" +
    "\000\002\375\003\000\002\375\003\000\002\375\002\000" +
    "\002\376\003\000\002\376\002\000\002\377\005\000\002" +
    "\377\002\000\002\u0100\004\000\002\u0100\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u03c2\000\062\002\ufffe\003\030\006\ufe49\037\015\065" +
    "\023\071\ufe49\106\052\122\041\133\024\140\042\142\047" +
    "\167\043\227\006\230\034\236\012\251\011\263\044\264" +
    "\021\310\046\313\010\322\ufe49\u010e\ufe3c\u0117\ufe3c\u0129\ufe3c" +
    "\001\002\000\006\325\ufffb\u010b\ufffb\001\002\000\006\325" +
    "\ufff6\u010b\ufff6\001\002\000\004\174\u03c3\001\002\000\006" +
    "\325\ufff7\u010b\ufff7\001\002\000\012\051\ufe13\u010e\ufe13\u0117" +
    "\ufe13\u0129\ufe13\001\002\000\010\213\u02b2\u010e\uff7e\u0129\uff7e" +
    "\001\002\000\014\063\uff7e\213\u02b2\250\uff7e\u010e\uff7e\u0129" +
    "\uff7e\001\002\000\006\325\ufff1\u010b\ufff1\001\002\000\006" +
    "\325\uffee\u010b\uffee\001\002\000\022\006\ufe49\071\ufe49\174" +
    "\u0363\217\u035e\262\u0360\264\021\273\u0362\322\ufe49\001\002" +
    "\000\006\325\ufff2\u010b\ufff2\001\002\000\006\325\ufff9\u010b" +
    "\ufff9\001\002\000\006\325\ufffa\u010b\ufffa\001\002\000\004" +
    "\037\u035a\001\002\000\006\325\uffeb\u010b\uffeb\001\002\000" +
    "\006\216\360\221\356\001\002\000\046\007\u0310\213\uff5e" +
    "\220\uff5e\252\u030e\326\uff5e\327\uff5e\330\uff5e\331\uff5e\332" +
    "\uff5e\u0108\uff5e\u010e\uff5e\u0110\uff5e\u0117\uff5e\u0124\uff5e\u0127\uff5e" +
    "\u0128\uff5e\u0129\uff5e\u012b\uff5e\001\002\000\006\325\ufff0\u010b" +
    "\ufff0\001\002\000\010\u010e\ufe44\u0117\074\u0129\ufe44\001\002" +
    "\000\006\325\uffea\u010b\uffea\001\002\000\006\325\245\u010b" +
    "\244\001\002\000\006\325\ufffc\u010b\ufffc\001\002\000\006" +
    "\325\uffed\u010b\uffed\001\002\000\006\325\ufff4\u010b\ufff4\001" +
    "\002\000\006\u010e\064\u0129\065\001\002\000\010\u010e\ufe3d" +
    "\u0117\ufe3d\u0129\ufe3d\001\002\000\006\325\ufffd\u010b\ufffd\001" +
    "\002\000\006\325\ufff8\u010b\ufff8\001\002\000\006\325\ufff5" +
    "\u010b\ufff5\001\002\000\006\216\360\221\356\001\002\000" +
    "\012\146\uff7e\213\u02b2\u010e\uff7e\u0129\uff7e\001\002\000\032" +
    "\006\ufe49\071\ufe49\126\ufee5\132\ufee5\174\u0137\212\ufee5\217" +
    "\u0131\243\u0134\262\u0133\264\021\273\u0136\322\ufe49\001\002" +
    "\000\014\132\377\174\u0104\217\376\262\u0100\273\u0105\001" +
    "\002\000\006\325\uffef\u010b\uffef\001\002\000\012\051\ufe14" +
    "\u010e\ufe14\u0117\ufe14\u0129\ufe14\001\002\000\012\216\360\221" +
    "\356\325\ufe4c\u010b\ufe4c\001\002\000\006\325\245\u010b\244" +
    "\001\002\000\004\002\365\001\002\000\006\216\360\221" +
    "\356\001\002\000\006\325\ufff3\u010b\ufff3\001\002\000\006" +
    "\325\uffec\u010b\uffec\001\002\000\010\006\056\071\060\322" +
    "\057\001\002\000\006\u010e\ufe2d\u0129\ufe2d\001\002\000\006" +
    "\u010e\ufe2e\u0129\ufe2e\001\002\000\006\u010e\064\u0129\065\001" +
    "\002\000\006\u010e\064\u0129\065\001\002\000\214\004\uffe3" +
    "\037\uffe3\042\uffe3\046\uffe3\051\uffe3\052\uffe3\054\uffe3\056" +
    "\uffe3\063\uffe3\066\uffe3\070\uffe3\102\uffe3\103\uffe3\105\uffe3" +
    "\115\uffe3\127\uffe3\134\uffe3\135\uffe3\150\uffe3\151\uffe3\152" +
    "\uffe3\154\uffe3\165\uffe3\170\uffe3\215\uffe3\220\uffe3\233\uffe3" +
    "\237\uffe3\243\uffe3\244\uffe3\263\uffe3\264\uffe3\265\uffe3\267" +
    "\uffe3\304\uffe3\312\uffe3\314\uffe3\325\uffe3\326\uffe3\327\uffe3" +
    "\330\uffe3\331\uffe3\332\uffe3\u0106\uffe3\u0107\uffe3\u0108\uffe3\u0109" +
    "\uffe3\u010b\uffe3\u010c\uffe3\u010d\257\u010e\uffe3\u0110\uffe3\u0111\uffe3" +
    "\u0117\uffe3\u011a\uffe3\u011b\uffe3\u011c\uffe3\u011d\uffe3\u011e\uffe3\u011f" +
    "\uffe3\u0120\uffe3\u0121\uffe3\u0122\uffe3\u0123\uffe3\u0124\uffe3\u0127\uffe3" +
    "\u0128\uffe3\u0129\uffe3\u012b\uffe3\001\002\000\014\046\ufe2b\051" +
    "\ufe2b\312\ufe2b\u010b\070\u0117\ufe2b\001\002\000\004\u0129\066" +
    "\001\002\000\320\004\uffe6\011\uffe6\037\uffe6\042\uffe6\046" +
    "\uffe6\051\uffe6\052\uffe6\054\uffe6\056\uffe6\063\uffe6\065\uffe6" +
    "\066\uffe6\070\uffe6\072\uffe6\102\uffe6\103\uffe6\105\uffe6\113" +
    "\uffe6\114\uffe6\115\uffe6\126\uffe6\127\uffe6\134\uffe6\135\uffe6" +
    "\150\uffe6\151\uffe6\152\uffe6\154\uffe6\165\uffe6\170\uffe6\212" +
    "\uffe6\214\uffe6\215\uffe6\220\uffe6\233\uffe6\237\uffe6\243\uffe6" +
    "\244\uffe6\263\uffe6\264\uffe6\265\uffe6\267\uffe6\304\uffe6\312" +
    "\uffe6\314\uffe6\325\uffe6\326\uffe6\327\uffe6\330\uffe6\331\uffe6" +
    "\332\uffe6\337\uffe6\340\uffe6\341\uffe6\342\uffe6\343\uffe6\344" +
    "\uffe6\345\uffe6\346\uffe6\347\uffe6\350\uffe6\351\uffe6\352\uffe6" +
    "\353\uffe6\354\uffe6\355\uffe6\356\uffe6\357\uffe6\360\uffe6\361" +
    "\uffe6\362\uffe6\363\uffe6\364\uffe6\365\uffe6\366\uffe6\367\uffe6" +
    "\370\uffe6\u0106\uffe6\u0107\uffe6\u0108\uffe6\u0109\uffe6\u010b\uffe6\u010c" +
    "\uffe6\u010d\uffe6\u010e\uffe6\u0110\uffe6\u0111\uffe6\u0117\uffe6\u011a\uffe6" +
    "\u011b\uffe6\u011c\uffe6\u011d\uffe6\u011e\uffe6\u011f\uffe6\u0120\uffe6\u0121" +
    "\uffe6\u0122\uffe6\u0123\uffe6\u0124\uffe6\u0127\uffe6\u0128\uffe6\u0129\uffe6" +
    "\u012b\uffe6\001\002\000\004\u010f\067\001\002\000\320\004" +
    "\uffe7\011\uffe7\037\uffe7\042\uffe7\046\uffe7\051\uffe7\052\uffe7" +
    "\054\uffe7\056\uffe7\063\uffe7\065\uffe7\066\uffe7\070\uffe7\072" +
    "\uffe7\102\uffe7\103\uffe7\105\uffe7\113\uffe7\114\uffe7\115\uffe7" +
    "\126\uffe7\127\uffe7\134\uffe7\135\uffe7\150\uffe7\151\uffe7\152" +
    "\uffe7\154\uffe7\165\uffe7\170\uffe7\212\uffe7\214\uffe7\215\uffe7" +
    "\220\uffe7\233\uffe7\237\uffe7\243\uffe7\244\uffe7\263\uffe7\264" +
    "\uffe7\265\uffe7\267\uffe7\304\uffe7\312\uffe7\314\uffe7\325\uffe7" +
    "\326\uffe7\327\uffe7\330\uffe7\331\uffe7\332\uffe7\337\uffe7\340" +
    "\uffe7\341\uffe7\342\uffe7\343\uffe7\344\uffe7\345\uffe7\346\uffe7" +
    "\347\uffe7\350\uffe7\351\uffe7\352\uffe7\353\uffe7\354\uffe7\355" +
    "\uffe7\356\uffe7\357\uffe7\360\uffe7\361\uffe7\362\uffe7\363\uffe7" +
    "\364\uffe7\365\uffe7\366\uffe7\367\uffe7\370\uffe7\u0106\uffe7\u0107" +
    "\uffe7\u0108\uffe7\u0109\uffe7\u010b\uffe7\u010c\uffe7\u010d\uffe7\u010e\uffe7" +
    "\u0110\uffe7\u0111\uffe7\u0117\uffe7\u011a\uffe7\u011b\uffe7\u011c\uffe7\u011d" +
    "\uffe7\u011e\uffe7\u011f\uffe7\u0120\uffe7\u0121\uffe7\u0122\uffe7\u0123\uffe7" +
    "\u0124\uffe7\u0127\uffe7\u0128\uffe7\u0129\uffe7\u012b\uffe7\001\002\000" +
    "\006\u0128\135\u012b\137\001\002\000\012\046\ufe29\051\ufe29" +
    "\312\ufe29\u0117\074\001\002\000\010\046\ufe2a\051\ufe2a\312" +
    "\ufe2a\001\002\000\010\046\ufe1b\051\ufe1b\312\212\001\002" +
    "\000\004\u0129\210\001\002\000\074\214\112\337\105\340" +
    "\101\341\122\342\131\343\121\344\104\345\076\346\126" +
    "\347\111\350\117\351\130\352\107\353\102\354\110\355" +
    "\100\356\125\357\124\360\106\361\127\362\116\363\113" +
    "\364\133\365\132\366\077\367\103\370\120\u010e\064\u0129" +
    "\065\001\002\000\064\010\uffd1\011\uffd1\046\uffd1\051\uffd1" +
    "\052\uffd1\056\uffd1\065\uffd1\113\uffd1\114\uffd1\115\uffd1\134" +
    "\uffd1\150\uffd1\215\uffd1\220\uffd1\243\uffd1\312\uffd1\314\uffd1" +
    "\325\uffd1\u0100\uffd1\u010b\uffd1\u010c\uffd1\u010f\uffd1\u0110\uffd1\u0111" +
    "\uffd1\u0123\uffd1\001\002\000\064\010\uffbd\011\uffbd\046\uffbd" +
    "\051\uffbd\052\uffbd\056\uffbd\065\uffbd\113\uffbd\114\uffbd\115" +
    "\uffbd\134\uffbd\150\uffbd\215\uffbd\220\uffbd\243\uffbd\312\uffbd" +
    "\314\uffbd\325\uffbd\u0100\uffbd\u010b\uffbd\u010c\uffbd\u010f\uffbd\u0110" +
    "\uffbd\u0111\uffbd\u0123\uffbd\001\002\000\064\010\uffc8\011\uffc8" +
    "\046\uffc8\051\uffc8\052\uffc8\056\uffc8\065\uffc8\113\uffc8\114" +
    "\uffc8\115\uffc8\134\uffc8\150\uffc8\215\uffc8\220\uffc8\243\uffc8" +
    "\312\uffc8\314\uffc8\325\uffc8\u0100\uffc8\u010b\uffc8\u010c\uffc8\u010f" +
    "\uffc8\u0110\uffc8\u0111\uffc8\u0123\uffc8\001\002\000\064\010\uffd6" +
    "\011\uffd6\046\uffd6\051\uffd6\052\uffd6\056\uffd6\065\uffd6\113" +
    "\uffd6\114\uffd6\115\uffd6\134\uffd6\150\uffd6\215\uffd6\220\uffd6" +
    "\243\uffd6\312\uffd6\314\uffd6\325\uffd6\u0100\uffd6\u010b\uffd6\u010c" +
    "\uffd6\u010f\uffd6\u0110\uffd6\u0111\uffd6\u0123\uffd6\001\002\000\064" +
    "\010\uffca\011\uffca\046\uffca\051\uffca\052\uffca\056\uffca\065" +
    "\uffca\113\uffca\114\uffca\115\uffca\134\uffca\150\uffca\215\uffca" +
    "\220\uffca\243\uffca\312\uffca\314\uffca\325\uffca\u0100\uffca\u010b" +
    "\uffca\u010c\uffca\u010f\uffca\u0110\uffca\u0111\uffca\u0123\uffca\001\002" +
    "\000\064\010\uffbc\011\uffbc\046\uffbc\051\uffbc\052\uffbc\056" +
    "\uffbc\065\uffbc\113\uffbc\114\uffbc\115\uffbc\134\uffbc\150\uffbc" +
    "\215\uffbc\220\uffbc\243\uffbc\312\uffbc\314\uffbc\325\uffbc\u0100" +
    "\uffbc\u010b\uffbc\u010c\uffbc\u010f\uffbc\u0110\uffbc\u0111\uffbc\u0123\uffbc" +
    "\001\002\000\004\u0110\203\001\002\000\064\010\uffd7\011" +
    "\uffd7\046\uffd7\051\uffd7\052\uffd7\056\uffd7\065\uffd7\113\uffd7" +
    "\114\uffd7\115\uffd7\134\uffd7\150\uffd7\215\uffd7\220\uffd7\243" +
    "\uffd7\312\uffd7\314\uffd7\325\uffd7\u0100\uffd7\u010b\uffd7\u010c\uffd7" +
    "\u010f\uffd7\u0110\uffd7\u0111\uffd7\u0123\uffd7\001\002\000\004\u0110" +
    "\200\001\002\000\064\010\uffcb\011\uffcb\046\uffcb\051\uffcb" +
    "\052\uffcb\056\uffcb\065\uffcb\113\uffcb\114\uffcb\115\uffcb\134" +
    "\uffcb\150\uffcb\215\uffcb\220\uffcb\243\uffcb\312\uffcb\314\uffcb" +
    "\325\uffcb\u0100\uffcb\u010b\uffcb\u010c\uffcb\u010f\uffcb\u0110\uffcb\u0111" +
    "\uffcb\u0123\uffcb\001\002\000\064\010\uffc9\011\uffc9\046\uffc9" +
    "\051\uffc9\052\uffc9\056\uffc9\065\uffc9\113\uffc9\114\uffc9\115" +
    "\uffc9\134\uffc9\150\uffc9\215\uffc9\220\uffc9\243\uffc9\312\uffc9" +
    "\314\uffc9\325\uffc9\u0100\uffc9\u010b\uffc9\u010c\uffc9\u010f\uffc9\u0110" +
    "\uffc9\u0111\uffc9\u0123\uffc9\001\002\000\064\010\uffcf\011\uffcf" +
    "\046\uffcf\051\uffcf\052\uffcf\056\uffcf\065\uffcf\113\uffcf\114" +
    "\uffcf\115\uffcf\134\uffcf\150\uffcf\215\uffcf\220\uffcf\243\uffcf" +
    "\312\uffcf\314\uffcf\325\uffcf\u0100\uffcf\u010b\uffcf\u010c\uffcf\u010f" +
    "\uffcf\u0110\uffcf\u0111\uffcf\u0123\uffcf\001\002\000\004\270\176" +
    "\001\002\000\004\u0110\173\001\002\000\020\010\ufe21\046" +
    "\ufe21\051\ufe21\312\ufe21\u0100\ufe21\u010c\ufe21\u0123\165\001\002" +
    "\000\004\011\163\001\002\000\004\u0110\156\001\002\000" +
    "\064\010\uffce\011\uffce\046\uffce\051\uffce\052\uffce\056\uffce" +
    "\065\uffce\113\uffce\114\uffce\115\uffce\134\uffce\150\uffce\215" +
    "\uffce\220\uffce\243\uffce\312\uffce\314\uffce\325\uffce\u0100\uffce" +
    "\u010b\uffce\u010c\uffce\u010f\uffce\u0110\153\u0111\uffce\u0123\uffce\001" +
    "\002\000\064\010\uffbb\011\uffbb\046\uffbb\051\uffbb\052\uffbb" +
    "\056\uffbb\065\uffbb\113\uffbb\114\uffbb\115\uffbb\134\uffbb\150" +
    "\uffbb\215\uffbb\220\uffbb\243\uffbb\312\uffbb\314\uffbb\325\uffbb" +
    "\u0100\uffbb\u010b\uffbb\u010c\uffbb\u010f\uffbb\u0110\uffbb\u0111\uffbb\u0123" +
    "\uffbb\001\002\000\064\010\uffd3\011\uffd3\046\uffd3\051\uffd3" +
    "\052\uffd3\056\uffd3\065\uffd3\113\uffd3\114\uffd3\115\uffd3\134" +
    "\uffd3\150\uffd3\215\uffd3\220\uffd3\243\uffd3\312\uffd3\314\uffd3" +
    "\325\uffd3\u0100\uffd3\u010b\uffd3\u010c\uffd3\u010f\uffd3\u0110\uffd3\u0111" +
    "\uffd3\u0123\uffd3\001\002\000\064\010\uffd5\011\uffd5\046\uffd5" +
    "\051\uffd5\052\uffd5\056\uffd5\065\uffd5\113\uffd5\114\uffd5\115" +
    "\uffd5\134\uffd5\150\uffd5\215\uffd5\220\uffd5\243\uffd5\312\uffd5" +
    "\314\uffd5\325\uffd5\u0100\uffd5\u010b\uffd5\u010c\uffd5\u010f\uffd5\u0110" +
    "\uffd5\u0111\uffd5\u0123\uffd5\001\002\000\012\046\ufe26\051\ufe26" +
    "\312\ufe26\u010c\151\001\002\000\064\010\uffc6\011\uffc6\046" +
    "\uffc6\051\uffc6\052\uffc6\056\uffc6\065\uffc6\113\uffc6\114\uffc6" +
    "\115\uffc6\134\uffc6\150\uffc6\215\uffc6\220\uffc6\243\uffc6\312" +
    "\uffc6\314\uffc6\325\uffc6\u0100\uffc6\u010b\uffc6\u010c\uffc6\u010f\uffc6" +
    "\u0110\uffc6\u0111\uffc6\u0123\uffc6\001\002\000\064\010\uffc7\011" +
    "\uffc7\046\uffc7\051\uffc7\052\uffc7\056\uffc7\065\uffc7\113\uffc7" +
    "\114\uffc7\115\uffc7\134\uffc7\150\uffc7\215\uffc7\220\uffc7\243" +
    "\uffc7\312\uffc7\314\uffc7\325\uffc7\u0100\uffc7\u010b\uffc7\u010c\uffc7" +
    "\u010f\uffc7\u0110\uffc7\u0111\uffc7\u0123\uffc7\001\002\000\004\u0110" +
    "\143\001\002\000\064\010\uffc4\011\uffc4\046\uffc4\051\uffc4" +
    "\052\uffc4\056\uffc4\065\uffc4\113\uffc4\114\uffc4\115\uffc4\134" +
    "\uffc4\150\uffc4\215\uffc4\220\uffc4\243\uffc4\312\uffc4\314\uffc4" +
    "\325\uffc4\u0100\uffc4\u010b\uffc4\u010c\uffc4\u010f\uffc4\u0110\uffc4\u0111" +
    "\uffc4\u0123\uffc4\001\002\000\064\010\uffcc\011\uffcc\046\uffcc" +
    "\051\uffcc\052\uffcc\056\uffcc\065\uffcc\113\uffcc\114\uffcc\115" +
    "\uffcc\134\uffcc\150\uffcc\215\uffcc\220\uffcc\243\uffcc\312\uffcc" +
    "\314\uffcc\325\uffcc\u0100\uffcc\u010b\uffcc\u010c\uffcc\u010f\uffcc\u0110" +
    "\uffcc\u0111\uffcc\u0123\uffcc\001\002\000\064\010\uffd4\011\uffd4" +
    "\046\uffd4\051\uffd4\052\uffd4\056\uffd4\065\uffd4\113\uffd4\114" +
    "\uffd4\115\uffd4\134\uffd4\150\uffd4\215\uffd4\220\uffd4\243\uffd4" +
    "\312\uffd4\314\uffd4\325\uffd4\u0100\uffd4\u010b\uffd4\u010c\uffd4\u010f" +
    "\uffd4\u0110\uffd4\u0111\uffd4\u0123\uffd4\001\002\000\004\u0110\134" +
    "\001\002\000\064\010\uffc0\011\uffc0\046\uffc0\051\uffc0\052" +
    "\uffc0\056\uffc0\065\uffc0\113\uffc0\114\uffc0\115\uffc0\134\uffc0" +
    "\150\uffc0\215\uffc0\220\uffc0\243\uffc0\312\uffc0\314\uffc0\325" +
    "\uffc0\u0100\uffc0\u010b\uffc0\u010c\uffc0\u010f\uffc0\u0110\uffc0\u0111\uffc0" +
    "\u0123\uffc0\001\002\000\010\331\140\u0128\135\u012b\137\001" +
    "\002\000\036\046\ufe48\051\ufe48\233\ufe48\274\ufe48\312\ufe48" +
    "\325\ufe48\u010b\ufe48\u010c\ufe48\u0111\ufe48\u0117\ufe48\u0124\ufe48\u0127" +
    "\ufe48\u0128\ufe48\u012b\ufe48\001\002\000\004\u0111\142\001\002" +
    "\000\036\046\ufe47\051\ufe47\233\ufe47\274\ufe47\312\ufe47\325" +
    "\ufe47\u010b\ufe47\u010c\ufe47\u0111\ufe47\u0117\ufe47\u0124\ufe47\u0127\ufe47" +
    "\u0128\ufe47\u012b\ufe47\001\002\000\004\u0111\141\001\002\000" +
    "\064\010\uffbe\011\uffbe\046\uffbe\051\uffbe\052\uffbe\056\uffbe" +
    "\065\uffbe\113\uffbe\114\uffbe\115\uffbe\134\uffbe\150\uffbe\215" +
    "\uffbe\220\uffbe\243\uffbe\312\uffbe\314\uffbe\325\uffbe\u0100\uffbe" +
    "\u010b\uffbe\u010c\uffbe\u010f\uffbe\u0110\uffbe\u0111\uffbe\u0123\uffbe\001" +
    "\002\000\064\010\uffbf\011\uffbf\046\uffbf\051\uffbf\052\uffbf" +
    "\056\uffbf\065\uffbf\113\uffbf\114\uffbf\115\uffbf\134\uffbf\150" +
    "\uffbf\215\uffbf\220\uffbf\243\uffbf\312\uffbf\314\uffbf\325\uffbf" +
    "\u0100\uffbf\u010b\uffbf\u010c\uffbf\u010f\uffbf\u0110\uffbf\u0111\uffbf\u0123" +
    "\uffbf\001\002\000\006\u0128\135\u012b\137\001\002\000\004" +
    "\u010c\145\001\002\000\006\u0128\135\u012b\137\001\002\000" +
    "\004\u0111\147\001\002\000\064\010\uffd0\011\uffd0\046\uffd0" +
    "\051\uffd0\052\uffd0\056\uffd0\065\uffd0\113\uffd0\114\uffd0\115" +
    "\uffd0\134\uffd0\150\uffd0\215\uffd0\220\uffd0\243\uffd0\312\uffd0" +
    "\314\uffd0\325\uffd0\u0100\uffd0\u010b\uffd0\u010c\uffd0\u010f\uffd0\u0110" +
    "\uffd0\u0111\uffd0\u0123\uffd0\001\002\000\010\046\ufe28\051\ufe28" +
    "\312\ufe28\001\002\000\004\u0117\074\001\002\000\010\046" +
    "\ufe27\051\ufe27\312\ufe27\001\002\000\006\u0128\135\u012b\137" +
    "\001\002\000\004\u0111\155\001\002\000\064\010\uffcd\011" +
    "\uffcd\046\uffcd\051\uffcd\052\uffcd\056\uffcd\065\uffcd\113\uffcd" +
    "\114\uffcd\115\uffcd\134\uffcd\150\uffcd\215\uffcd\220\uffcd\243" +
    "\uffcd\312\uffcd\314\uffcd\325\uffcd\u0100\uffcd\u010b\uffcd\u010c\uffcd" +
    "\u010f\uffcd\u0110\uffcd\u0111\uffcd\u0123\uffcd\001\002\000\010\331" +
    "\160\u0128\135\u012b\137\001\002\000\004\u0111\162\001\002" +
    "\000\004\u0111\161\001\002\000\064\010\uffc2\011\uffc2\046" +
    "\uffc2\051\uffc2\052\uffc2\056\uffc2\065\uffc2\113\uffc2\114\uffc2" +
    "\115\uffc2\134\uffc2\150\uffc2\215\uffc2\220\uffc2\243\uffc2\312" +
    "\uffc2\314\uffc2\325\uffc2\u0100\uffc2\u010b\uffc2\u010c\uffc2\u010f\uffc2" +
    "\u0110\uffc2\u0111\uffc2\u0123\uffc2\001\002\000\064\010\uffc3\011" +
    "\uffc3\046\uffc3\051\uffc3\052\uffc3\056\uffc3\065\uffc3\113\uffc3" +
    "\114\uffc3\115\uffc3\134\uffc3\150\uffc3\215\uffc3\220\uffc3\243" +
    "\uffc3\312\uffc3\314\uffc3\325\uffc3\u0100\uffc3\u010b\uffc3\u010c\uffc3" +
    "\u010f\uffc3\u0110\uffc3\u0111\uffc3\u0123\uffc3\001\002\000\012\046" +
    "\ufe23\051\ufe23\312\ufe23\u010c\ufe23\001\002\000\016\010\167" +
    "\046\ufe1f\051\ufe1f\312\ufe1f\u0100\170\u010c\ufe1f\001\002\000" +
    "\004\233\166\001\002\000\022\010\ufe22\011\ufe22\046\ufe22" +
    "\051\ufe22\312\ufe22\u0100\ufe22\u010c\ufe22\u0111\ufe22\001\002\000" +
    "\012\046\ufe1e\051\ufe1e\312\ufe1e\u010c\ufe1e\001\002\000\012" +
    "\046\ufe1d\051\ufe1d\312\ufe1d\u010c\ufe1d\001\002\000\012\046" +
    "\ufe20\051\ufe20\312\ufe20\u010c\ufe20\001\002\000\012\046\ufe25" +
    "\051\ufe25\312\ufe25\u010c\ufe25\001\002\000\006\u0128\135\u012b" +
    "\137\001\002\000\004\u0111\175\001\002\000\064\010\uffc1" +
    "\011\uffc1\046\uffc1\051\uffc1\052\uffc1\056\uffc1\065\uffc1\113" +
    "\uffc1\114\uffc1\115\uffc1\134\uffc1\150\uffc1\215\uffc1\220\uffc1" +
    "\243\uffc1\312\uffc1\314\uffc1\325\uffc1\u0100\uffc1\u010b\uffc1\u010c" +
    "\uffc1\u010f\uffc1\u0110\uffc1\u0111\uffc1\u0123\uffc1\001\002\000\006" +
    "\010\167\u0100\170\001\002\000\012\046\ufe24\051\ufe24\312" +
    "\ufe24\u010c\ufe24\001\002\000\006\u0128\135\u012b\137\001\002" +
    "\000\004\u0111\202\001\002\000\064\010\uffc5\011\uffc5\046" +
    "\uffc5\051\uffc5\052\uffc5\056\uffc5\065\uffc5\113\uffc5\114\uffc5" +
    "\115\uffc5\134\uffc5\150\uffc5\215\uffc5\220\uffc5\243\uffc5\312" +
    "\uffc5\314\uffc5\325\uffc5\u0100\uffc5\u010b\uffc5\u010c\uffc5\u010f\uffc5" +
    "\u0110\uffc5\u0111\uffc5\u0123\uffc5\001\002\000\006\u0128\135\u012b" +
    "\137\001\002\000\004\u010c\205\001\002\000\006\u0128\135" +
    "\u012b\137\001\002\000\004\u0111\207\001\002\000\064\010" +
    "\uffd2\011\uffd2\046\uffd2\051\uffd2\052\uffd2\056\uffd2\065\uffd2" +
    "\113\uffd2\114\uffd2\115\uffd2\134\uffd2\150\uffd2\215\uffd2\220" +
    "\uffd2\243\uffd2\312\uffd2\314\uffd2\325\uffd2\u0100\uffd2\u010b\uffd2" +
    "\u010c\uffd2\u010f\uffd2\u0110\uffd2\u0111\uffd2\u0123\uffd2\001\002\000" +
    "\256\042\uffdb\046\uffdb\051\uffdb\054\uffdb\063\uffdb\066\uffdb" +
    "\070\uffdb\102\uffdb\103\uffdb\105\uffdb\127\uffdb\134\uffdb\135" +
    "\uffdb\151\uffdb\154\uffdb\165\uffdb\170\uffdb\214\uffdb\215\uffdb" +
    "\220\uffdb\233\uffdb\237\uffdb\244\uffdb\264\uffdb\267\uffdb\274" +
    "\uffdb\304\uffdb\312\uffdb\325\uffdb\326\uffdb\327\uffdb\330\uffdb" +
    "\331\uffdb\332\uffdb\337\uffdb\340\uffdb\341\uffdb\342\uffdb\343" +
    "\uffdb\344\uffdb\345\uffdb\346\uffdb\347\uffdb\350\uffdb\351\uffdb" +
    "\352\uffdb\353\uffdb\354\uffdb\355\uffdb\356\uffdb\357\uffdb\360" +
    "\uffdb\361\uffdb\362\uffdb\363\uffdb\364\uffdb\365\uffdb\366\uffdb" +
    "\367\uffdb\370\uffdb\u0100\uffdb\u0106\uffdb\u0107\uffdb\u0108\uffdb\u0109" +
    "\uffdb\u010b\uffdb\u010c\uffdb\u010e\uffdb\u0110\uffdb\u0111\uffdb\u0117\uffdb" +
    "\u011a\uffdb\u011b\uffdb\u011c\uffdb\u011d\uffdb\u011e\uffdb\u011f\uffdb\u0120" +
    "\uffdb\u0121\uffdb\u0122\uffdb\u0123\uffdb\u0124\uffdb\u0127\uffdb\u0128\uffdb" +
    "\u0129\uffdb\u012b\uffdb\001\002\000\006\046\231\051\ufe0d\001" +
    "\002\000\012\012\216\022\217\310\046\313\010\001\002" +
    "\000\010\046\ufe15\051\ufe15\u010c\226\001\002\000\006\046" +
    "\ufe1c\051\ufe1c\001\002\000\004\051\220\001\002\000\010" +
    "\046\ufe19\051\ufe19\u010c\ufe19\001\002\000\010\046\ufe18\051" +
    "\ufe18\u010c\ufe18\001\002\000\014\017\221\020\225\021\223" +
    "\u010e\064\u0129\065\001\002\000\014\046\ufe12\051\ufe12\065" +
    "\ufe12\072\ufe12\u010c\ufe12\001\002\000\014\046\ufe0f\051\ufe0f" +
    "\065\ufe0f\072\ufe0f\u010c\ufe0f\001\002\000\014\046\ufe10\051" +
    "\ufe10\065\ufe10\072\ufe10\u010c\ufe10\001\002\000\010\046\ufe17" +
    "\051\ufe17\u010c\ufe17\001\002\000\014\046\ufe11\051\ufe11\065" +
    "\ufe11\072\ufe11\u010c\ufe11\001\002\000\012\012\216\022\217" +
    "\310\046\313\010\001\002\000\006\046\ufe1a\051\ufe1a\001" +
    "\002\000\006\046\ufe16\051\ufe16\001\002\000\004\061\254" +
    "\001\002\000\004\051\233\001\002\000\014\065\237\133" +
    "\024\140\042\236\012\251\011\001\002\000\006\325\245" +
    "\u010b\244\001\002\000\006\325\ufe2f\u010b\ufe2f\001\002\000" +
    "\006\325\ufe0b\u010b\ufe0b\001\002\000\012\133\024\140\042" +
    "\236\012\251\011\001\002\000\004\274\242\001\002\000" +
    "\006\325\ufe0c\u010b\ufe0c\001\002\000\006\325\ufe0a\u010b\ufe0a" +
    "\001\002\000\020\133\024\140\042\236\012\251\011\274" +
    "\ufe07\325\ufe07\u010b\ufe07\001\002\000\072\002\uffe9\003\uffe9" +
    "\006\uffe9\037\uffe9\065\uffe9\071\uffe9\072\uffe9\106\uffe9\122" +
    "\uffe9\133\uffe9\140\uffe9\142\uffe9\167\uffe9\227\uffe9\230\uffe9" +
    "\236\uffe9\251\uffe9\263\uffe9\264\uffe9\274\uffe9\310\uffe9\313" +
    "\uffe9\322\uffe9\325\uffe9\u010b\uffe9\u010e\uffe9\u0117\uffe9\u0129\uffe9" +
    "\001\002\000\072\002\uffe8\003\uffe8\006\uffe8\037\uffe8\065" +
    "\uffe8\071\uffe8\072\uffe8\106\uffe8\122\uffe8\133\uffe8\140\uffe8" +
    "\142\uffe8\167\uffe8\227\uffe8\230\uffe8\236\uffe8\251\uffe8\263" +
    "\uffe8\264\uffe8\274\uffe8\310\uffe8\313\uffe8\322\uffe8\325\uffe8" +
    "\u010b\uffe8\u010e\uffe8\u0117\uffe8\u0129\uffe8\001\002\000\006\325" +
    "\245\u010b\244\001\002\000\010\274\ufe09\325\ufe09\u010b\ufe09" +
    "\001\002\000\020\133\024\140\042\236\012\251\011\274" +
    "\ufe05\325\ufe05\u010b\ufe05\001\002\000\006\325\245\u010b\244" +
    "\001\002\000\010\274\ufe08\325\ufe08\u010b\ufe08\001\002\000" +
    "\010\274\ufe06\325\ufe06\u010b\ufe06\001\002\000\004\051\ufe0e" +
    "\001\002\000\012\046\ufe2c\051\ufe2c\312\ufe2c\u0117\ufe2c\001" +
    "\002\000\212\004\uffe5\037\uffe5\042\uffe5\046\uffe5\051\uffe5" +
    "\052\uffe5\054\uffe5\056\uffe5\063\uffe5\066\uffe5\070\uffe5\102" +
    "\uffe5\103\uffe5\105\uffe5\115\uffe5\127\uffe5\134\uffe5\135\uffe5" +
    "\150\uffe5\151\uffe5\152\uffe5\154\uffe5\165\uffe5\170\uffe5\215" +
    "\uffe5\220\uffe5\233\uffe5\237\uffe5\243\uffe5\244\uffe5\263\uffe5" +
    "\264\uffe5\265\uffe5\267\uffe5\304\uffe5\312\uffe5\314\uffe5\325" +
    "\uffe5\326\uffe5\327\uffe5\330\uffe5\331\uffe5\332\uffe5\u0106\uffe5" +
    "\u0107\uffe5\u0108\uffe5\u0109\uffe5\u010b\uffe5\u010c\uffe5\u010e\uffe5\u0110" +
    "\uffe5\u0111\uffe5\u0117\uffe5\u011a\uffe5\u011b\uffe5\u011c\uffe5\u011d\uffe5" +
    "\u011e\uffe5\u011f\uffe5\u0120\uffe5\u0121\uffe5\u0122\uffe5\u0123\uffe5\u0124" +
    "\uffe5\u0127\uffe5\u0128\uffe5\u0129\uffe5\u012b\uffe5\001\002\000\006" +
    "\u010e\064\u0129\065\001\002\000\212\004\uffe4\037\uffe4\042" +
    "\uffe4\046\uffe4\051\uffe4\052\uffe4\054\uffe4\056\uffe4\063\uffe4" +
    "\066\uffe4\070\uffe4\102\uffe4\103\uffe4\105\uffe4\115\uffe4\127" +
    "\uffe4\134\uffe4\135\uffe4\150\uffe4\151\uffe4\152\uffe4\154\uffe4" +
    "\165\uffe4\170\uffe4\215\uffe4\220\uffe4\233\uffe4\237\uffe4\243" +
    "\uffe4\244\uffe4\263\uffe4\264\uffe4\265\uffe4\267\uffe4\304\uffe4" +
    "\312\uffe4\314\uffe4\325\uffe4\326\uffe4\327\uffe4\330\uffe4\331" +
    "\uffe4\332\uffe4\u0106\uffe4\u0107\uffe4\u0108\uffe4\u0109\uffe4\u010b\uffe4" +
    "\u010c\uffe4\u010e\uffe4\u0110\uffe4\u0111\uffe4\u0117\uffe4\u011a\uffe4\u011b" +
    "\uffe4\u011c\uffe4\u011d\uffe4\u011e\uffe4\u011f\uffe4\u0120\uffe4\u0121\uffe4" +
    "\u0122\uffe4\u0123\uffe4\u0124\uffe4\u0127\uffe4\u0128\uffe4\u0129\uffe4\u012b" +
    "\uffe4\001\002\000\004\u0110\262\001\002\000\006\u0111\ufe02" +
    "\u0117\074\001\002\000\004\u0111\300\001\002\000\006\u010c" +
    "\275\u0111\ufdfe\001\002\000\004\u0111\ufe03\001\002\000\070" +
    "\051\267\337\ufdfc\340\ufdfc\341\ufdfc\342\ufdfc\343\ufdfc\344" +
    "\ufdfc\345\ufdfc\346\ufdfc\347\ufdfc\350\ufdfc\351\ufdfc\352\ufdfc" +
    "\353\ufdfc\354\ufdfc\355\ufdfc\356\ufdfc\357\ufdfc\360\ufdfc\361" +
    "\ufdfc\362\ufdfc\363\ufdfc\364\ufdfc\365\ufdfc\366\ufdfc\367\ufdfc" +
    "\370\ufdfc\001\002\000\072\065\ufdfd\072\ufdfd\337\ufdfd\340" +
    "\ufdfd\341\ufdfd\342\ufdfd\343\ufdfd\344\ufdfd\345\ufdfd\346\ufdfd" +
    "\347\ufdfd\350\ufdfd\351\ufdfd\352\ufdfd\353\ufdfd\354\ufdfd\355" +
    "\ufdfd\356\ufdfd\357\ufdfd\360\ufdfd\361\ufdfd\362\ufdfd\363\ufdfd" +
    "\364\ufdfd\365\ufdfd\366\ufdfd\367\ufdfd\370\ufdfd\001\002\000" +
    "\066\337\105\340\101\341\122\342\131\343\121\344\104" +
    "\345\076\346\126\347\111\350\117\351\130\352\107\353" +
    "\102\354\110\355\100\356\125\357\124\360\106\361\127" +
    "\362\116\363\113\364\133\365\132\366\077\367\103\370" +
    "\120\001\002\000\012\011\ufe21\u010c\ufe21\u0111\ufe21\u0123\165" +
    "\001\002\000\010\011\274\u010c\ufdfa\u0111\ufdfa\001\002\000" +
    "\006\u010c\ufe00\u0111\ufe00\001\002\000\006\u010c\ufdfb\u0111\ufdfb" +
    "\001\002\000\004\u0117\074\001\002\000\004\u0111\ufe01\001" +
    "\002\000\004\u0111\ufdff\001\002\000\004\013\301\001\002" +
    "\000\070\174\305\337\105\340\101\341\122\342\131\343" +
    "\121\344\104\345\076\346\126\347\111\350\117\351\130" +
    "\352\107\353\102\354\110\355\100\356\125\357\124\360" +
    "\106\361\127\362\116\363\113\364\133\365\132\366\077" +
    "\367\103\370\120\001\002\000\006\325\ufdf8\u010b\ufdf8\001" +
    "\002\000\006\325\ufe04\u010b\ufe04\001\002\000\010\051\ufdf5" +
    "\065\ufdf5\312\310\001\002\000\010\051\ufdf5\072\ufdf5\312" +
    "\310\001\002\000\006\325\ufdf9\u010b\ufdf9\001\002\000\006" +
    "\051\267\072\ufdfc\001\002\000\014\012\316\013\312\014" +
    "\313\015\314\313\311\001\002\000\004\051\331\001\002" +
    "\000\004\220\325\001\002\000\012\051\ufdf1\065\ufdf1\072" +
    "\ufdf1\u010c\ufdf1\001\002\000\004\237\322\001\002\000\012" +
    "\051\ufdf3\065\ufdf3\072\ufdf3\u010c\320\001\002\000\012\051" +
    "\ufdf2\065\ufdf2\072\ufdf2\u010c\ufdf2\001\002\000\010\051\ufdf6" +
    "\065\ufdf6\072\ufdf6\001\002\000\012\051\ufdf5\065\ufdf5\072" +
    "\ufdf5\312\310\001\002\000\010\051\ufdf4\065\ufdf4\072\ufdf4" +
    "\001\002\000\004\220\323\001\002\000\004\u0101\324\001" +
    "\002\000\012\051\ufdef\065\ufdef\072\ufdef\u010c\ufdef\001\002" +
    "\000\004\237\326\001\002\000\004\220\327\001\002\000" +
    "\004\u0101\330\001\002\000\012\051\ufdf0\065\ufdf0\072\ufdf0" +
    "\u010c\ufdf0\001\002\000\014\017\221\020\225\021\223\u010e" +
    "\064\u0129\065\001\002\000\012\051\ufdee\065\ufdee\072\ufdee" +
    "\u010c\ufdee\001\002\000\004\072\334\001\002\000\006\133" +
    "\024\u0110\336\001\002\000\006\325\ufdf7\u010b\ufdf7\001\002" +
    "\000\004\133\024\001\002\000\006\325\ufdec\u010b\ufdec\001" +
    "\002\000\004\u0111\341\001\002\000\006\325\ufded\u010b\ufded" +
    "\001\002\000\006\051\267\065\ufdfc\001\002\000\004\065" +
    "\344\001\002\000\012\133\024\140\042\236\012\251\011" +
    "\001\002\000\006\325\245\u010b\244\001\002\000\004\072" +
    "\347\001\002\000\014\u0117\074\u0124\354\u0127\351\u0128\135" +
    "\u012b\137\001\002\000\004\274\355\001\002\000\004\274" +
    "\ufde8\001\002\000\004\274\ufde9\001\002\000\004\274\ufdea" +
    "\001\002\000\004\274\ufde7\001\002\000\006\325\ufdeb\u010b" +
    "\ufdeb\001\002\000\014\325\ufe57\u010b\ufe57\u010e\ufe57\u0117\ufe57" +
    "\u0129\ufe57\001\002\000\014\325\ufe4f\u010b\ufe4f\u010e\064\u0117" +
    "\074\u0129\065\001\002\000\014\325\ufe58\u010b\ufe58\u010e\ufe58" +
    "\u0117\ufe58\u0129\ufe58\001\002\000\010\312\ufe56\325\ufe56\u010b" +
    "\ufe56\001\002\000\006\325\ufe50\u010b\ufe50\001\002\000\006" +
    "\325\ufe51\u010b\ufe51\001\002\000\010\312\ufe55\325\ufe55\u010b" +
    "\ufe55\001\002\000\004\002\001\001\002\000\062\002\ufffe" +
    "\003\030\006\ufe49\037\015\065\023\071\ufe49\106\052\122" +
    "\041\133\024\140\042\142\047\167\043\227\006\230\034" +
    "\236\012\251\011\263\044\264\021\310\046\313\010\322" +
    "\ufe49\u010e\ufe3c\u0117\ufe3c\u0129\ufe3c\001\002\000\004\002\000" +
    "\001\002\000\006\325\ufe4e\u010b\ufe4e\001\002\000\014\325" +
    "\ufe52\u010b\ufe52\u010e\064\u0117\074\u0129\065\001\002\000\006" +
    "\325\ufe54\u010b\ufe54\001\002\000\006\325\ufe4d\u010b\ufe4d\001" +
    "\002\000\006\325\ufe53\u010b\ufe53\001\002\000\006\325\uffb5" +
    "\u010b\uffb5\001\002\000\010\124\u0109\u010e\ufe62\u0129\ufe62\001" +
    "\002\000\010\124\u0109\u010e\ufe62\u0129\ufe62\001\002\000\010" +
    "\124\u0109\u010e\ufe62\u0129\ufe62\001\002\000\006\325\uffb2\u010b" +
    "\uffb2\001\002\000\006\325\uffb6\u010b\uffb6\001\002\000\006" +
    "\325\uffb4\u010b\uffb4\001\002\000\010\124\u0109\u010e\ufe62\u0129" +
    "\ufe62\001\002\000\010\124\u0109\u010e\ufe62\u0129\ufe62\001\002" +
    "\000\006\325\uffb1\u010b\uffb1\001\002\000\006\325\uffb3\u010b" +
    "\uffb3\001\002\000\006\u010e\064\u0129\065\001\002\000\004" +
    "\316\u010b\001\002\000\006\u010e\ufe63\u0129\ufe63\001\002\000" +
    "\006\u010e\uffdc\u0129\uffdc\001\002\000\010\325\uffab\u010b\uffab" +
    "\u010c\u010e\001\002\000\006\325\uffad\u010b\uffad\001\002\000" +
    "\006\u010e\064\u0129\065\001\002\000\010\325\uffab\u010b\uffab" +
    "\u010c\u010e\001\002\000\006\325\uffac\u010b\uffac\001\002\000" +
    "\006\u010e\064\u0129\065\001\002\000\176\004\uffe0\037\uffe0" +
    "\042\uffe0\046\uffe0\051\uffe0\054\uffe0\063\uffe0\066\uffe0\070" +
    "\uffe0\102\uffe0\103\uffe0\105\uffe0\127\uffe0\134\uffe0\135\uffe0" +
    "\151\uffe0\152\uffe0\154\uffe0\165\uffe0\170\uffe0\215\uffe0\220" +
    "\uffe0\233\uffe0\237\uffe0\244\uffe0\263\uffe0\264\uffe0\265\uffe0" +
    "\267\uffe0\304\uffe0\325\uffe0\326\uffe0\327\uffe0\330\uffe0\331" +
    "\uffe0\332\uffe0\u0106\uffe0\u0107\uffe0\u0108\uffe0\u0109\uffe0\u010b\uffe0" +
    "\u010c\uffe0\u010d\u0119\u010e\uffe0\u0110\uffe0\u0111\uffe0\u0117\uffe0\u011a" +
    "\uffe0\u011b\uffe0\u011c\uffe0\u011d\uffe0\u011e\uffe0\u011f\uffe0\u0120\uffe0" +
    "\u0121\uffe0\u0122\uffe0\u0123\uffe0\u0124\uffe0\u0127\uffe0\u0128\uffe0\u0129" +
    "\uffe0\u012b\uffe0\001\002\000\010\325\uffae\u010b\uffae\u010c\u0115" +
    "\001\002\000\006\325\uffb0\u010b\uffb0\001\002\000\006\u010e" +
    "\064\u0129\065\001\002\000\010\325\uffae\u010b\uffae\u010c\u0115" +
    "\001\002\000\006\325\uffaf\u010b\uffaf\001\002\000\174\004" +
    "\uffe2\037\uffe2\042\uffe2\046\uffe2\051\uffe2\054\uffe2\063\uffe2" +
    "\066\uffe2\070\uffe2\102\uffe2\103\uffe2\105\uffe2\127\uffe2\134" +
    "\uffe2\135\uffe2\151\uffe2\152\uffe2\154\uffe2\165\uffe2\170\uffe2" +
    "\215\uffe2\220\uffe2\233\uffe2\237\uffe2\244\uffe2\263\uffe2\264" +
    "\uffe2\265\uffe2\267\uffe2\304\uffe2\325\uffe2\326\uffe2\327\uffe2" +
    "\330\uffe2\331\uffe2\332\uffe2\u0106\uffe2\u0107\uffe2\u0108\uffe2\u0109" +
    "\uffe2\u010b\uffe2\u010c\uffe2\u010e\uffe2\u0110\uffe2\u0111\uffe2\u0117\uffe2" +
    "\u011a\uffe2\u011b\uffe2\u011c\uffe2\u011d\uffe2\u011e\uffe2\u011f\uffe2\u0120" +
    "\uffe2\u0121\uffe2\u0122\uffe2\u0123\uffe2\u0124\uffe2\u0127\uffe2\u0128\uffe2" +
    "\u0129\uffe2\u012b\uffe2\001\002\000\006\u010e\064\u0129\065\001" +
    "\002\000\174\004\uffe1\037\uffe1\042\uffe1\046\uffe1\051\uffe1" +
    "\054\uffe1\063\uffe1\066\uffe1\070\uffe1\102\uffe1\103\uffe1\105" +
    "\uffe1\127\uffe1\134\uffe1\135\uffe1\151\uffe1\152\uffe1\154\uffe1" +
    "\165\uffe1\170\uffe1\215\uffe1\220\uffe1\233\uffe1\237\uffe1\244" +
    "\uffe1\263\uffe1\264\uffe1\265\uffe1\267\uffe1\304\uffe1\325\uffe1" +
    "\326\uffe1\327\uffe1\330\uffe1\331\uffe1\332\uffe1\u0106\uffe1\u0107" +
    "\uffe1\u0108\uffe1\u0109\uffe1\u010b\uffe1\u010c\uffe1\u010e\uffe1\u0110\uffe1" +
    "\u0111\uffe1\u0117\uffe1\u011a\uffe1\u011b\uffe1\u011c\uffe1\u011d\uffe1\u011e" +
    "\uffe1\u011f\uffe1\u0120\uffe1\u0121\uffe1\u0122\uffe1\u0123\uffe1\u0124\uffe1" +
    "\u0127\uffe1\u0128\uffe1\u0129\uffe1\u012b\uffe1\001\002\000\006\u010e" +
    "\064\u0129\065\001\002\000\006\325\uffaa\u010b\uffaa\001\002" +
    "\000\006\u010e\064\u0129\065\001\002\000\004\237\u0124\001" +
    "\002\000\010\325\uffa3\u010b\uffa3\u010c\u0120\001\002\000\006" +
    "\u010e\064\u0129\065\001\002\000\006\325\uffa6\u010b\uffa6\001" +
    "\002\000\010\325\uffa3\u010b\uffa3\u010c\u0120\001\002\000\006" +
    "\325\uffa4\u010b\uffa4\001\002\000\006\u010e\064\u0129\065\001" +
    "\002\000\010\325\uffa5\u010b\uffa5\u010c\uffa5\001\002\000\006" +
    "\u010e\064\u0129\065\001\002\000\010\325\uffa7\u010b\uffa7\u010c" +
    "\u0128\001\002\000\006\u010e\064\u0129\065\001\002\000\006" +
    "\325\uffa9\u010b\uffa9\001\002\000\010\325\uffa7\u010b\uffa7\u010c" +
    "\u0128\001\002\000\006\325\uffa8\u010b\uffa8\001\002\000\006" +
    "\325\uff11\u010b\uff11\001\002\000\006\325\uff13\u010b\uff13\001" +
    "\002\000\006\325\uff0f\u010b\uff0f\001\002\000\006\325\uff12" +
    "\u010b\uff12\001\002\000\006\325\uff14\u010b\uff14\001\002\000" +
    "\006\u010e\064\u0129\065\001\002\000\006\325\uff15\u010b\uff15" +
    "\001\002\000\006\u010e\064\u0129\065\001\002\000\010\126" +
    "\ufee6\132\ufee6\212\ufee6\001\002\000\010\126\u014b\132\ufea2" +
    "\212\u014a\001\002\000\006\u010e\064\u0129\065\001\002\000" +
    "\006\u010e\064\u0129\065\001\002\000\006\325\uff0e\u010b\uff0e" +
    "\001\002\000\006\325\uff10\u010b\uff10\001\002\000\004\u0110" +
    "\u013b\001\002\000\022\052\ufea8\115\ufea8\132\u0140\150\u0141" +
    "\243\ufea8\314\ufea8\u010e\064\u0129\065\001\002\000\012\325" +
    "\ufed0\u010b\ufed0\u010c\ufed0\u0111\ufed0\001\002\000\012\325\ufecf" +
    "\u010b\ufecf\u010c\ufecf\u0111\ufecf\001\002\000\006\u010c\u024a\u0111" +
    "\ufecc\001\002\000\012\325\ufece\u010b\ufece\u010c\ufece\u0111\ufece" +
    "\001\002\000\006\u010e\064\u0129\065\001\002\000\006\u010e" +
    "\064\u0129\065\001\002\000\070\337\105\340\101\341\122" +
    "\342\131\343\121\344\104\345\076\346\126\347\111\350" +
    "\117\351\130\352\107\353\102\354\110\355\100\356\125" +
    "\357\124\360\106\361\127\362\116\363\113\364\133\365" +
    "\132\366\077\367\103\370\120\u010e\u01f3\001\002\000\012" +
    "\052\u0144\115\u0145\243\u0148\314\u0146\001\002\000\004\157" +
    "\u01d6\001\002\000\010\215\u015b\220\u015c\u0110\ufed7\001\002" +
    "\000\004\157\u0158\001\002\000\012\325\ufe93\u010b\ufe93\u010c" +
    "\ufe93\u0111\ufe93\001\002\000\010\126\u014b\212\u014a\u0110\ufea2" +
    "\001\002\000\004\u0110\u014d\001\002\000\032\052\ufea3\056" +
    "\ufea3\115\ufea3\132\ufea3\150\ufea3\243\ufea3\314\ufea3\325\ufea3" +
    "\u010b\ufea3\u010c\ufea3\u0110\ufea3\u0111\ufea3\001\002\000\032\052" +
    "\ufea4\056\ufea4\115\ufea4\132\ufea4\150\ufea4\243\ufea4\314\ufea4" +
    "\325\ufea4\u010b\ufea4\u010c\ufea4\u0110\ufea4\u0111\ufea4\001\002\000" +
    "\012\325\ufe91\u010b\ufe91\u010c\ufe91\u0111\ufe91\001\002\000\006" +
    "\u010e\064\u0129\065\001\002\000\012\054\u0151\244\u0150\u010c" +
    "\uff55\u0111\uff55\001\002\000\006\u010c\u0153\u0111\ufe89\001\002" +
    "\000\050\046\uff56\220\uff56\325\uff56\326\uff56\327\uff56\330" +
    "\uff56\331\uff56\332\uff56\u010b\uff56\u010c\uff56\u010e\uff56\u0110\uff56" +
    "\u0111\uff56\u0117\uff56\u0124\uff56\u0127\uff56\u0128\uff56\u0129\uff56\u012b" +
    "\uff56\001\002\000\050\046\uff57\220\uff57\325\uff57\326\uff57" +
    "\327\uff57\330\uff57\331\uff57\332\uff57\u010b\uff57\u010c\uff57\u010e" +
    "\uff57\u0110\uff57\u0111\uff57\u0117\uff57\u0124\uff57\u0127\uff57\u0128\uff57" +
    "\u0129\uff57\u012b\uff57\001\002\000\004\u0111\u0157\001\002\000" +
    "\006\u010e\064\u0129\065\001\002\000\012\054\u0151\244\u0150" +
    "\u010c\uff55\u0111\uff55\001\002\000\006\u010c\u0153\u0111\ufe89\001" +
    "\002\000\004\u0111\ufe8a\001\002\000\012\325\ufe8e\u010b\ufe8e" +
    "\u010c\ufe8e\u0111\ufe8e\001\002\000\010\126\u014b\212\u014a\u0110" +
    "\ufea2\001\002\000\004\u0110\u014d\001\002\000\012\325\ufe92" +
    "\u010b\ufe92\u010c\ufe92\u0111\ufe92\001\002\000\006\046\u01cd\220" +
    "\u01ce\001\002\000\032\052\ufed8\056\ufed8\114\ufed8\115\ufed8" +
    "\150\ufed8\243\ufed8\314\ufed8\325\ufed8\u010b\ufed8\u010c\ufed8\u0110" +
    "\ufed8\u0111\ufed8\001\002\000\004\u0110\u015e\001\002\000\040" +
    "\215\u0160\220\uff80\326\uff80\327\uff80\330\uff80\331\uff80\332" +
    "\uff80\u010e\uff80\u0110\u0162\u0117\uff80\u0124\uff80\u0127\uff80\u0128\uff80" +
    "\u0129\uff80\u012b\uff80\001\002\000\036\220\u017c\326\u016e\327" +
    "\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a\u0117\074" +
    "\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002\000" +
    "\044\070\uff81\127\uff81\170\uff81\220\uff81\326\uff81\327\uff81" +
    "\330\uff81\331\uff81\332\uff81\u010e\uff81\u0110\uff81\u0117\uff81\u0124" +
    "\uff81\u0127\uff81\u0128\uff81\u0129\uff81\u012b\uff81\001\002\000\004" +
    "\u0111\u016a\001\002\000\040\215\u0160\220\uff80\326\uff80\327" +
    "\uff80\330\uff80\331\uff80\332\uff80\u010e\uff80\u0110\u0162\u0117\uff80" +
    "\u0124\uff80\u0127\uff80\u0128\uff80\u0129\uff80\u012b\uff80\001\002\000" +
    "\004\u0111\u0164\001\002\000\044\042\u0166\046\uff78\066\uff78" +
    "\102\uff78\103\uff78\105\uff78\135\uff78\154\uff78\165\uff78\237" +
    "\uff78\264\u0168\267\uff78\304\uff78\325\uff78\u010b\uff78\u010c\uff78" +
    "\u0111\uff78\001\002\000\040\046\uff7b\066\uff7b\102\uff7b\103" +
    "\uff7b\105\uff7b\135\uff7b\154\uff7b\165\uff7b\237\uff7b\267\uff7b" +
    "\304\uff7b\325\uff7b\u010b\uff7b\u010c\uff7b\u0111\uff7b\001\002\000" +
    "\040\215\uff65\220\uff65\326\uff65\327\uff65\330\uff65\331\uff65" +
    "\332\uff65\u010e\uff65\u0110\uff65\u0117\uff65\u0124\uff65\u0127\uff65\u0128" +
    "\uff65\u0129\uff65\u012b\uff65\001\002\000\040\215\u0160\220\uff80" +
    "\326\uff80\327\uff80\330\uff80\331\uff80\332\uff80\u010e\uff80\u0110" +
    "\u0162\u0117\uff80\u0124\uff80\u0127\uff80\u0128\uff80\u0129\uff80\u012b\uff80" +
    "\001\002\000\040\215\uff64\220\uff64\326\uff64\327\uff64\330" +
    "\uff64\331\uff64\332\uff64\u010e\uff64\u0110\uff64\u0117\uff64\u0124\uff64" +
    "\u0127\uff64\u0128\uff64\u0129\uff64\u012b\uff64\001\002\000\040\046" +
    "\uff79\066\uff79\102\uff79\103\uff79\105\uff79\135\uff79\154\uff79" +
    "\165\uff79\237\uff79\267\uff79\304\uff79\325\uff79\u010b\uff79\u010c" +
    "\uff79\u0111\uff79\001\002\000\012\325\ufe8f\u010b\ufe8f\u010c\ufe8f" +
    "\u0111\ufe8f\001\002\000\160\042\uff8f\046\uff8f\051\uff8f\054" +
    "\uff8f\063\uff8f\066\uff8f\070\uff8f\102\uff8f\103\uff8f\105\uff8f" +
    "\127\uff8f\134\uff8f\135\uff8f\151\uff8f\154\uff8f\165\uff8f\170" +
    "\uff8f\215\uff8f\220\uff8f\237\uff8f\244\uff8f\264\uff8f\267\uff8f" +
    "\304\uff8f\325\uff8f\326\uff8f\327\uff8f\330\uff8f\331\uff8f\332" +
    "\uff8f\u0106\uff8f\u0107\uff8f\u0108\uff8f\u0109\uff8f\u010b\uff8f\u010c\uff8f" +
    "\u010e\uff8f\u0110\uff8f\u0111\uff8f\u0117\uff8f\u011a\uff8f\u011b\uff8f\u011c" +
    "\uff8f\u011d\uff8f\u011e\uff8f\u011f\uff8f\u0120\uff8f\u0121\uff8f\u0122\uff8f" +
    "\u0123\uff8f\u0124\uff8f\u0127\uff8f\u0128\uff8f\u0129\uff8f\u012b\uff8f\001" +
    "\002\000\040\070\uff80\127\uff80\151\u01ae\170\uff80\215\u0160" +
    "\u011a\u01a3\u011b\u01a4\u011c\u01a7\u011d\u01a8\u011e\u01a5\u011f\u01aa\u0120" +
    "\u01a6\u0121\u01ab\u0122\u01af\u0123\u01a9\001\002\000\160\042\uff8d" +
    "\046\uff8d\051\uff8d\054\uff8d\063\uff8d\066\uff8d\070\uff8d\102" +
    "\uff8d\103\uff8d\105\uff8d\127\uff8d\134\uff8d\135\uff8d\151\uff8d" +
    "\154\uff8d\165\uff8d\170\uff8d\215\uff8d\220\uff8d\237\uff8d\244" +
    "\uff8d\264\uff8d\267\uff8d\304\uff8d\325\uff8d\326\uff8d\327\uff8d" +
    "\330\uff8d\331\uff8d\332\uff8d\u0106\uff8d\u0107\uff8d\u0108\uff8d\u0109" +
    "\uff8d\u010b\uff8d\u010c\uff8d\u010e\uff8d\u0110\uff8d\u0111\uff8d\u0117\uff8d" +
    "\u011a\uff8d\u011b\uff8d\u011c\uff8d\u011d\uff8d\u011e\uff8d\u011f\uff8d\u0120" +
    "\uff8d\u0121\uff8d\u0122\uff8d\u0123\uff8d\u0124\uff8d\u0127\uff8d\u0128\uff8d" +
    "\u0129\uff8d\u012b\uff8d\001\002\000\004\u0110\u01a0\001\002\000" +
    "\160\042\uff92\046\uff92\051\uff92\054\uff92\063\uff92\066\uff92" +
    "\070\uff92\102\uff92\103\uff92\105\uff92\127\uff92\134\uff92\135" +
    "\uff92\151\uff92\154\uff92\165\uff92\170\uff92\215\uff92\220\uff92" +
    "\237\uff92\244\uff92\264\uff92\267\uff92\304\uff92\325\uff92\326" +
    "\uff92\327\uff92\330\uff92\331\uff92\332\uff92\u0106\uff92\u0107\uff92" +
    "\u0108\uff92\u0109\uff92\u010b\uff92\u010c\uff92\u010e\uff92\u0110\uff92\u0111" +
    "\uff92\u0117\uff92\u011a\uff92\u011b\uff92\u011c\uff92\u011d\uff92\u011e\uff92" +
    "\u011f\uff92\u0120\uff92\u0121\uff92\u0122\uff92\u0123\uff92\u0124\uff92\u0127" +
    "\uff92\u0128\uff92\u0129\uff92\u012b\uff92\001\002\000\160\042\uff90" +
    "\046\uff90\051\uff90\054\uff90\063\uff90\066\uff90\070\uff90\102" +
    "\uff90\103\uff90\105\uff90\127\uff90\134\uff90\135\uff90\151\uff90" +
    "\154\uff90\165\uff90\170\uff90\215\uff90\220\uff90\237\uff90\244" +
    "\uff90\264\uff90\267\uff90\304\uff90\325\uff90\326\uff90\327\uff90" +
    "\330\uff90\331\uff90\332\uff90\u0106\uff90\u0107\uff90\u0108\uff90\u0109" +
    "\uff90\u010b\uff90\u010c\uff90\u010e\uff90\u0110\uff90\u0111\uff90\u0117\uff90" +
    "\u011a\uff90\u011b\uff90\u011c\uff90\u011d\uff90\u011e\uff90\u011f\uff90\u0120" +
    "\uff90\u0121\uff90\u0122\uff90\u0123\uff90\u0124\uff90\u0127\uff90\u0128\uff90" +
    "\u0129\uff90\u012b\uff90\001\002\000\160\042\uff91\046\uff91\051" +
    "\uff91\054\uff91\063\uff91\066\uff91\070\uff91\102\uff91\103\uff91" +
    "\105\uff91\127\uff91\134\uff91\135\uff91\151\uff91\154\uff91\165" +
    "\uff91\170\uff91\215\uff91\220\uff91\237\uff91\244\uff91\264\uff91" +
    "\267\uff91\304\uff91\325\uff91\326\uff91\327\uff91\330\uff91\331" +
    "\uff91\332\uff91\u0106\uff91\u0107\uff91\u0108\uff91\u0109\uff91\u010b\uff91" +
    "\u010c\uff91\u010e\uff91\u0110\uff91\u0111\uff91\u0117\uff91\u011a\uff91\u011b" +
    "\uff91\u011c\uff91\u011d\uff91\u011e\uff91\u011f\uff91\u0120\uff91\u0121\uff91" +
    "\u0122\uff91\u0123\uff91\u0124\uff91\u0127\uff91\u0128\uff91\u0129\uff91\u012b" +
    "\uff91\001\002\000\162\042\uffdd\046\uffdd\051\uffdd\054\uffdd" +
    "\063\uffdd\066\uffdd\070\uffdd\102\uffdd\103\uffdd\105\uffdd\127" +
    "\uffdd\134\uffdd\135\uffdd\151\uffdd\154\uffdd\165\uffdd\170\uffdd" +
    "\215\uffdd\220\uffdd\237\uffdd\244\uffdd\264\uffdd\267\uffdd\304" +
    "\uffdd\325\uffdd\326\uffdd\327\uffdd\330\uffdd\331\uffdd\332\uffdd" +
    "\u0106\uffdd\u0107\uffdd\u0108\uffdd\u0109\uffdd\u010b\uffdd\u010c\uffdd\u010d" +
    "\u019e\u010e\uffdd\u0110\uffdd\u0111\uffdd\u0117\uffdd\u011a\uffdd\u011b\uffdd" +
    "\u011c\uffdd\u011d\uffdd\u011e\uffdd\u011f\uffdd\u0120\uffdd\u0121\uffdd\u0122" +
    "\uffdd\u0123\uffdd\u0124\uffdd\u0127\uffdd\u0128\uffdd\u0129\uffdd\u012b\uffdd" +
    "\001\002\000\160\042\uff93\046\uff93\051\uff93\054\uff93\063" +
    "\uff93\066\uff93\070\uff93\102\uff93\103\uff93\105\uff93\127\uff93" +
    "\134\uff93\135\uff93\151\uff93\154\uff93\165\uff93\170\uff93\215" +
    "\uff93\220\uff93\237\uff93\244\uff93\264\uff93\267\uff93\304\uff93" +
    "\325\uff93\326\uff93\327\uff93\330\uff93\331\uff93\332\uff93\u0106" +
    "\uff93\u0107\uff93\u0108\uff93\u0109\uff93\u010b\uff93\u010c\uff93\u010e\uff93" +
    "\u0110\uff93\u0111\uff93\u0117\uff93\u011a\uff93\u011b\uff93\u011c\uff93\u011d" +
    "\uff93\u011e\uff93\u011f\uff93\u0120\uff93\u0121\uff93\u0122\uff93\u0123\uff93" +
    "\u0124\uff93\u0127\uff93\u0128\uff93\u0129\uff93\u012b\uff93\001\002\000" +
    "\160\042\uff95\046\uff95\051\uff95\054\uff95\063\uff95\066\uff95" +
    "\070\uff95\102\uff95\103\uff95\105\uff95\127\uff95\134\uff95\135" +
    "\uff95\151\uff95\154\uff95\165\uff95\170\uff95\215\uff95\220\uff95" +
    "\237\uff95\244\uff95\264\uff95\267\uff95\304\uff95\325\uff95\326" +
    "\uff95\327\uff95\330\uff95\331\uff95\332\uff95\u0106\uff95\u0107\uff95" +
    "\u0108\u0197\u0109\u0198\u010b\uff95\u010c\uff95\u010e\uff95\u0110\uff95\u0111" +
    "\uff95\u0117\uff95\u011a\uff95\u011b\uff95\u011c\uff95\u011d\uff95\u011e\uff95" +
    "\u011f\uff95\u0120\uff95\u0121\uff95\u0122\uff95\u0123\uff95\u0124\uff95\u0127" +
    "\uff95\u0128\uff95\u0129\uff95\u012b\uff95\001\002\000\044\042\u0166" +
    "\046\uff78\066\uff78\102\uff78\103\uff78\105\uff78\135\uff78\154" +
    "\uff78\165\uff78\237\uff78\264\u0168\267\uff78\304\uff78\325\uff78" +
    "\u010b\uff78\u010c\uff78\u0111\uff78\001\002\000\154\042\uff99\046" +
    "\uff99\051\uff99\054\uff99\063\uff99\066\uff99\070\uff99\102\uff99" +
    "\103\uff99\105\uff99\127\uff99\134\uff99\135\uff99\151\uff99\154" +
    "\uff99\165\uff99\170\uff99\215\uff99\220\uff99\237\uff99\244\uff99" +
    "\264\uff99\267\uff99\304\uff99\325\uff99\326\uff99\327\uff99\330" +
    "\uff99\331\uff99\332\uff99\u0106\u0190\u0107\u018f\u010b\uff99\u010c\uff99" +
    "\u010e\uff99\u0110\uff99\u0111\uff99\u0117\uff99\u011a\uff99\u011b\uff99\u011c" +
    "\uff99\u011d\uff99\u011e\uff99\u011f\uff99\u0120\uff99\u0121\uff99\u0122\uff99" +
    "\u0123\uff99\u0124\uff99\u0127\uff99\u0128\uff99\u0129\uff99\u012b\uff99\001" +
    "\002\000\004\u0110\u018c\001\002\000\004\u0110\u018a\001\002" +
    "\000\160\042\uff8e\046\uff8e\051\uff8e\054\uff8e\063\uff8e\066" +
    "\uff8e\070\uff8e\102\uff8e\103\uff8e\105\uff8e\127\uff8e\134\uff8e" +
    "\135\uff8e\151\uff8e\154\uff8e\165\uff8e\170\uff8e\215\uff8e\220" +
    "\uff8e\237\uff8e\244\uff8e\264\uff8e\267\uff8e\304\uff8e\325\uff8e" +
    "\326\uff8e\327\uff8e\330\uff8e\331\uff8e\332\uff8e\u0106\uff8e\u0107" +
    "\uff8e\u0108\uff8e\u0109\uff8e\u010b\uff8e\u010c\uff8e\u010e\uff8e\u0110\uff8e" +
    "\u0111\uff8e\u0117\uff8e\u011a\uff8e\u011b\uff8e\u011c\uff8e\u011d\uff8e\u011e" +
    "\uff8e\u011f\uff8e\u0120\uff8e\u0121\uff8e\u0122\uff8e\u0123\uff8e\u0124\uff8e" +
    "\u0127\uff8e\u0128\uff8e\u0129\uff8e\u012b\uff8e\001\002\000\036\220" +
    "\u017c\326\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064" +
    "\u0110\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b" +
    "\u0179\001\002\000\004\u0110\u0186\001\002\000\160\042\uff8c" +
    "\046\uff8c\051\uff8c\054\uff8c\063\uff8c\066\uff8c\070\uff8c\102" +
    "\uff8c\103\uff8c\105\uff8c\127\uff8c\134\uff8c\135\uff8c\151\uff8c" +
    "\154\uff8c\165\uff8c\170\uff8c\215\uff8c\220\uff8c\237\uff8c\244" +
    "\uff8c\264\uff8c\267\uff8c\304\uff8c\325\uff8c\326\uff8c\327\uff8c" +
    "\330\uff8c\331\uff8c\332\uff8c\u0106\uff8c\u0107\uff8c\u0108\uff8c\u0109" +
    "\uff8c\u010b\uff8c\u010c\uff8c\u010e\uff8c\u0110\uff8c\u0111\uff8c\u0117\uff8c" +
    "\u011a\uff8c\u011b\uff8c\u011c\uff8c\u011d\uff8c\u011e\uff8c\u011f\uff8c\u0120" +
    "\uff8c\u0121\uff8c\u0122\uff8c\u0123\uff8c\u0124\uff8c\u0127\uff8c\u0128\uff8c" +
    "\u0129\uff8c\u012b\uff8c\001\002\000\004\u0110\u017e\001\002\000" +
    "\014\u0108\u017f\u010e\064\u0128\135\u0129\065\u012b\137\001\002" +
    "\000\004\u0111\u0185\001\002\000\004\u0111\u0184\001\002\000" +
    "\160\042\uff87\046\uff87\051\uff87\054\uff87\063\uff87\066\uff87" +
    "\070\uff87\102\uff87\103\uff87\105\uff87\127\uff87\134\uff87\135" +
    "\uff87\151\uff87\154\uff87\165\uff87\170\uff87\215\uff87\220\uff87" +
    "\237\uff87\244\uff87\264\uff87\267\uff87\304\uff87\325\uff87\326" +
    "\uff87\327\uff87\330\uff87\331\uff87\332\uff87\u0106\uff87\u0107\uff87" +
    "\u0108\uff87\u0109\uff87\u010b\uff87\u010c\uff87\u010e\uff87\u0110\uff87\u0111" +
    "\uff87\u0117\uff87\u011a\uff87\u011b\uff87\u011c\uff87\u011d\uff87\u011e\uff87" +
    "\u011f\uff87\u0120\uff87\u0121\uff87\u0122\uff87\u0123\uff87\u0124\uff87\u0127" +
    "\uff87\u0128\uff87\u0129\uff87\u012b\uff87\001\002\000\004\u0111\u0183" +
    "\001\002\000\160\042\uff86\046\uff86\051\uff86\054\uff86\063" +
    "\uff86\066\uff86\070\uff86\102\uff86\103\uff86\105\uff86\127\uff86" +
    "\134\uff86\135\uff86\151\uff86\154\uff86\165\uff86\170\uff86\215" +
    "\uff86\220\uff86\237\uff86\244\uff86\264\uff86\267\uff86\304\uff86" +
    "\325\uff86\326\uff86\327\uff86\330\uff86\331\uff86\332\uff86\u0106" +
    "\uff86\u0107\uff86\u0108\uff86\u0109\uff86\u010b\uff86\u010c\uff86\u010e\uff86" +
    "\u0110\uff86\u0111\uff86\u0117\uff86\u011a\uff86\u011b\uff86\u011c\uff86\u011d" +
    "\uff86\u011e\uff86\u011f\uff86\u0120\uff86\u0121\uff86\u0122\uff86\u0123\uff86" +
    "\u0124\uff86\u0127\uff86\u0128\uff86\u0129\uff86\u012b\uff86\001\002\000" +
    "\160\042\uff85\046\uff85\051\uff85\054\uff85\063\uff85\066\uff85" +
    "\070\uff85\102\uff85\103\uff85\105\uff85\127\uff85\134\uff85\135" +
    "\uff85\151\uff85\154\uff85\165\uff85\170\uff85\215\uff85\220\uff85" +
    "\237\uff85\244\uff85\264\uff85\267\uff85\304\uff85\325\uff85\326" +
    "\uff85\327\uff85\330\uff85\331\uff85\332\uff85\u0106\uff85\u0107\uff85" +
    "\u0108\uff85\u0109\uff85\u010b\uff85\u010c\uff85\u010e\uff85\u0110\uff85\u0111" +
    "\uff85\u0117\uff85\u011a\uff85\u011b\uff85\u011c\uff85\u011d\uff85\u011e\uff85" +
    "\u011f\uff85\u0120\uff85\u0121\uff85\u0122\uff85\u0123\uff85\u0124\uff85\u0127" +
    "\uff85\u0128\uff85\u0129\uff85\u012b\uff85\001\002\000\160\042\uff84" +
    "\046\uff84\051\uff84\054\uff84\063\uff84\066\uff84\070\uff84\102" +
    "\uff84\103\uff84\105\uff84\127\uff84\134\uff84\135\uff84\151\uff84" +
    "\154\uff84\165\uff84\170\uff84\215\uff84\220\uff84\237\uff84\244" +
    "\uff84\264\uff84\267\uff84\304\uff84\325\uff84\326\uff84\327\uff84" +
    "\330\uff84\331\uff84\332\uff84\u0106\uff84\u0107\uff84\u0108\uff84\u0109" +
    "\uff84\u010b\uff84\u010c\uff84\u010e\uff84\u0110\uff84\u0111\uff84\u0117\uff84" +
    "\u011a\uff84\u011b\uff84\u011c\uff84\u011d\uff84\u011e\uff84\u011f\uff84\u0120" +
    "\uff84\u0121\uff84\u0122\uff84\u0123\uff84\u0124\uff84\u0127\uff84\u0128\uff84" +
    "\u0129\uff84\u012b\uff84\001\002\000\014\u0108\u017f\u010e\064\u0128" +
    "\135\u0129\065\u012b\137\001\002\000\160\042\uff88\046\uff88" +
    "\051\uff88\054\uff88\063\uff88\066\uff88\070\uff88\102\uff88\103" +
    "\uff88\105\uff88\127\uff88\134\uff88\135\uff88\151\uff88\154\uff88" +
    "\165\uff88\170\uff88\215\uff88\220\uff88\237\uff88\244\uff88\264" +
    "\uff88\267\uff88\304\uff88\325\uff88\326\uff88\327\uff88\330\uff88" +
    "\331\uff88\332\uff88\u0106\uff88\u0107\uff88\u0108\uff88\u0109\uff88\u010b" +
    "\uff88\u010c\uff88\u010e\uff88\u0110\uff88\u0111\uff88\u0117\uff88\u011a\uff88" +
    "\u011b\uff88\u011c\uff88\u011d\uff88\u011e\uff88\u011f\uff88\u0120\uff88\u0121" +
    "\uff88\u0122\uff88\u0123\uff88\u0124\uff88\u0127\uff88\u0128\uff88\u0129\uff88" +
    "\u012b\uff88\001\002\000\004\u0111\u0189\001\002\000\160\042" +
    "\uff94\046\uff94\051\uff94\054\uff94\063\uff94\066\uff94\070\uff94" +
    "\102\uff94\103\uff94\105\uff94\127\uff94\134\uff94\135\uff94\151" +
    "\uff94\154\uff94\165\uff94\170\uff94\215\uff94\220\uff94\237\uff94" +
    "\244\uff94\264\uff94\267\uff94\304\uff94\325\uff94\326\uff94\327" +
    "\uff94\330\uff94\331\uff94\332\uff94\u0106\uff94\u0107\uff94\u0108\uff94" +
    "\u0109\uff94\u010b\uff94\u010c\uff94\u010e\uff94\u0110\uff94\u0111\uff94\u0117" +
    "\uff94\u011a\uff94\u011b\uff94\u011c\uff94\u011d\uff94\u011e\uff94\u011f\uff94" +
    "\u0120\uff94\u0121\uff94\u0122\uff94\u0123\uff94\u0124\uff94\u0127\uff94\u0128" +
    "\uff94\u0129\uff94\u012b\uff94\001\002\000\014\u0108\u017f\u010e\064" +
    "\u0128\135\u0129\065\u012b\137\001\002\000\160\042\uff89\046" +
    "\uff89\051\uff89\054\uff89\063\uff89\066\uff89\070\uff89\102\uff89" +
    "\103\uff89\105\uff89\127\uff89\134\uff89\135\uff89\151\uff89\154" +
    "\uff89\165\uff89\170\uff89\215\uff89\220\uff89\237\uff89\244\uff89" +
    "\264\uff89\267\uff89\304\uff89\325\uff89\326\uff89\327\uff89\330" +
    "\uff89\331\uff89\332\uff89\u0106\uff89\u0107\uff89\u0108\uff89\u0109\uff89" +
    "\u010b\uff89\u010c\uff89\u010e\uff89\u0110\uff89\u0111\uff89\u0117\uff89\u011a" +
    "\uff89\u011b\uff89\u011c\uff89\u011d\uff89\u011e\uff89\u011f\uff89\u0120\uff89" +
    "\u0121\uff89\u0122\uff89\u0123\uff89\u0124\uff89\u0127\uff89\u0128\uff89\u0129" +
    "\uff89\u012b\uff89\001\002\000\014\u0108\u017f\u010e\064\u0128\135" +
    "\u0129\065\u012b\137\001\002\000\160\042\uff8a\046\uff8a\051" +
    "\uff8a\054\uff8a\063\uff8a\066\uff8a\070\uff8a\102\uff8a\103\uff8a" +
    "\105\uff8a\127\uff8a\134\uff8a\135\uff8a\151\uff8a\154\uff8a\165" +
    "\uff8a\170\uff8a\215\uff8a\220\uff8a\237\uff8a\244\uff8a\264\uff8a" +
    "\267\uff8a\304\uff8a\325\uff8a\326\uff8a\327\uff8a\330\uff8a\331" +
    "\uff8a\332\uff8a\u0106\uff8a\u0107\uff8a\u0108\uff8a\u0109\uff8a\u010b\uff8a" +
    "\u010c\uff8a\u010e\uff8a\u0110\uff8a\u0111\uff8a\u0117\uff8a\u011a\uff8a\u011b" +
    "\uff8a\u011c\uff8a\u011d\uff8a\u011e\uff8a\u011f\uff8a\u0120\uff8a\u0121\uff8a" +
    "\u0122\uff8a\u0123\uff8a\u0124\uff8a\u0127\uff8a\u0128\uff8a\u0129\uff8a\u012b" +
    "\uff8a\001\002\000\150\042\uff9c\046\uff9c\051\uff9c\054\uff9c" +
    "\063\uff9c\066\uff9c\070\uff9c\102\uff9c\103\uff9c\105\uff9c\127" +
    "\uff9c\134\uff9c\135\uff9c\151\uff9c\154\uff9c\165\uff9c\170\uff9c" +
    "\215\uff9c\220\uff9c\237\uff9c\244\uff9c\264\uff9c\267\uff9c\304" +
    "\uff9c\325\uff9c\326\uff9c\327\uff9c\330\uff9c\331\uff9c\332\uff9c" +
    "\u010b\uff9c\u010c\uff9c\u010e\uff9c\u0110\uff9c\u0111\uff9c\u0117\uff9c\u011a" +
    "\uff9c\u011b\uff9c\u011c\uff9c\u011d\uff9c\u011e\uff9c\u011f\uff9c\u0120\uff9c" +
    "\u0121\uff9c\u0122\uff9c\u0123\uff9c\u0124\uff9c\u0127\uff9c\u0128\uff9c\u0129" +
    "\uff9c\u012b\uff9c\001\002\000\036\220\u017c\326\u016e\327\u0177" +
    "\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a\u0117\074\u0124" +
    "\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002\000\036" +
    "\220\u017c\326\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e" +
    "\064\u0110\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065" +
    "\u012b\u0179\001\002\000\154\042\uff99\046\uff99\051\uff99\054" +
    "\uff99\063\uff99\066\uff99\070\uff99\102\uff99\103\uff99\105\uff99" +
    "\127\uff99\134\uff99\135\uff99\151\uff99\154\uff99\165\uff99\170" +
    "\uff99\215\uff99\220\uff99\237\uff99\244\uff99\264\uff99\267\uff99" +
    "\304\uff99\325\uff99\326\uff99\327\uff99\330\uff99\331\uff99\332" +
    "\uff99\u0106\u0190\u0107\u018f\u010b\uff99\u010c\uff99\u010e\uff99\u0110\uff99" +
    "\u0111\uff99\u0117\uff99\u011a\uff99\u011b\uff99\u011c\uff99\u011d\uff99\u011e" +
    "\uff99\u011f\uff99\u0120\uff99\u0121\uff99\u0122\uff99\u0123\uff99\u0124\uff99" +
    "\u0127\uff99\u0128\uff99\u0129\uff99\u012b\uff99\001\002\000\150\042" +
    "\uff9b\046\uff9b\051\uff9b\054\uff9b\063\uff9b\066\uff9b\070\uff9b" +
    "\102\uff9b\103\uff9b\105\uff9b\127\uff9b\134\uff9b\135\uff9b\151" +
    "\uff9b\154\uff9b\165\uff9b\170\uff9b\215\uff9b\220\uff9b\237\uff9b" +
    "\244\uff9b\264\uff9b\267\uff9b\304\uff9b\325\uff9b\326\uff9b\327" +
    "\uff9b\330\uff9b\331\uff9b\332\uff9b\u010b\uff9b\u010c\uff9b\u010e\uff9b" +
    "\u0110\uff9b\u0111\uff9b\u0117\uff9b\u011a\uff9b\u011b\uff9b\u011c\uff9b\u011d" +
    "\uff9b\u011e\uff9b\u011f\uff9b\u0120\uff9b\u0121\uff9b\u0122\uff9b\u0123\uff9b" +
    "\u0124\uff9b\u0127\uff9b\u0128\uff9b\u0129\uff9b\u012b\uff9b\001\002\000" +
    "\154\042\uff99\046\uff99\051\uff99\054\uff99\063\uff99\066\uff99" +
    "\070\uff99\102\uff99\103\uff99\105\uff99\127\uff99\134\uff99\135" +
    "\uff99\151\uff99\154\uff99\165\uff99\170\uff99\215\uff99\220\uff99" +
    "\237\uff99\244\uff99\264\uff99\267\uff99\304\uff99\325\uff99\326" +
    "\uff99\327\uff99\330\uff99\331\uff99\332\uff99\u0106\u0190\u0107\u018f" +
    "\u010b\uff99\u010c\uff99\u010e\uff99\u0110\uff99\u0111\uff99\u0117\uff99\u011a" +
    "\uff99\u011b\uff99\u011c\uff99\u011d\uff99\u011e\uff99\u011f\uff99\u0120\uff99" +
    "\u0121\uff99\u0122\uff99\u0123\uff99\u0124\uff99\u0127\uff99\u0128\uff99\u0129" +
    "\uff99\u012b\uff99\001\002\000\150\042\uff9a\046\uff9a\051\uff9a" +
    "\054\uff9a\063\uff9a\066\uff9a\070\uff9a\102\uff9a\103\uff9a\105" +
    "\uff9a\127\uff9a\134\uff9a\135\uff9a\151\uff9a\154\uff9a\165\uff9a" +
    "\170\uff9a\215\uff9a\220\uff9a\237\uff9a\244\uff9a\264\uff9a\267" +
    "\uff9a\304\uff9a\325\uff9a\326\uff9a\327\uff9a\330\uff9a\331\uff9a" +
    "\332\uff9a\u010b\uff9a\u010c\uff9a\u010e\uff9a\u0110\uff9a\u0111\uff9a\u0117" +
    "\uff9a\u011a\uff9a\u011b\uff9a\u011c\uff9a\u011d\uff9a\u011e\uff9a\u011f\uff9a" +
    "\u0120\uff9a\u0121\uff9a\u0122\uff9a\u0123\uff9a\u0124\uff9a\u0127\uff9a\u0128" +
    "\uff9a\u0129\uff9a\u012b\uff9a\001\002\000\040\046\uff7a\066\uff7a" +
    "\102\uff7a\103\uff7a\105\uff7a\135\uff7a\154\uff7a\165\uff7a\237" +
    "\uff7a\267\uff7a\304\uff7a\325\uff7a\u010b\uff7a\u010c\uff7a\u0111\uff7a" +
    "\001\002\000\154\042\uff98\046\uff98\051\uff98\054\uff98\063" +
    "\uff98\066\uff98\070\uff98\102\uff98\103\uff98\105\uff98\127\uff98" +
    "\134\uff98\135\uff98\151\uff98\154\uff98\165\uff98\170\uff98\215" +
    "\uff98\220\uff98\237\uff98\244\uff98\264\uff98\267\uff98\304\uff98" +
    "\325\uff98\326\uff98\327\uff98\330\uff98\331\uff98\332\uff98\u0106" +
    "\uff98\u0107\uff98\u010b\uff98\u010c\uff98\u010e\uff98\u0110\uff98\u0111\uff98" +
    "\u0117\uff98\u011a\uff98\u011b\uff98\u011c\uff98\u011d\uff98\u011e\uff98\u011f" +
    "\uff98\u0120\uff98\u0121\uff98\u0122\uff98\u0123\uff98\u0124\uff98\u0127\uff98" +
    "\u0128\uff98\u0129\uff98\u012b\uff98\001\002\000\036\220\u017c\326" +
    "\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a" +
    "\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001" +
    "\002\000\036\220\u017c\326\u016e\327\u0177\330\u017d\331\u017b" +
    "\332\u0178\u010e\064\u0110\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128" +
    "\u0171\u0129\065\u012b\u0179\001\002\000\160\042\uff95\046\uff95" +
    "\051\uff95\054\uff95\063\uff95\066\uff95\070\uff95\102\uff95\103" +
    "\uff95\105\uff95\127\uff95\134\uff95\135\uff95\151\uff95\154\uff95" +
    "\165\uff95\170\uff95\215\uff95\220\uff95\237\uff95\244\uff95\264" +
    "\uff95\267\uff95\304\uff95\325\uff95\326\uff95\327\uff95\330\uff95" +
    "\331\uff95\332\uff95\u0106\uff95\u0107\uff95\u0108\u0197\u0109\u0198\u010b" +
    "\uff95\u010c\uff95\u010e\uff95\u0110\uff95\u0111\uff95\u0117\uff95\u011a\uff95" +
    "\u011b\uff95\u011c\uff95\u011d\uff95\u011e\uff95\u011f\uff95\u0120\uff95\u0121" +
    "\uff95\u0122\uff95\u0123\uff95\u0124\uff95\u0127\uff95\u0128\uff95\u0129\uff95" +
    "\u012b\uff95\001\002\000\154\042\uff96\046\uff96\051\uff96\054" +
    "\uff96\063\uff96\066\uff96\070\uff96\102\uff96\103\uff96\105\uff96" +
    "\127\uff96\134\uff96\135\uff96\151\uff96\154\uff96\165\uff96\170" +
    "\uff96\215\uff96\220\uff96\237\uff96\244\uff96\264\uff96\267\uff96" +
    "\304\uff96\325\uff96\326\uff96\327\uff96\330\uff96\331\uff96\332" +
    "\uff96\u0106\uff96\u0107\uff96\u010b\uff96\u010c\uff96\u010e\uff96\u0110\uff96" +
    "\u0111\uff96\u0117\uff96\u011a\uff96\u011b\uff96\u011c\uff96\u011d\uff96\u011e" +
    "\uff96\u011f\uff96\u0120\uff96\u0121\uff96\u0122\uff96\u0123\uff96\u0124\uff96" +
    "\u0127\uff96\u0128\uff96\u0129\uff96\u012b\uff96\001\002\000\160\042" +
    "\uff95\046\uff95\051\uff95\054\uff95\063\uff95\066\uff95\070\uff95" +
    "\102\uff95\103\uff95\105\uff95\127\uff95\134\uff95\135\uff95\151" +
    "\uff95\154\uff95\165\uff95\170\uff95\215\uff95\220\uff95\237\uff95" +
    "\244\uff95\264\uff95\267\uff95\304\uff95\325\uff95\326\uff95\327" +
    "\uff95\330\uff95\331\uff95\332\uff95\u0106\uff95\u0107\uff95\u0108\u0197" +
    "\u0109\u0198\u010b\uff95\u010c\uff95\u010e\uff95\u0110\uff95\u0111\uff95\u0117" +
    "\uff95\u011a\uff95\u011b\uff95\u011c\uff95\u011d\uff95\u011e\uff95\u011f\uff95" +
    "\u0120\uff95\u0121\uff95\u0122\uff95\u0123\uff95\u0124\uff95\u0127\uff95\u0128" +
    "\uff95\u0129\uff95\u012b\uff95\001\002\000\154\042\uff97\046\uff97" +
    "\051\uff97\054\uff97\063\uff97\066\uff97\070\uff97\102\uff97\103" +
    "\uff97\105\uff97\127\uff97\134\uff97\135\uff97\151\uff97\154\uff97" +
    "\165\uff97\170\uff97\215\uff97\220\uff97\237\uff97\244\uff97\264" +
    "\uff97\267\uff97\304\uff97\325\uff97\326\uff97\327\uff97\330\uff97" +
    "\331\uff97\332\uff97\u0106\uff97\u0107\uff97\u010b\uff97\u010c\uff97\u010e" +
    "\uff97\u0110\uff97\u0111\uff97\u0117\uff97\u011a\uff97\u011b\uff97\u011c\uff97" +
    "\u011d\uff97\u011e\uff97\u011f\uff97\u0120\uff97\u0121\uff97\u0122\uff97\u0123" +
    "\uff97\u0124\uff97\u0127\uff97\u0128\uff97\u0129\uff97\u012b\uff97\001\002" +
    "\000\160\042\uffdf\046\uffdf\051\uffdf\054\uffdf\063\uffdf\066" +
    "\uffdf\070\uffdf\102\uffdf\103\uffdf\105\uffdf\127\uffdf\134\uffdf" +
    "\135\uffdf\151\uffdf\154\uffdf\165\uffdf\170\uffdf\215\uffdf\220" +
    "\uffdf\237\uffdf\244\uffdf\264\uffdf\267\uffdf\304\uffdf\325\uffdf" +
    "\326\uffdf\327\uffdf\330\uffdf\331\uffdf\332\uffdf\u0106\uffdf\u0107" +
    "\uffdf\u0108\uffdf\u0109\uffdf\u010b\uffdf\u010c\uffdf\u010e\uffdf\u0110\uffdf" +
    "\u0111\uffdf\u0117\uffdf\u011a\uffdf\u011b\uffdf\u011c\uffdf\u011d\uffdf\u011e" +
    "\uffdf\u011f\uffdf\u0120\uffdf\u0121\uffdf\u0122\uffdf\u0123\uffdf\u0124\uffdf" +
    "\u0127\uffdf\u0128\uffdf\u0129\uffdf\u012b\uffdf\001\002\000\006\u010e" +
    "\064\u0129\065\001\002\000\160\042\uffde\046\uffde\051\uffde" +
    "\054\uffde\063\uffde\066\uffde\070\uffde\102\uffde\103\uffde\105" +
    "\uffde\127\uffde\134\uffde\135\uffde\151\uffde\154\uffde\165\uffde" +
    "\170\uffde\215\uffde\220\uffde\237\uffde\244\uffde\264\uffde\267" +
    "\uffde\304\uffde\325\uffde\326\uffde\327\uffde\330\uffde\331\uffde" +
    "\332\uffde\u0106\uffde\u0107\uffde\u0108\uffde\u0109\uffde\u010b\uffde\u010c" +
    "\uffde\u010e\uffde\u0110\uffde\u0111\uffde\u0117\uffde\u011a\uffde\u011b\uffde" +
    "\u011c\uffde\u011d\uffde\u011e\uffde\u011f\uffde\u0120\uffde\u0121\uffde\u0122" +
    "\uffde\u0123\uffde\u0124\uffde\u0127\uffde\u0128\uffde\u0129\uffde\u012b\uffde" +
    "\001\002\000\014\u0108\u017f\u010e\064\u0128\135\u0129\065\u012b" +
    "\137\001\002\000\160\042\uff8b\046\uff8b\051\uff8b\054\uff8b" +
    "\063\uff8b\066\uff8b\070\uff8b\102\uff8b\103\uff8b\105\uff8b\127" +
    "\uff8b\134\uff8b\135\uff8b\151\uff8b\154\uff8b\165\uff8b\170\uff8b" +
    "\215\uff8b\220\uff8b\237\uff8b\244\uff8b\264\uff8b\267\uff8b\304" +
    "\uff8b\325\uff8b\326\uff8b\327\uff8b\330\uff8b\331\uff8b\332\uff8b" +
    "\u0106\uff8b\u0107\uff8b\u0108\uff8b\u0109\uff8b\u010b\uff8b\u010c\uff8b\u010e" +
    "\uff8b\u0110\uff8b\u0111\uff8b\u0117\uff8b\u011a\uff8b\u011b\uff8b\u011c\uff8b" +
    "\u011d\uff8b\u011e\uff8b\u011f\uff8b\u0120\uff8b\u0121\uff8b\u0122\uff8b\u0123" +
    "\uff8b\u0124\uff8b\u0127\uff8b\u0128\uff8b\u0129\uff8b\u012b\uff8b\001\002" +
    "\000\010\070\u01be\127\u01bd\170\u01bc\001\002\000\036\220" +
    "\u017c\326\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064" +
    "\u0110\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b" +
    "\u0179\001\002\000\036\220\u017c\326\u016e\327\u0177\330\u017d" +
    "\331\u017b\332\u0178\u010e\064\u0110\u017a\u0117\074\u0124\u016b\u0127" +
    "\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002\000\036\220\u017c" +
    "\326\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110" +
    "\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179" +
    "\001\002\000\036\220\u017c\326\u016e\327\u0177\330\u017d\331" +
    "\u017b\332\u0178\u010e\064\u0110\u017a\u0117\074\u0124\u016b\u0127\u0170" +
    "\u0128\u0171\u0129\065\u012b\u0179\001\002\000\036\220\u017c\326" +
    "\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a" +
    "\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001" +
    "\002\000\036\220\u017c\326\u016e\327\u0177\330\u017d\331\u017b" +
    "\332\u0178\u010e\064\u0110\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128" +
    "\u0171\u0129\065\u012b\u0179\001\002\000\036\220\u017c\326\u016e" +
    "\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a\u0117" +
    "\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002" +
    "\000\036\220\u017c\326\u016e\327\u0177\330\u017d\331\u017b\332" +
    "\u0178\u010e\064\u0110\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171" +
    "\u0129\065\u012b\u0179\001\002\000\036\220\u017c\326\u016e\327" +
    "\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a\u0117\074" +
    "\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002\000" +
    "\044\042\uff6b\046\uff6b\066\uff6b\102\uff6b\103\uff6b\105\uff6b" +
    "\135\uff6b\154\uff6b\165\uff6b\237\uff6b\264\uff6b\267\uff6b\304" +
    "\uff6b\325\uff6b\u010b\uff6b\u010c\uff6b\u0111\uff6b\001\002\000\044" +
    "\042\uff77\046\uff77\066\uff77\102\uff77\103\uff77\105\uff77\135" +
    "\uff77\154\uff77\165\uff77\237\uff77\264\uff77\267\uff77\304\uff77" +
    "\325\uff77\u010b\uff77\u010c\uff77\u0111\uff77\001\002\000\006\215" +
    "\u0160\220\uff80\001\002\000\036\220\u017c\326\u016e\327\u0177" +
    "\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a\u0117\074\u0124" +
    "\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002\000\044" +
    "\042\uff6e\046\uff6e\066\uff6e\102\uff6e\103\uff6e\105\uff6e\135" +
    "\uff6e\154\uff6e\165\uff6e\237\uff6e\264\uff6e\267\uff6e\304\uff6e" +
    "\325\uff6e\u010b\uff6e\u010c\uff6e\u0111\uff6e\001\002\000\004\220" +
    "\u01b2\001\002\000\044\042\uff6c\046\uff6c\066\uff6c\102\uff6c" +
    "\103\uff6c\105\uff6c\135\uff6c\154\uff6c\165\uff6c\237\uff6c\264" +
    "\uff6c\267\uff6c\304\uff6c\325\uff6c\u010b\uff6c\u010c\uff6c\u0111\uff6c" +
    "\001\002\000\044\042\uff6f\046\uff6f\066\uff6f\102\uff6f\103" +
    "\uff6f\105\uff6f\135\uff6f\154\uff6f\165\uff6f\237\uff6f\264\uff6f" +
    "\267\uff6f\304\uff6f\325\uff6f\u010b\uff6f\u010c\uff6f\u0111\uff6f\001" +
    "\002\000\044\042\uff71\046\uff71\066\uff71\102\uff71\103\uff71" +
    "\105\uff71\135\uff71\154\uff71\165\uff71\237\uff71\264\uff71\267" +
    "\uff71\304\uff71\325\uff71\u010b\uff71\u010c\uff71\u0111\uff71\001\002" +
    "\000\044\042\uff6d\046\uff6d\066\uff6d\102\uff6d\103\uff6d\105" +
    "\uff6d\135\uff6d\154\uff6d\165\uff6d\237\uff6d\264\uff6d\267\uff6d" +
    "\304\uff6d\325\uff6d\u010b\uff6d\u010c\uff6d\u0111\uff6d\001\002\000" +
    "\044\042\uff73\046\uff73\066\uff73\102\uff73\103\uff73\105\uff73" +
    "\135\uff73\154\uff73\165\uff73\237\uff73\264\uff73\267\uff73\304" +
    "\uff73\325\uff73\u010b\uff73\u010c\uff73\u0111\uff73\001\002\000\044" +
    "\042\uff74\046\uff74\066\uff74\102\uff74\103\uff74\105\uff74\135" +
    "\uff74\154\uff74\165\uff74\237\uff74\264\uff74\267\uff74\304\uff74" +
    "\325\uff74\u010b\uff74\u010c\uff74\u0111\uff74\001\002\000\044\042" +
    "\uff70\046\uff70\066\uff70\102\uff70\103\uff70\105\uff70\135\uff70" +
    "\154\uff70\165\uff70\237\uff70\264\uff70\267\uff70\304\uff70\325" +
    "\uff70\u010b\uff70\u010c\uff70\u0111\uff70\001\002\000\044\042\uff72" +
    "\046\uff72\066\uff72\102\uff72\103\uff72\105\uff72\135\uff72\154" +
    "\uff72\165\uff72\237\uff72\264\uff72\267\uff72\304\uff72\325\uff72" +
    "\u010b\uff72\u010c\uff72\u0111\uff72\001\002\000\044\042\uff75\046" +
    "\uff75\066\uff75\102\uff75\103\uff75\105\uff75\135\uff75\154\uff75" +
    "\165\uff75\237\uff75\264\uff75\267\uff75\304\uff75\325\uff75\u010b" +
    "\uff75\u010c\uff75\u0111\uff75\001\002\000\044\042\uff76\046\uff76" +
    "\066\uff76\102\uff76\103\uff76\105\uff76\135\uff76\154\uff76\165" +
    "\uff76\237\uff76\264\uff76\267\uff76\304\uff76\325\uff76\u010b\uff76" +
    "\u010c\uff76\u0111\uff76\001\002\000\006\u010a\u01c9\u0124\uff66\001" +
    "\002\000\004\u0110\u01c2\001\002\000\036\220\u017c\326\u016e" +
    "\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a\u0117" +
    "\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002" +
    "\000\004\042\u01c0\001\002\000\036\220\u017c\326\u016e\327" +
    "\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a\u0117\074" +
    "\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002\000" +
    "\044\042\uff69\046\uff69\066\uff69\102\uff69\103\uff69\105\uff69" +
    "\135\uff69\154\uff69\165\uff69\237\uff69\264\uff69\267\uff69\304" +
    "\uff69\325\uff69\u010b\uff69\u010c\uff69\u0111\uff69\001\002\000\036" +
    "\220\u017c\326\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e" +
    "\064\u0110\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065" +
    "\u012b\u0179\001\002\000\006\u010c\u01c4\u0111\uff82\001\002\000" +
    "\036\220\u017c\326\u016e\327\u0177\330\u017d\331\u017b\332\u0178" +
    "\u010e\064\u0110\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129" +
    "\065\u012b\u0179\001\002\000\004\u0111\u01c6\001\002\000\044" +
    "\042\uff6a\046\uff6a\066\uff6a\102\uff6a\103\uff6a\105\uff6a\135" +
    "\uff6a\154\uff6a\165\uff6a\237\uff6a\264\uff6a\267\uff6a\304\uff6a" +
    "\325\uff6a\u010b\uff6a\u010c\uff6a\u0111\uff6a\001\002\000\006\u010c" +
    "\u01c4\u0111\uff82\001\002\000\004\u0111\uff83\001\002\000\046" +
    "\042\uff67\046\uff67\066\uff67\102\uff67\103\uff67\105\uff67\135" +
    "\uff67\154\uff67\165\uff67\237\uff67\264\uff67\267\uff67\304\uff67" +
    "\325\uff67\u010b\uff67\u010c\uff67\u0111\uff67\u0124\uff67\001\002\000" +
    "\004\u0124\u01cb\001\002\000\046\042\uff66\046\uff66\066\uff66" +
    "\102\uff66\103\uff66\105\uff66\135\uff66\154\uff66\165\uff66\237" +
    "\uff66\264\uff66\267\uff66\304\uff66\325\uff66\u010a\u01c9\u010b\uff66" +
    "\u010c\uff66\u0111\uff66\001\002\000\044\042\uff68\046\uff68\066" +
    "\uff68\102\uff68\103\uff68\105\uff68\135\uff68\154\uff68\165\uff68" +
    "\237\uff68\264\uff68\267\uff68\304\uff68\325\uff68\u010b\uff68\u010c" +
    "\uff68\u0111\uff68\001\002\000\004\061\u01d0\001\002\000\032" +
    "\052\ufed5\056\ufed5\114\ufed5\115\ufed5\150\ufed5\243\ufed5\314" +
    "\ufed5\325\ufed5\u010b\ufed5\u010c\ufed5\u0110\ufed5\u0111\ufed5\001\002" +
    "\000\032\052\ufed9\056\ufed9\114\ufed9\115\ufed9\150\ufed9\243" +
    "\ufed9\314\ufed9\325\ufed9\u010b\ufed9\u010c\ufed9\u0110\ufed9\u0111\ufed9" +
    "\001\002\000\036\052\ufed2\056\ufed2\114\ufed2\115\ufed2\150" +
    "\ufed2\215\u01d1\220\u01d3\243\ufed2\314\ufed2\325\ufed2\u010b\ufed2" +
    "\u010c\ufed2\u0110\ufed2\u0111\ufed2\001\002\000\004\220\u01d5\001" +
    "\002\000\032\052\ufed6\056\ufed6\114\ufed6\115\ufed6\150\ufed6" +
    "\243\ufed6\314\ufed6\325\ufed6\u010b\ufed6\u010c\ufed6\u0110\ufed6\u0111" +
    "\ufed6\001\002\000\032\052\ufed3\056\ufed3\114\ufed3\115\ufed3" +
    "\150\ufed3\243\ufed3\314\ufed3\325\ufed3\u010b\ufed3\u010c\ufed3\u0110" +
    "\ufed3\u0111\ufed3\001\002\000\032\052\ufed4\056\ufed4\114\ufed4" +
    "\115\ufed4\150\ufed4\243\ufed4\314\ufed4\325\ufed4\u010b\ufed4\u010c" +
    "\ufed4\u0110\ufed4\u0111\ufed4\001\002\000\032\052\ufed1\056\ufed1" +
    "\114\ufed1\115\ufed1\150\ufed1\243\ufed1\314\ufed1\325\ufed1\u010b" +
    "\ufed1\u010c\ufed1\u0110\ufed1\u0111\ufed1\001\002\000\004\u0110\u01d8" +
    "\001\002\000\004\056\u01df\001\002\000\006\u010e\064\u0129" +
    "\065\001\002\000\006\u010c\u01db\u0111\ufe8b\001\002\000\004" +
    "\u0111\u01de\001\002\000\006\u010e\064\u0129\065\001\002\000" +
    "\006\u010c\u01db\u0111\ufe8b\001\002\000\004\u0111\ufe8c\001\002" +
    "\000\004\056\ufe8d\001\002\000\006\u010e\064\u0129\065\001" +
    "\002\000\022\215\ufe9e\220\ufe9e\237\ufe9e\325\ufe9e\u010b\ufe9e" +
    "\u010c\ufe9e\u0110\u01e1\u0111\ufe9e\001\002\000\006\u010e\064\u0129" +
    "\065\001\002\000\020\215\ufe9c\220\ufe9c\237\u01e3\325\ufe9c" +
    "\u010b\ufe9c\u010c\ufe9c\u0111\ufe9c\001\002\000\006\236\u01e6\251" +
    "\u01e8\001\002\000\016\215\u015b\220\u015c\325\ufed7\u010b\ufed7" +
    "\u010c\ufed7\u0111\ufed7\001\002\000\012\325\ufe90\u010b\ufe90\u010c" +
    "\ufe90\u0111\ufe90\001\002\000\006\107\u01eb\152\u01ea\001\002" +
    "\000\034\052\ufe9c\056\ufe9c\115\ufe9c\150\ufe9c\215\ufe9c\220" +
    "\ufe9c\237\u01e3\243\ufe9c\314\ufe9c\325\ufe9c\u010b\ufe9c\u010c\ufe9c" +
    "\u0111\ufe9c\001\002\000\006\107\u01eb\152\u01ea\001\002\000" +
    "\034\052\ufe9a\056\ufe9a\115\ufe9a\150\ufe9a\215\ufe9a\220\ufe9a" +
    "\237\ufe9a\243\ufe9a\314\ufe9a\325\ufe9a\u010b\ufe9a\u010c\ufe9a\u0111" +
    "\ufe9a\001\002\000\006\220\u01ee\233\u01ec\001\002\000\034" +
    "\052\ufe99\056\ufe99\115\ufe99\150\ufe99\215\ufe99\220\ufe99\237" +
    "\ufe99\243\ufe99\314\ufe99\325\ufe99\u010b\ufe99\u010c\ufe99\u0111\ufe99" +
    "\001\002\000\034\052\ufe96\056\ufe96\115\ufe96\150\ufe96\215" +
    "\ufe96\220\ufe96\237\ufe96\243\ufe96\314\ufe96\325\ufe96\u010b\ufe96" +
    "\u010c\ufe96\u0111\ufe96\001\002\000\034\052\ufe98\056\ufe98\115" +
    "\ufe98\150\ufe98\215\ufe98\220\ufe98\237\ufe98\243\ufe98\314\ufe98" +
    "\325\ufe98\u010b\ufe98\u010c\ufe98\u0111\ufe98\001\002\000\034\052" +
    "\ufe97\056\ufe97\115\ufe97\150\ufe97\215\ufe97\220\ufe97\237\ufe97" +
    "\243\ufe97\314\ufe97\325\ufe97\u010b\ufe97\u010c\ufe97\u0111\ufe97\001" +
    "\002\000\032\052\ufe9d\056\ufe9d\115\ufe9d\150\ufe9d\215\ufe9d" +
    "\220\ufe9d\243\ufe9d\314\ufe9d\325\ufe9d\u010b\ufe9d\u010c\ufe9d\u0111" +
    "\ufe9d\001\002\000\034\052\ufe9b\056\ufe9b\115\ufe9b\150\ufe9b" +
    "\215\ufe9b\220\ufe9b\237\ufe9b\243\ufe9b\314\ufe9b\325\ufe9b\u010b" +
    "\ufe9b\u010c\ufe9b\u0111\ufe9b\001\002\000\004\u0111\u01f2\001\002" +
    "\000\034\052\ufe9f\056\ufe9f\115\ufe9f\150\ufe9f\215\ufe9f\220" +
    "\ufe9f\237\ufe9f\243\ufe9f\314\ufe9f\325\ufe9f\u010b\ufe9f\u010c\ufe9f" +
    "\u0111\ufe9f\001\002\000\066\337\105\340\101\341\122\342" +
    "\131\343\121\344\104\345\076\346\126\347\111\350\117" +
    "\351\130\352\107\353\102\354\110\355\100\356\125\357" +
    "\124\360\106\361\127\362\116\363\113\364\133\365\132" +
    "\366\077\367\103\370\120\001\002\000\044\046\uffd9\052" +
    "\uffd9\056\uffd9\113\uffd9\114\uffd9\115\uffd9\134\uffd9\150\uffd9" +
    "\215\uffd9\220\uffd9\243\uffd9\314\uffd9\325\uffd9\u010b\uffd9\u010c" +
    "\uffd9\u0110\uffd9\u0111\uffd9\001\002\000\044\046\uffb9\052\uffb9" +
    "\056\uffb9\113\uffb9\114\uffb9\115\uffb9\134\uffb9\150\uffb9\215" +
    "\uffb9\220\uffb9\243\uffb9\314\uffb9\325\uffb9\u010b\uffb9\u010c\uffb9" +
    "\u0110\u023d\u0111\uffb9\001\002\000\042\046\ufec9\052\ufec9\056" +
    "\ufec9\113\ufec9\114\ufec9\115\ufec9\134\u01f7\150\ufec9\215\ufec9" +
    "\220\ufec9\243\ufec9\314\ufec9\325\ufec9\u010b\ufec9\u010c\ufec9\u0111" +
    "\ufec9\001\002\000\006\u010e\064\u0129\065\001\002\000\040" +
    "\046\ufeb2\052\ufea8\056\ufea8\113\u01f9\114\u01fc\115\ufea8\150" +
    "\u01fb\215\u01fd\220\ufeb2\243\ufea8\314\ufea8\325\ufebd\u010b\ufebd" +
    "\u010c\ufebd\u0111\ufebd\001\002\000\036\052\ufec0\056\ufec0\114" +
    "\ufec0\115\ufec0\150\ufec0\215\ufec0\220\ufec0\243\ufec0\314\ufec0" +
    "\325\ufec0\u010b\ufec0\u010c\ufec0\u0110\u0230\u0111\ufec0\001\002\000" +
    "\014\052\u020d\056\ufea0\115\u020f\243\u0212\314\u0211\001\002" +
    "\000\006\u010e\064\u0129\065\001\002\000\026\052\ufea8\056" +
    "\ufea8\115\ufea8\150\u0141\243\ufea8\314\ufea8\325\ufeaa\u010b\ufeaa" +
    "\u010c\ufeaa\u0111\ufeaa\001\002\000\006\046\ufeb3\220\ufeb3\001" +
    "\002\000\006\046\u0202\220\u0203\001\002\000\012\325\ufebe" +
    "\u010b\ufebe\u010c\ufebe\u0111\ufebe\001\002\000\012\325\ufecb\u010b" +
    "\ufecb\u010c\ufecb\u0111\ufecb\001\002\000\030\052\ufec2\056\ufec2" +
    "\114\u0209\115\ufec2\150\ufec2\243\ufec2\314\ufec2\325\ufec2\u010b" +
    "\ufec2\u010c\ufec2\u0111\ufec2\001\002\000\004\061\u0204\001\002" +
    "\000\030\052\ufeb1\056\ufeb1\114\ufeb1\115\ufeb1\150\ufeb1\243" +
    "\ufeb1\314\ufeb1\325\ufeb1\u010b\ufeb1\u010c\ufeb1\u0111\ufeb1\001\002" +
    "\000\034\052\ufead\056\ufead\114\ufead\115\ufead\150\ufead\215" +
    "\u0205\220\u0206\243\ufead\314\ufead\325\ufead\u010b\ufead\u010c\ufead" +
    "\u0111\ufead\001\002\000\004\220\u0208\001\002\000\030\052" +
    "\ufeae\056\ufeae\114\ufeae\115\ufeae\150\ufeae\243\ufeae\314\ufeae" +
    "\325\ufeae\u010b\ufeae\u010c\ufeae\u0111\ufeae\001\002\000\030\052" +
    "\ufeb0\056\ufeb0\114\ufeb0\115\ufeb0\150\ufeb0\243\ufeb0\314\ufeb0" +
    "\325\ufeb0\u010b\ufeb0\u010c\ufeb0\u0111\ufeb0\001\002\000\030\052" +
    "\ufeaf\056\ufeaf\114\ufeaf\115\ufeaf\150\ufeaf\243\ufeaf\314\ufeaf" +
    "\325\ufeaf\u010b\ufeaf\u010c\ufeaf\u0111\ufeaf\001\002\000\026\052" +
    "\ufec3\056\ufec3\115\ufec3\150\ufec3\243\ufec3\314\ufec3\325\ufec3" +
    "\u010b\ufec3\u010c\ufec3\u0111\ufec3\001\002\000\026\052\ufea8\056" +
    "\ufea8\115\ufea8\150\u0141\243\ufea8\314\ufea8\325\ufeaa\u010b\ufeaa" +
    "\u010c\ufeaa\u0111\ufeaa\001\002\000\014\052\u020d\056\ufea0\115" +
    "\u020f\243\u0212\314\u0211\001\002\000\012\325\ufebb\u010b\ufebb" +
    "\u010c\ufebb\u0111\ufebb\001\002\000\004\157\u0220\001\002\000" +
    "\026\052\ufea8\056\ufea8\115\ufea8\150\u0141\243\ufea8\314\ufea8" +
    "\325\ufeaa\u010b\ufeaa\u010c\ufeaa\u0111\ufeaa\001\002\000\010\215" +
    "\u015b\220\u015c\u0110\ufed7\001\002\000\032\052\ufea2\056\ufea2" +
    "\115\ufea2\126\u014b\150\ufea2\212\u014a\243\ufea2\314\ufea2\325" +
    "\ufea2\u010b\ufea2\u010c\ufea2\u0111\ufea2\001\002\000\004\157\u0219" +
    "\001\002\000\032\052\ufe94\056\ufe94\115\ufe94\126\ufe94\150" +
    "\ufe94\212\ufe94\243\ufe94\314\ufe94\325\ufe94\u010b\ufe94\u010c\ufe94" +
    "\u0111\ufe94\001\002\000\004\056\u0214\001\002\000\006\u010e" +
    "\064\u0129\065\001\002\000\036\052\ufe9e\056\ufe9e\115\ufe9e" +
    "\150\ufe9e\215\ufe9e\220\ufe9e\237\ufe9e\243\ufe9e\314\ufe9e\325" +
    "\ufe9e\u010b\ufe9e\u010c\ufe9e\u0110\u01e1\u0111\ufe9e\001\002\000\034" +
    "\052\ufe9c\056\ufe9c\115\ufe9c\150\ufe9c\215\ufe9c\220\ufe9c\237" +
    "\u01e3\243\ufe9c\314\ufe9c\325\ufe9c\u010b\ufe9c\u010c\ufe9c\u0111\ufe9c" +
    "\001\002\000\032\052\ufed7\056\ufed7\115\ufed7\150\ufed7\215" +
    "\u015b\220\u015c\243\ufed7\314\ufed7\325\ufed7\u010b\ufed7\u010c\ufed7" +
    "\u0111\ufed7\001\002\000\026\052\ufea6\056\ufea6\115\ufea6\150" +
    "\ufea6\243\ufea6\314\ufea6\325\ufea6\u010b\ufea6\u010c\ufea6\u0111\ufea6" +
    "\001\002\000\032\052\ufe95\056\ufe95\115\ufe95\126\ufe95\150" +
    "\ufe95\212\ufe95\243\ufe95\314\ufe95\325\ufe95\u010b\ufe95\u010c\ufe95" +
    "\u0111\ufe95\001\002\000\026\052\ufea7\056\ufea7\115\ufea7\150" +
    "\ufea7\243\ufea7\314\ufea7\325\ufea7\u010b\ufea7\u010c\ufea7\u0111\ufea7" +
    "\001\002\000\004\u0110\u021c\001\002\000\040\215\u0160\220" +
    "\uff80\326\uff80\327\uff80\330\uff80\331\uff80\332\uff80\u010e\uff80" +
    "\u0110\u0162\u0117\uff80\u0124\uff80\u0127\uff80\u0128\uff80\u0129\uff80\u012b" +
    "\uff80\001\002\000\004\u0111\u021e\001\002\000\026\052\ufea5" +
    "\056\ufea5\115\ufea5\150\ufea5\243\ufea5\314\ufea5\325\ufea5\u010b" +
    "\ufea5\u010c\ufea5\u0111\ufea5\001\002\000\012\325\ufeab\u010b\ufeab" +
    "\u010c\ufeab\u0111\ufeab\001\002\000\004\056\ufea1\001\002\000" +
    "\012\325\ufeba\u010b\ufeba\u010c\ufeba\u0111\ufeba\001\002\000\016" +
    "\052\ufea9\056\ufea9\115\ufea9\233\u0223\243\ufea9\314\ufea9\001" +
    "\002\000\014\220\u0229\u0124\u022a\u0127\u0226\u0128\u0225\u012b\u0227" +
    "\001\002\000\012\325\ufebf\u010b\ufebf\u010c\ufebf\u0111\ufebf\001" +
    "\002\000\036\052\ufeb8\056\ufeb8\113\ufeb8\114\ufeb8\115\ufeb8" +
    "\150\ufeb8\215\ufeb8\220\ufeb8\243\ufeb8\314\ufeb8\325\ufeb8\u010b" +
    "\ufeb8\u010c\ufeb8\u0111\ufeb8\001\002\000\036\052\ufeb7\056\ufeb7" +
    "\113\ufeb7\114\ufeb7\115\ufeb7\150\ufeb7\215\ufeb7\220\ufeb7\243" +
    "\ufeb7\314\ufeb7\325\ufeb7\u010b\ufeb7\u010c\ufeb7\u0111\ufeb7\001\002" +
    "\000\036\052\ufeb5\056\ufeb5\113\ufeb5\114\ufeb5\115\ufeb5\150" +
    "\ufeb5\215\ufeb5\220\ufeb5\243\ufeb5\314\ufeb5\325\ufeb5\u010b\ufeb5" +
    "\u010c\ufeb5\u0111\ufeb5\001\002\000\036\052\ufec7\056\ufec7\113" +
    "\u022b\114\ufec7\115\ufec7\150\ufec7\215\ufec7\220\ufec7\243\ufec7" +
    "\314\ufec7\325\ufec7\u010b\ufec7\u010c\ufec7\u0111\ufec7\001\002\000" +
    "\036\052\ufeb4\056\ufeb4\113\ufeb4\114\ufeb4\115\ufeb4\150\ufeb4" +
    "\215\ufeb4\220\ufeb4\243\ufeb4\314\ufeb4\325\ufeb4\u010b\ufeb4\u010c" +
    "\ufeb4\u0111\ufeb4\001\002\000\036\052\ufeb6\056\ufeb6\113\ufeb6" +
    "\114\ufeb6\115\ufeb6\150\ufeb6\215\ufeb6\220\ufeb6\243\ufeb6\314" +
    "\ufeb6\325\ufeb6\u010b\ufeb6\u010c\ufeb6\u0111\ufeb6\001\002\000\036" +
    "\052\ufec0\056\ufec0\114\ufec0\115\ufec0\150\ufec0\215\ufec0\220" +
    "\ufec0\243\ufec0\314\ufec0\325\ufec0\u010b\ufec0\u010c\ufec0\u0110\u0230" +
    "\u0111\ufec0\001\002\000\034\052\ufed7\056\ufed7\114\ufed7\115" +
    "\ufed7\150\ufed7\215\u015b\220\u015c\243\ufed7\314\ufed7\325\ufed7" +
    "\u010b\ufed7\u010c\ufed7\u0111\ufed7\001\002\000\030\052\ufec2\056" +
    "\ufec2\114\u0209\115\ufec2\150\ufec2\243\ufec2\314\ufec2\325\ufec2" +
    "\u010b\ufec2\u010c\ufec2\u0111\ufec2\001\002\000\026\052\ufea8\056" +
    "\ufea8\115\ufea8\150\u0141\243\ufea8\314\ufea8\325\ufeaa\u010b\ufeaa" +
    "\u010c\ufeaa\u0111\ufeaa\001\002\000\012\325\ufeac\u010b\ufeac\u010c" +
    "\ufeac\u0111\ufeac\001\002\000\004\u012b\u0232\001\002\000\034" +
    "\052\ufec8\056\ufec8\114\ufec8\115\ufec8\150\ufec8\215\ufec8\220" +
    "\ufec8\243\ufec8\314\ufec8\325\ufec8\u010b\ufec8\u010c\ufec8\u0111\ufec8" +
    "\001\002\000\004\u010c\u0233\001\002\000\004\u012b\u0234\001" +
    "\002\000\004\u0111\u0235\001\002\000\034\052\ufec1\056\ufec1" +
    "\114\ufec1\115\ufec1\150\ufec1\215\ufec1\220\ufec1\243\ufec1\314" +
    "\ufec1\325\ufec1\u010b\ufec1\u010c\ufec1\u0111\ufec1\001\002\000\026" +
    "\052\ufea8\056\ufea8\115\ufea8\150\u0141\243\ufea8\314\ufea8\325" +
    "\ufeaa\u010b\ufeaa\u010c\ufeaa\u0111\ufeaa\001\002\000\012\325\ufeb9" +
    "\u010b\ufeb9\u010c\ufeb9\u0111\ufeb9\001\002\000\034\052\ufed7\056" +
    "\ufed7\114\ufed7\115\ufed7\150\ufed7\215\u015b\220\u015c\243\ufed7" +
    "\314\ufed7\325\ufed7\u010b\ufed7\u010c\ufed7\u0111\ufed7\001\002\000" +
    "\030\052\ufec2\056\ufec2\114\u0209\115\ufec2\150\ufec2\243\ufec2" +
    "\314\ufec2\325\ufec2\u010b\ufec2\u010c\ufec2\u0111\ufec2\001\002\000" +
    "\026\052\ufea8\056\ufea8\115\ufea8\150\u0141\243\ufea8\314\ufea8" +
    "\325\ufeaa\u010b\ufeaa\u010c\ufeaa\u0111\ufeaa\001\002\000\012\325" +
    "\ufebc\u010b\ufebc\u010c\ufebc\u0111\ufebc\001\002\000\040\046\ufeca" +
    "\052\ufeca\056\ufeca\113\ufeca\114\ufeca\115\ufeca\150\ufeca\215" +
    "\ufeca\220\ufeca\243\ufeca\314\ufeca\325\ufeca\u010b\ufeca\u010c\ufeca" +
    "\u0111\ufeca\001\002\000\004\u0128\u023f\001\002\000\042\046" +
    "\uffda\052\uffda\056\uffda\113\uffda\114\uffda\115\uffda\134\uffda" +
    "\150\uffda\215\uffda\220\uffda\243\uffda\314\uffda\325\uffda\u010b" +
    "\uffda\u010c\uffda\u0111\uffda\001\002\000\006\u010c\u0240\u0111\uffb7" +
    "\001\002\000\004\u0128\u0243\001\002\000\004\u0111\u0242\001" +
    "\002\000\042\046\uffba\052\uffba\056\uffba\113\uffba\114\uffba" +
    "\115\uffba\134\uffba\150\uffba\215\uffba\220\uffba\243\uffba\314" +
    "\uffba\325\uffba\u010b\uffba\u010c\uffba\u0111\uffba\001\002\000\004" +
    "\u0111\uffb8\001\002\000\004\u010f\u0245\001\002\000\044\046" +
    "\uffd8\052\uffd8\056\uffd8\113\uffd8\114\uffd8\115\uffd8\134\uffd8" +
    "\150\uffd8\215\uffd8\220\uffd8\243\uffd8\314\uffd8\325\uffd8\u010b" +
    "\uffd8\u010c\uffd8\u0110\uffd8\u0111\uffd8\001\002\000\014\052\ufea9" +
    "\056\ufea9\115\ufea9\243\ufea9\314\ufea9\001\002\000\010\126" +
    "\u014b\212\u014a\u0110\ufea2\001\002\000\004\u0110\u014d\001\002" +
    "\000\012\325\ufe88\u010b\ufe88\u010c\ufe88\u0111\ufe88\001\002\000" +
    "\022\052\ufea8\115\ufea8\132\u0140\150\u0141\243\ufea8\314\ufea8" +
    "\u010e\064\u0129\065\001\002\000\004\u0111\u024c\001\002\000" +
    "\010\237\u024e\325\ufeda\u010b\ufeda\001\002\000\006\325\ufedc" +
    "\u010b\ufedc\001\002\000\004\314\u024f\001\002\000\006\325" +
    "\ufedb\u010b\ufedb\001\002\000\012\325\ufecc\u010b\ufecc\u010c\u024a" +
    "\u0111\ufecc\001\002\000\010\325\ufecd\u010b\ufecd\u0111\ufecd\001" +
    "\002\000\004\051\u0253\001\002\000\004\133\024\001\002" +
    "\000\006\325\ufee8\u010b\ufee8\001\002\000\004\132\u0256\001" +
    "\002\000\006\u010e\064\u0129\065\001\002\000\004\237\u0258" +
    "\001\002\000\006\u010e\064\u0129\065\001\002\000\004\u0110" +
    "\u025b\001\002\000\014\237\ufedf\304\ufedf\323\u0266\325\ufedf" +
    "\u010b\ufedf\001\002\000\006\u010e\064\u0129\065\001\002\000" +
    "\012\054\u0151\244\u0150\u010c\uff55\u0111\uff55\001\002\000\004" +
    "\u0111\u025e\001\002\000\014\237\ufee4\304\ufee4\323\ufee4\325" +
    "\ufee4\u010b\ufee4\001\002\000\006\u010c\u0260\u0111\ufee1\001\002" +
    "\000\006\u010e\064\u0129\065\001\002\000\004\u0111\ufee3\001" +
    "\002\000\012\054\u0151\244\u0150\u010c\uff55\u0111\uff55\001\002" +
    "\000\006\u010c\u0260\u0111\ufee1\001\002\000\004\u0111\ufee2\001" +
    "\002\000\012\237\uff62\304\u0270\325\uff62\u010b\uff62\001\002" +
    "\000\004\u0110\u0268\001\002\000\012\237\ufee0\304\ufee0\325" +
    "\ufee0\u010b\ufee0\001\002\000\006\u010e\064\u0129\065\001\002" +
    "\000\012\325\uff3a\u010b\uff3a\u010c\u026d\u0111\uff3a\001\002\000" +
    "\004\u0111\u026b\001\002\000\020\051\uff3d\233\uff3d\237\uff3d" +
    "\265\uff3d\304\uff3d\325\uff3d\u010b\uff3d\001\002\000\010\325" +
    "\uff3c\u010b\uff3c\u0111\uff3c\001\002\000\006\u010e\064\u0129\065" +
    "\001\002\000\012\325\uff3a\u010b\uff3a\u010c\u026d\u0111\uff3a\001" +
    "\002\000\010\325\uff3b\u010b\uff3b\u0111\uff3b\001\002\000\040" +
    "\215\u0160\220\uff80\326\uff80\327\uff80\330\uff80\331\uff80\332" +
    "\uff80\u010e\uff80\u0110\u0162\u0117\uff80\u0124\uff80\u0127\uff80\u0128\uff80" +
    "\u0129\uff80\u012b\uff80\001\002\000\010\237\u0272\325\ufedd\u010b" +
    "\ufedd\001\002\000\006\u010e\064\u0129\065\001\002\000\006" +
    "\325\ufee7\u010b\ufee7\001\002\000\004\u0110\u0275\001\002\000" +
    "\006\u010e\064\u0129\065\001\002\000\004\u0111\u0277\001\002" +
    "\000\006\325\ufede\u010b\ufede\001\002\000\022\046\uff63\102" +
    "\uff63\105\uff63\237\uff63\267\uff63\325\uff63\u010b\uff63\u0111\uff63" +
    "\001\002\000\006\325\uff0d\u010b\uff0d\001\002\000\012\134" +
    "\uff09\237\u027c\325\uff09\u010b\uff09\001\002\000\006\325\uff0c" +
    "\u010b\uff0c\001\002\000\006\314\u0281\u0110\uff05\001\002\000" +
    "\010\134\u027f\325\uff07\u010b\uff07\001\002\000\006\325\uff0b" +
    "\u010b\uff0b\001\002\000\006\u010e\064\u0129\065\001\002\000" +
    "\006\325\uff08\u010b\uff08\001\002\000\004\u0110\uff06\001\002" +
    "\000\004\u0110\u0284\001\002\000\012\134\uff03\325\uff03\u010b" +
    "\uff03\u010c\u02af\001\002\000\006\372\u0287\373\u0288\001\002" +
    "\000\010\134\uff0a\325\uff0a\u010b\uff0a\001\002\000\004\u0123" +
    "\u0289\001\002\000\004\u0123\uff01\001\002\000\004\u0123\uff00" +
    "\001\002\000\004\u0124\u028a\001\002\000\004\u010c\u028b\001" +
    "\002\000\006\040\u028e\371\u028d\001\002\000\004\u0123\u028f" +
    "\001\002\000\004\u0123\ufeff\001\002\000\004\u0123\ufefe\001" +
    "\002\000\004\u0124\u0290\001\002\000\006\u010c\u0291\u0111\ufefc" +
    "\001\002\000\010\374\u029a\375\u0299\376\u0296\001\002\000" +
    "\004\u0111\u0293\001\002\000\012\134\uff02\325\uff02\u010b\uff02" +
    "\u010c\uff02\001\002\000\006\u010c\ufefb\u0111\ufefb\001\002\000" +
    "\006\u010c\u0291\u0111\ufefc\001\002\000\004\u0123\u02a9\001\002" +
    "\000\006\u010c\ufef9\u0111\ufef9\001\002\000\006\u010c\ufefa\u0111" +
    "\ufefa\001\002\000\004\u0123\u02a3\001\002\000\004\u0123\u029b" +
    "\001\002\000\004\u0128\u029c\001\002\000\016\333\u02a0\334" +
    "\u02a1\335\u029f\336\u02a2\u010c\ufef6\u0111\ufef6\001\002\000\006" +
    "\u010c\ufef7\u0111\ufef7\001\002\000\006\u010c\ufef8\u0111\ufef8\001" +
    "\002\000\006\u010c\ufef2\u0111\ufef2\001\002\000\006\u010c\ufef5" +
    "\u0111\ufef5\001\002\000\006\u010c\ufef3\u0111\ufef3\001\002\000" +
    "\006\u010c\ufef4\u0111\ufef4\001\002\000\004\u0128\u02a4\001\002" +
    "\000\020\333\u02a0\334\u02a1\335\u029f\336\u02a2\377\u02a8\u010c" +
    "\ufeed\u0111\ufeed\001\002\000\006\u010c\ufef1\u0111\ufef1\001\002" +
    "\000\006\u010c\ufeef\u0111\ufeef\001\002\000\006\u010c\ufef0\u0111" +
    "\ufef0\001\002\000\006\u010c\ufeee\u0111\ufeee\001\002\000\004" +
    "\u0128\u02aa\001\002\000\020\333\u02a0\334\u02a1\335\u029f\336" +
    "\u02a2\u010a\u02ad\u010c\ufee9\u0111\ufee9\001\002\000\006\u010c\ufeeb" +
    "\u0111\ufeeb\001\002\000\006\u010c\ufeec\u0111\ufeec\001\002\000" +
    "\006\u010c\ufeea\u0111\ufeea\001\002\000\004\u0111\ufefd\001\002" +
    "\000\004\u0110\u0284\001\002\000\010\134\uff04\325\uff04\u010b" +
    "\uff04\001\002\000\010\146\u02b8\u010e\uff37\u0129\uff37\001\002" +
    "\000\004\u0110\u02b3\001\002\000\006\u0128\135\u012b\137\001" +
    "\002\000\004\u0111\u02b5\001\002\000\050\063\uff7c\146\uff7c" +
    "\220\uff7c\250\uff7c\300\u02b6\326\uff7c\327\uff7c\330\uff7c\331" +
    "\uff7c\332\uff7c\u0108\uff7c\u010e\uff7c\u0110\uff7c\u0117\uff7c\u0124\uff7c" +
    "\u0127\uff7c\u0128\uff7c\u0129\uff7c\u012b\uff7c\001\002\000\046\063" +
    "\uff7d\146\uff7d\220\uff7d\250\uff7d\326\uff7d\327\uff7d\330\uff7d" +
    "\331\uff7d\332\uff7d\u0108\uff7d\u010e\uff7d\u0110\uff7d\u0117\uff7d\u0124" +
    "\uff7d\u0127\uff7d\u0128\uff7d\u0129\uff7d\u012b\uff7d\001\002\000\046" +
    "\063\uff7f\146\uff7f\220\uff7f\250\uff7f\326\uff7f\327\uff7f\330" +
    "\uff7f\331\uff7f\332\uff7f\u0108\uff7f\u010e\uff7f\u0110\uff7f\u0117\uff7f" +
    "\u0124\uff7f\u0127\uff7f\u0128\uff7f\u0129\uff7f\u012b\uff7f\001\002\000" +
    "\006\u010e\uff38\u0129\uff38\001\002\000\006\u010e\064\u0129\065" +
    "\001\002\000\010\233\uff35\265\uff35\u0110\u0268\001\002\000" +
    "\006\233\uff36\265\uff36\001\002\000\006\233\u02bd\265\u02be" +
    "\001\002\000\004\265\u02d4\001\002\000\004\u0110\u02c0\001" +
    "\002\000\006\325\uff39\u010b\uff39\001\002\000\016\233\u02c4" +
    "\u0117\074\u0124\u02c3\u0127\u02c1\u0128\u02c2\u012b\u02c6\001\002\000" +
    "\006\u010c\uff31\u0111\uff31\001\002\000\006\u010c\uff32\u0111\uff32" +
    "\001\002\000\006\u010c\uff30\u0111\uff30\001\002\000\006\u010c" +
    "\uff33\u0111\uff33\001\002\000\004\u0111\u02cd\001\002\000\006" +
    "\u010c\uff2f\u0111\uff2f\001\002\000\006\u010c\uff2e\u0111\uff2e\001" +
    "\002\000\006\u010c\u02c9\u0111\uff2c\001\002\000\016\233\u02c4" +
    "\u0117\074\u0124\u02c3\u0127\u02c1\u0128\u02c2\u012b\u02c6\001\002\000" +
    "\004\u0111\uff34\001\002\000\006\u010c\u02c9\u0111\uff2c\001\002" +
    "\000\004\u0111\uff2d\001\002\000\010\325\uff28\u010b\uff28\u010c" +
    "\u02ce\001\002\000\004\u0110\u02d0\001\002\000\006\325\uff2b" +
    "\u010b\uff2b\001\002\000\016\233\u02c4\u0117\074\u0124\u02c3\u0127" +
    "\u02c1\u0128\u02c2\u012b\u02c6\001\002\000\004\u0111\u02d2\001\002" +
    "\000\010\325\uff28\u010b\uff28\u010c\u02ce\001\002\000\006\325" +
    "\uff29\u010b\uff29\001\002\000\006\325\uff2a\u010b\uff2a\001\002" +
    "\000\010\u010e\064\u0117\074\u0129\065\001\002\000\006\325" +
    "\ufe4b\u010b\ufe4b\001\002\000\004\214\u02d8\001\002\000\034" +
    "\024\ufde3\025\ufde3\026\ufde3\027\ufde3\030\ufde3\031\ufde3\032" +
    "\ufde3\033\ufde3\034\ufde3\046\ufde3\u0102\u02da\u0103\u02d9\u0104\ufde3" +
    "\001\002\000\030\024\ufde4\025\ufde4\026\ufde4\027\ufde4\030" +
    "\ufde4\031\ufde4\032\ufde4\033\ufde4\034\ufde4\046\ufde4\u0104\ufde4" +
    "\001\002\000\030\024\ufde5\025\ufde5\026\ufde5\027\ufde5\030" +
    "\ufde5\031\ufde5\032\ufde5\033\ufde5\034\ufde5\046\ufde5\u0104\ufde5" +
    "\001\002\000\030\024\u02dc\025\ufde0\026\ufde0\027\ufde0\030" +
    "\ufde0\031\ufde0\032\ufde0\033\ufde0\034\ufde0\046\ufde0\u0104\u02de" +
    "\001\002\000\024\025\ufde2\026\ufde2\027\ufde2\030\ufde2\031" +
    "\ufde2\032\ufde2\033\ufde2\034\ufde2\046\ufde2\001\002\000\024" +
    "\025\u02e0\026\u02e1\027\u02e2\030\u02e3\031\ufddb\032\ufddb\033" +
    "\ufddb\034\ufddb\046\ufddb\001\002\000\024\025\ufde1\026\ufde1" +
    "\027\ufde1\030\ufde1\031\ufde1\032\ufde1\033\ufde1\034\ufde1\046" +
    "\ufde1\001\002\000\014\031\u02e7\032\u02e6\033\u02e5\034\ufdd7" +
    "\046\ufdd7\001\002\000\014\031\ufddf\032\ufddf\033\ufddf\034" +
    "\ufddf\046\ufddf\001\002\000\014\031\ufdde\032\ufdde\033\ufdde" +
    "\034\ufdde\046\ufdde\001\002\000\014\031\ufddd\032\ufddd\033" +
    "\ufddd\034\ufddd\046\ufddd\001\002\000\014\031\ufddc\032\ufddc" +
    "\033\ufddc\034\ufddc\046\ufddc\001\002\000\006\034\u02e9\046" +
    "\ufdd5\001\002\000\006\034\ufdd8\046\ufdd8\001\002\000\006" +
    "\034\ufdd9\046\ufdd9\001\002\000\006\034\ufdda\046\ufdda\001" +
    "\002\000\004\046\u02ea\001\002\000\004\046\ufdd6\001\002" +
    "\000\004\133\024\001\002\000\010\046\u02ed\325\ufdd3\u010b" +
    "\ufdd3\001\002\000\006\325\ufde6\u010b\ufde6\001\002\000\004" +
    "\251\u02ee\001\002\000\010\226\u02ef\325\ufdd1\u010b\ufdd1\001" +
    "\002\000\006\u010e\064\u0129\065\001\002\000\006\325\ufdd4" +
    "\u010b\ufdd4\001\002\000\006\325\ufdd2\u010b\ufdd2\001\002\000" +
    "\062\002\ufffe\003\030\006\ufe49\037\015\065\023\071\ufe49" +
    "\106\052\122\041\133\024\140\042\142\047\167\043\227" +
    "\006\230\034\236\012\251\011\263\044\264\021\310\046" +
    "\313\010\322\ufe49\u010e\ufe3c\u0117\ufe3c\u0129\ufe3c\001\002\000" +
    "\004\002\uffff\001\002\000\010\u010e\064\u0117\074\u0129\065" +
    "\001\002\000\004\u0123\u02f6\001\002\000\010\u010e\ufe45\u0117" +
    "\ufe45\u0129\ufe45\001\002\000\024\233\ufe40\325\ufe40\u010b\u030b" +
    "\u010c\ufe40\u0117\ufe40\u0124\ufe40\u0127\ufe40\u0128\ufe40\u012b\ufe40\001" +
    "\002\000\024\233\ufe39\325\ufe39\u010b\ufe39\u010c\ufe39\u0117\074" +
    "\u0124\ufe39\u0127\ufe39\u0128\ufe39\u012b\ufe39\001\002\000\024\233" +
    "\ufe42\325\ufe42\u010b\ufe42\u010c\ufe42\u0117\ufe42\u0124\ufe42\u0127\ufe42" +
    "\u0128\ufe42\u012b\ufe42\001\002\000\024\233\u0305\325\ufe30\u010b" +
    "\ufe30\u010c\ufe30\u0117\074\u0124\u0304\u0127\u0303\u0128\135\u012b\137" +
    "\001\002\000\010\325\ufe3e\u010b\ufe3e\u010c\u02fe\001\002\000" +
    "\004\u0123\u02fd\001\002\000\024\233\ufe3a\325\ufe3a\u010b\ufe3a" +
    "\u010c\ufe3a\u0117\ufe3a\u0124\ufe3a\u0127\ufe3a\u0128\ufe3a\u012b\ufe3a\001" +
    "\002\000\024\233\ufe39\325\ufe39\u010b\ufe39\u010c\ufe39\u0117\074" +
    "\u0124\ufe39\u0127\ufe39\u0128\ufe39\u012b\ufe39\001\002\000\006\325" +
    "\ufe46\u010b\ufe46\001\002\000\010\325\ufe3e\u010b\ufe3e\u010c\u02fe" +
    "\001\002\000\006\325\ufe3f\u010b\ufe3f\001\002\000\010\325" +
    "\ufe3b\u010b\ufe3b\u010c\ufe3b\001\002\000\010\325\ufe37\u010b\ufe37" +
    "\u010c\ufe37\001\002\000\010\325\ufe36\u010b\ufe36\u010c\ufe36\001" +
    "\002\000\010\325\ufe31\u010b\ufe31\u010c\ufe31\001\002\000\010" +
    "\325\ufe38\u010b\ufe38\u010c\ufe38\001\002\000\012\325\ufe32\u0100" +
    "\u0309\u010b\ufe32\u010c\ufe32\001\002\000\010\325\ufe34\u010b\ufe34" +
    "\u010c\ufe34\001\002\000\010\325\ufe33\u010b\ufe33\u010c\ufe33\001" +
    "\002\000\010\325\ufe35\u010b\ufe35\u010c\ufe35\001\002\000\006" +
    "\u0128\135\u012b\137\001\002\000\024\233\ufe43\325\ufe43\u010b" +
    "\ufe43\u010c\ufe43\u0117\ufe43\u0124\ufe43\u0127\ufe43\u0128\ufe43\u012b\ufe43" +
    "\001\002\000\024\233\ufe41\325\ufe41\u010b\ufe41\u010c\ufe41\u0117" +
    "\ufe41\u0124\ufe41\u0127\ufe41\u0128\ufe41\u012b\ufe41\001\002\000\042" +
    "\213\uff5f\220\uff5f\326\uff5f\327\uff5f\330\uff5f\331\uff5f\332" +
    "\uff5f\u0108\uff5f\u010e\uff5f\u0110\uff5f\u0117\uff5f\u0124\uff5f\u0127\uff5f" +
    "\u0128\uff5f\u0129\uff5f\u012b\uff5f\001\002\000\042\213\u02b2\220" +
    "\uff7e\326\uff7e\327\uff7e\330\uff7e\331\uff7e\332\uff7e\u0108\uff7e" +
    "\u010e\uff7e\u0110\uff7e\u0117\uff7e\u0124\uff7e\u0127\uff7e\u0128\uff7e\u0129" +
    "\uff7e\u012b\uff7e\001\002\000\042\213\uff60\220\uff60\326\uff60" +
    "\327\uff60\330\uff60\331\uff60\332\uff60\u0108\uff60\u010e\uff60\u0110" +
    "\uff60\u0117\uff60\u0124\uff60\u0127\uff60\u0128\uff60\u0129\uff60\u012b\uff60" +
    "\001\002\000\040\220\u017c\326\u016e\327\u0177\330\u017d\331" +
    "\u017b\332\u0178\u0108\u0313\u010e\064\u0110\u017a\u0117\074\u0124\u016b" +
    "\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002\000\036\046" +
    "\uff9f\051\u031a\063\uff9f\102\uff9f\105\uff9f\267\uff9f\304\uff9f" +
    "\325\uff9f\u010b\uff9f\u010c\uff9f\u010e\064\u0111\uff9f\u0124\u031c\u0129" +
    "\065\001\002\000\026\046\uff3e\063\uff3e\102\uff3e\105\uff3e" +
    "\267\uff3e\304\uff3e\325\uff3e\u010b\uff3e\u010c\u034b\u0111\uff3e\001" +
    "\002\000\024\046\uff4d\063\u0316\102\uff4d\105\uff4d\267\uff4d" +
    "\304\uff4d\325\uff4d\u010b\uff4d\u0111\uff4d\001\002\000\022\046" +
    "\uff62\102\uff62\105\uff62\267\uff62\304\u0270\325\uff62\u010b\uff62" +
    "\u0111\uff62\001\002\000\006\u010e\064\u0129\065\001\002\000" +
    "\046\046\uff9f\051\u031a\066\uff9f\102\uff9f\103\uff9f\105\uff9f" +
    "\135\uff9f\154\uff9f\165\uff9f\267\uff9f\304\uff9f\325\uff9f\u010b" +
    "\uff9f\u010c\uff9f\u010e\064\u0111\uff9f\u0124\u031c\u0129\065\001\002" +
    "\000\042\046\uff9e\063\uff9e\066\uff9e\102\uff9e\103\uff9e\105" +
    "\uff9e\135\uff9e\154\uff9e\165\uff9e\237\uff9e\267\uff9e\304\uff9e" +
    "\325\uff9e\u010b\uff9e\u010c\uff9e\u0111\uff9e\001\002\000\036\046" +
    "\uff49\066\u0322\102\uff49\103\u0321\105\uff49\135\u031f\154\uff44" +
    "\165\u031e\267\uff49\304\uff49\325\uff49\u010b\uff49\u010c\uff49\u0111" +
    "\uff49\001\002\000\010\u010e\064\u0124\u031c\u0129\065\001\002" +
    "\000\042\046\uffa0\063\uffa0\066\uffa0\102\uffa0\103\uffa0\105" +
    "\uffa0\135\uffa0\154\uffa0\165\uffa0\237\uffa0\267\uffa0\304\uffa0" +
    "\325\uffa0\u010b\uffa0\u010c\uffa0\u0111\uffa0\001\002\000\042\046" +
    "\uff9d\063\uff9d\066\uff9d\102\uff9d\103\uff9d\105\uff9d\135\uff9d" +
    "\154\uff9d\165\uff9d\237\uff9d\267\uff9d\304\uff9d\325\uff9d\u010b" +
    "\uff9d\u010c\uff9d\u0111\uff9d\001\002\000\042\046\uffa1\063\uffa1" +
    "\066\uffa1\102\uffa1\103\uffa1\105\uffa1\135\uffa1\154\uffa1\165" +
    "\uffa1\237\uffa1\267\uffa1\304\uffa1\325\uffa1\u010b\uffa1\u010c\uffa1" +
    "\u0111\uffa1\001\002\000\006\154\uff42\272\u032a\001\002\000" +
    "\004\154\uff48\001\002\000\024\046\uff4b\102\uff4b\105\uff4b" +
    "\267\uff4b\304\uff4b\325\uff4b\u010b\uff4b\u010c\u032d\u0111\uff4b\001" +
    "\002\000\006\154\uff42\272\u032a\001\002\000\006\154\uff42" +
    "\272\u032a\001\002\000\004\154\u0324\001\002\000\006\u010e" +
    "\064\u0129\065\001\002\000\014\051\u031a\237\uff9f\u010e\064" +
    "\u0124\u031c\u0129\065\001\002\000\004\237\u0327\001\002\000" +
    "\040\215\u0160\220\uff80\326\uff80\327\uff80\330\uff80\331\uff80" +
    "\332\uff80\u010e\uff80\u0110\u0162\u0117\uff80\u0124\uff80\u0127\uff80\u0128" +
    "\uff80\u0129\uff80\u012b\uff80\001\002\000\036\046\uff49\066\u0322" +
    "\102\uff49\103\u0321\105\uff49\135\u031f\154\uff44\165\u031e\267" +
    "\uff49\304\uff49\325\uff49\u010b\uff49\u010c\uff49\u0111\uff49\001\002" +
    "\000\024\046\uff4a\102\uff4a\105\uff4a\267\uff4a\304\uff4a\325" +
    "\uff4a\u010b\uff4a\u010c\uff4a\u0111\uff4a\001\002\000\004\154\uff43" +
    "\001\002\000\004\154\uff45\001\002\000\004\154\uff47\001" +
    "\002\000\006\u010e\064\u0129\065\001\002\000\022\046\uff4e" +
    "\102\uff4e\105\uff4e\267\uff4e\304\uff4e\325\uff4e\u010b\uff4e\u0111" +
    "\uff4e\001\002\000\044\046\uff9f\051\u031a\066\uff9f\102\uff9f" +
    "\103\uff9f\105\uff9f\135\uff9f\154\uff9f\165\uff9f\267\uff9f\304" +
    "\uff9f\325\uff9f\u010b\uff9f\u010e\064\u0111\uff9f\u0124\u031c\u0129\065" +
    "\001\002\000\034\046\uff49\066\u0322\102\uff49\103\u0321\105" +
    "\uff49\135\u031f\154\uff44\165\u031e\267\uff49\304\uff49\325\uff49" +
    "\u010b\uff49\u0111\uff49\001\002\000\022\046\uff4c\102\uff4c\105" +
    "\uff4c\267\uff4c\304\uff4c\325\uff4c\u010b\uff4c\u0111\uff4c\001\002" +
    "\000\004\154\uff46\001\002\000\020\046\uff51\102\u0334\105" +
    "\uff51\267\uff51\325\uff51\u010b\uff51\u0111\uff51\001\002\000\004" +
    "\104\u0345\001\002\000\016\046\uff5c\105\u0336\267\uff5c\325" +
    "\uff5c\u010b\uff5c\u0111\uff5c\001\002\000\040\215\u0160\220\uff80" +
    "\326\uff80\327\uff80\330\uff80\331\uff80\332\uff80\u010e\uff80\u0110" +
    "\u0162\u0117\uff80\u0124\uff80\u0127\uff80\u0128\uff80\u0129\uff80\u012b\uff80" +
    "\001\002\000\014\046\uff5a\267\u0338\325\uff5a\u010b\uff5a\u0111" +
    "\uff5a\001\002\000\004\104\u033a\001\002\000\012\046\uff61" +
    "\325\uff61\u010b\uff61\u0111\uff61\001\002\000\036\220\u017c\326" +
    "\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a" +
    "\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001" +
    "\002\000\054\046\uff58\054\uff58\134\u033c\220\uff58\244\uff58" +
    "\325\uff58\326\uff58\327\uff58\330\uff58\331\uff58\332\uff58\u010b" +
    "\uff58\u010e\uff58\u0110\uff58\u0111\uff58\u0117\uff58\u0124\uff58\u0127\uff58" +
    "\u0128\uff58\u0129\uff58\u012b\uff58\001\002\000\006\u010e\064\u0129" +
    "\065\001\002\000\052\046\uff55\054\u0151\220\uff55\244\u0150" +
    "\325\uff55\326\uff55\327\uff55\330\uff55\331\uff55\332\uff55\u010b" +
    "\uff55\u010e\uff55\u0110\uff55\u0111\uff55\u0117\uff55\u0124\uff55\u0127\uff55" +
    "\u0128\uff55\u0129\uff55\u012b\uff55\001\002\000\046\046\uff53\220" +
    "\u017c\325\uff53\326\u016e\327\u0177\330\u017d\331\u017b\332\u0178" +
    "\u010b\uff53\u010e\064\u0110\u017a\u0111\uff53\u0117\074\u0124\u016b\u0127" +
    "\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002\000\020\046\uff58" +
    "\054\uff58\134\u033c\244\uff58\325\uff58\u010b\uff58\u0111\uff58\001" +
    "\002\000\012\046\uff5b\325\uff5b\u010b\uff5b\u0111\uff5b\001\002" +
    "\000\016\046\uff55\054\u0151\244\u0150\325\uff55\u010b\uff55\u0111" +
    "\uff55\001\002\000\012\046\uff54\325\uff54\u010b\uff54\u0111\uff54" +
    "\001\002\000\052\046\uff59\054\uff59\220\uff59\244\uff59\325" +
    "\uff59\326\uff59\327\uff59\330\uff59\331\uff59\332\uff59\u010b\uff59" +
    "\u010e\uff59\u0110\uff59\u0111\uff59\u0117\uff59\u0124\uff59\u0127\uff59\u0128" +
    "\uff59\u0129\uff59\u012b\uff59\001\002\000\014\046\uff5d\267\uff5d" +
    "\325\uff5d\u010b\uff5d\u0111\uff5d\001\002\000\036\220\u017c\326" +
    "\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a" +
    "\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001" +
    "\002\000\020\046\uff4f\105\uff4f\267\uff4f\325\uff4f\u010b\uff4f" +
    "\u010c\u0347\u0111\uff4f\001\002\000\036\220\u017c\326\u016e\327" +
    "\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110\u017a\u0117\074" +
    "\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179\001\002\000" +
    "\016\046\uff52\105\uff52\267\uff52\325\uff52\u010b\uff52\u0111\uff52" +
    "\001\002\000\020\046\uff4f\105\uff4f\267\uff4f\325\uff4f\u010b" +
    "\uff4f\u010c\u0347\u0111\uff4f\001\002\000\016\046\uff50\105\uff50" +
    "\267\uff50\325\uff50\u010b\uff50\u0111\uff50\001\002\000\036\220" +
    "\u017c\326\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064" +
    "\u0110\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b" +
    "\u0179\001\002\000\024\046\uff40\063\uff40\102\uff40\105\uff40" +
    "\267\uff40\304\uff40\325\uff40\u010b\uff40\u0111\uff40\001\002\000" +
    "\036\046\uff9f\051\u031a\063\uff9f\102\uff9f\105\uff9f\267\uff9f" +
    "\304\uff9f\325\uff9f\u010b\uff9f\u010c\uff9f\u010e\064\u0111\uff9f\u0124" +
    "\u031c\u0129\065\001\002\000\026\046\uff3e\063\uff3e\102\uff3e" +
    "\105\uff3e\267\uff3e\304\uff3e\325\uff3e\u010b\uff3e\u010c\u034b\u0111" +
    "\uff3e\001\002\000\024\046\uff3f\063\uff3f\102\uff3f\105\uff3f" +
    "\267\uff3f\304\uff3f\325\uff3f\u010b\uff3f\u0111\uff3f\001\002\000" +
    "\026\046\uff3e\063\uff3e\102\uff3e\105\uff3e\267\uff3e\304\uff3e" +
    "\325\uff3e\u010b\uff3e\u010c\u034b\u0111\uff3e\001\002\000\024\046" +
    "\uff41\063\uff41\102\uff41\105\uff41\267\uff41\304\uff41\325\uff41" +
    "\u010b\uff41\u0111\uff41\001\002\000\014\325\ufe5d\u010b\ufe5d\u010e" +
    "\064\u0117\074\u0129\065\001\002\000\010\312\u0355\325\ufe5b" +
    "\u010b\ufe5b\001\002\000\006\325\ufe5f\u010b\ufe5f\001\002\000" +
    "\004\023\u0357\001\002\000\006\325\ufe5e\u010b\ufe5e\001\002" +
    "\000\010\325\ufe59\u010b\ufe59\u0124\u0359\001\002\000\006\325" +
    "\ufe5c\u010b\ufe5c\001\002\000\006\325\ufe5a\u010b\ufe5a\001\002" +
    "\000\010\006\ufe4a\071\ufe4a\322\ufe4a\001\002\000\006\325" +
    "\ufe83\u010b\ufe83\001\002\000\006\325\ufe81\u010b\ufe81\001\002" +
    "\000\006\325\ufe82\u010b\ufe82\001\002\000\010\175\u0396\u010e" +
    "\064\u0129\065\001\002\000\006\325\ufe87\u010b\ufe87\001\002" +
    "\000\006\u010e\064\u0129\065\001\002\000\006\325\ufe86\u010b" +
    "\ufe86\001\002\000\006\u010e\064\u0129\065\001\002\000\006" +
    "\u010e\064\u0129\065\001\002\000\006\325\ufe84\u010b\ufe84\001" +
    "\002\000\006\325\ufe85\u010b\ufe85\001\002\000\010\004\u0369" +
    "\037\u0368\263\u036c\001\002\000\006\325\ufe76\u010b\ufe76\001" +
    "\002\000\004\137\u037d\001\002\000\022\052\ufea8\115\ufea8" +
    "\132\u0140\150\u0141\243\ufea8\314\ufea8\u010e\064\u0129\065\001" +
    "\002\000\006\325\ufe77\u010b\ufe77\001\002\000\006\325\ufe74" +
    "\u010b\ufe74\001\002\000\014\124\ufe66\137\u036f\150\u036e\u010e" +
    "\ufe66\u0129\ufe66\001\002\000\006\u010e\064\u0129\065\001\002" +
    "\000\010\124\ufe67\u010e\ufe67\u0129\ufe67\001\002\000\010\124" +
    "\u0109\u010e\ufe62\u0129\ufe62\001\002\000\010\124\u0109\u010e\ufe62" +
    "\u0129\ufe62\001\002\000\010\325\ufe68\u010b\ufe68\u010c\u0372\001" +
    "\002\000\014\124\ufe66\137\u036f\150\u036e\u010e\064\u0129\065" +
    "\001\002\000\006\325\ufe6b\u010b\ufe6b\001\002\000\010\325" +
    "\ufe65\u010b\ufe65\u010c\ufe65\001\002\000\010\325\ufe68\u010b\ufe68" +
    "\u010c\u0372\001\002\000\010\325\ufe64\u010b\ufe64\u010c\ufe64\001" +
    "\002\000\006\325\ufe69\u010b\ufe69\001\002\000\006\u010e\ufe61" +
    "\u0129\ufe61\001\002\000\006\u010e\ufe60\u0129\ufe60\001\002\000" +
    "\010\325\ufe6a\u010b\ufe6a\u010c\ufe6a\001\002\000\010\325\ufecc" +
    "\u010b\ufecc\u010c\u024a\001\002\000\006\325\ufe75\u010b\ufe75\001" +
    "\002\000\006\u010e\064\u0129\065\001\002\000\074\004\u0383" +
    "\263\u0384\337\105\340\101\341\122\342\131\343\121\344" +
    "\104\345\076\346\126\347\111\350\117\351\130\352\107" +
    "\353\102\354\110\355\100\356\125\357\124\360\106\361" +
    "\127\362\116\363\113\364\133\365\132\366\077\367\103" +
    "\370\120\u010e\u01f3\001\002\000\006\114\u038a\215\u038b\001" +
    "\002\000\006\325\ufe72\u010b\ufe72\001\002\000\006\325\ufe73" +
    "\u010b\ufe73\001\002\000\014\134\u01f7\215\ufec9\220\ufec9\325" +
    "\ufec9\u010b\ufec9\001\002\000\006\114\ufe6f\215\ufe6f\001\002" +
    "\000\006\114\ufe6e\215\ufe6e\001\002\000\012\215\u0387\220" +
    "\u0388\325\ufec4\u010b\ufec4\001\002\000\006\325\ufe70\u010b\ufe70" +
    "\001\002\000\004\220\u0389\001\002\000\006\325\ufec6\u010b" +
    "\ufec6\001\002\000\006\325\ufec5\u010b\ufec5\001\002\000\006" +
    "\325\ufe6d\u010b\ufe6d\001\002\000\004\046\u038d\001\002\000" +
    "\006\325\ufe71\u010b\ufe71\001\002\000\004\061\u038e\001\002" +
    "\000\006\325\ufe6c\u010b\ufe6c\001\002\000\006\051\ufe78\u0110" +
    "\u0268\001\002\000\004\051\ufe79\001\002\000\004\051\u0392" +
    "\001\002\000\004\133\024\001\002\000\006\325\ufe7a\u010b" +
    "\ufe7a\001\002\000\006\325\ufe7b\u010b\ufe7b\001\002\000\006" +
    "\134\ufe7f\152\ufe7f\001\002\000\006\134\ufe7e\152\ufe7e\001" +
    "\002\000\006\134\u0398\152\u0399\001\002\000\006\u010e\064" +
    "\u0129\065\001\002\000\004\106\u039b\001\002\000\006\325" +
    "\ufe80\u010b\ufe80\001\002\000\004\324\u039c\001\002\000\006" +
    "\325\ufe7c\u010b\ufe7c\001\002\000\006\325\ufe7d\u010b\ufe7d\001" +
    "\002\000\012\063\u03a0\250\uff25\u010e\uff25\u0129\uff25\001\002" +
    "\000\010\250\u03a3\u010e\064\u0129\065\001\002\000\010\250" +
    "\uff26\u010e\uff26\u0129\uff26\001\002\000\006\325\uff27\u010b\uff27" +
    "\001\002\000\012\063\u03aa\304\uff21\325\uff21\u010b\uff21\001" +
    "\002\000\004\u0110\u03a5\001\002\000\006\325\uff24\u010b\uff24" +
    "\001\002\000\006\u010e\064\u0129\065\001\002\000\004\u010c" +
    "\u03a7\001\002\000\004\u0124\u03a8\001\002\000\004\u0111\u03a9" +
    "\001\002\000\006\325\uff1e\u010b\uff1e\001\002\000\006\u010e" +
    "\064\u0129\065\001\002\000\010\304\u0270\325\uff62\u010b\uff62" +
    "\001\002\000\006\325\uff23\u010b\uff23\001\002\000\012\304" +
    "\uff1f\325\uff1f\u010b\uff1f\u010c\u03af\001\002\000\010\304\uff22" +
    "\325\uff22\u010b\uff22\001\002\000\006\u010e\064\u0129\065\001" +
    "\002\000\012\304\uff1f\325\uff1f\u010b\uff1f\u010c\u03af\001\002" +
    "\000\010\304\uff20\325\uff20\u010b\uff20\001\002\000\006\u010e" +
    "\064\u0129\065\001\002\000\004\152\u03b4\001\002\000\006" +
    "\u010e\064\u0129\065\001\002\000\004\u0123\u03bc\001\002\000" +
    "\012\063\u03b8\304\uff16\325\uff16\u010b\uff16\001\002\000\010" +
    "\304\u0270\325\uff62\u010b\uff62\001\002\000\006\u010e\064\u0129" +
    "\065\001\002\000\012\304\uff1f\325\uff1f\u010b\uff1f\u010c\u03af" +
    "\001\002\000\010\304\uff17\325\uff17\u010b\uff17\001\002\000" +
    "\006\325\uff1d\u010b\uff1d\001\002\000\040\220\u017c\233\u03bf" +
    "\326\u016e\327\u0177\330\u017d\331\u017b\332\u0178\u010e\064\u0110" +
    "\u017a\u0117\074\u0124\u016b\u0127\u0170\u0128\u0171\u0129\065\u012b\u0179" +
    "\001\002\000\014\063\uff1a\304\uff1a\325\uff1a\u010b\uff1a\u010c" +
    "\uff1a\001\002\000\014\063\uff18\304\uff18\325\uff18\u010b\uff18" +
    "\u010c\u03c0\001\002\000\014\063\uff1b\304\uff1b\325\uff1b\u010b" +
    "\uff1b\u010c\uff1b\001\002\000\006\u010e\064\u0129\065\001\002" +
    "\000\012\063\uff1c\304\uff1c\325\uff1c\u010b\uff1c\001\002\000" +
    "\012\063\uff19\304\uff19\325\uff19\u010b\uff19\001\002\000\006" +
    "\u010e\064\u0129\065\001\002\000\006\325\uffa2\u010b\uffa2\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u03c2\000\064\002\050\003\047\004\035\005\030\006" +
    "\003\007\017\027\015\043\032\071\016\114\036\124\006" +
    "\132\004\137\037\245\052\273\012\302\024\304\044\306" +
    "\013\307\054\311\021\316\025\324\053\342\034\352\026" +
    "\371\031\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\057\u03b1\001\001\000\004\057\u039d\001\001\000\002\001" +
    "\001\000\002\001\001\000\022\246\u035e\247\u0364\252\u0360" +
    "\253\u0363\255\u035a\307\054\324\u035c\352\u035b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\277\u0351\001\001\000" +
    "\004\072\u030e\001\001\000\002\001\001\000\006\021\u02f4" +
    "\312\u02f3\001\001\000\002\001\001\000\004\010\u02f1\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\u02d6\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\277\u02d4" +
    "\001\001\000\004\057\u02b0\001\001\000\026\140\u0131\141" +
    "\u0138\142\u012b\166\u012d\167\u0137\170\u0134\176\u012e\307\054" +
    "\324\u012f\352\u012c\001\001\000\016\030\u0101\031\374\033" +
    "\u0106\035\u0102\036\u0100\040\u0105\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\277\370\305\367\001\001\000" +
    "\004\010\365\001\001\000\002\001\001\000\004\277\356" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\325" +
    "\060\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\011\061\012\260\001\001\000\006\011\061\012\062\001" +
    "\001\000\004\013\255\001\001\000\004\326\070\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\310\254\001\001\000\010\021\074" +
    "\327\072\330\071\001\001\000\002\001\001\000\004\336" +
    "\210\001\001\000\002\001\001\000\010\011\114\024\113" +
    "\332\122\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\333\163\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\331\147\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\310\135\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\310\143\001\001\000\002\001\001\000" +
    "\004\310\145\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\021\074\330\151\001\001\000" +
    "\002\001\001\000\004\310\153\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\310\156\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\334\171\335\170\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\310" +
    "\173\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\335\176\001\001\000\002\001\001\000\004\310\200\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\310\203" +
    "\001\001\000\002\001\001\000\004\310\205\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\344\231\001\001\000\010\337\213\340\212\342\214\001" +
    "\001\000\004\341\226\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\011" +
    "\221\343\223\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\337\227\340\212\342\214\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\004\233\071\016\114\036\124\006\132\004\345\234" +
    "\347\235\001\001\000\004\010\242\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\004\233\071\016\114\036" +
    "\124\006\132\004\347\237\001\001\000\004\346\240\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\004\245" +
    "\071\016\114\036\124\006\132\004\350\246\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\247\001\001" +
    "\000\002\001\001\000\016\004\250\071\016\114\036\124" +
    "\006\132\004\351\251\001\001\000\004\010\252\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\011\257\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\021\265\353" +
    "\262\354\264\355\263\001\001\000\002\001\001\000\004" +
    "\356\275\001\001\000\002\001\001\000\004\357\267\001" +
    "\001\000\002\001\001\000\004\024\270\001\001\000\004" +
    "\333\271\001\001\000\004\360\272\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\021\265\354\276\355\263" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\024\303\361\302\362\305\367\301\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\363\341\001" +
    "\001\000\004\363\306\001\001\000\002\001\001\000\004" +
    "\357\332\001\001\000\004\365\314\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\364\316\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\363\320\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\011\221\343\331\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\071\336\366\334\001\001\000\002" +
    "\001\001\000\004\071\337\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\357\342\001\001" +
    "\000\002\001\001\000\014\004\344\071\016\114\036\124" +
    "\006\132\004\001\001\000\004\010\345\001\001\000\002" +
    "\001\001\000\010\021\352\310\351\370\347\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\011\360\021\363\300\361\303\362\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\064" +
    "\002\366\003\047\004\035\005\030\006\003\007\017\027" +
    "\015\043\032\071\016\114\036\124\006\132\004\137\037" +
    "\245\052\273\012\302\024\304\044\306\013\307\054\311" +
    "\021\316\025\324\053\342\034\352\026\371\031\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\011\371\021" +
    "\373\301\372\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\020\u0109\271" +
    "\u0125\001\001\000\006\020\u0109\271\u011c\001\001\000\006" +
    "\020\u0109\271\u011a\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\020\u0109\271\u0110\001\001" +
    "\000\006\020\u0109\271\u0107\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\011\061\012\u010b\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\034" +
    "\u010c\001\001\000\002\001\001\000\006\011\061\012\u010e" +
    "\001\001\000\004\034\u010f\001\001\000\002\001\001\000" +
    "\006\011\u0111\014\u0112\001\001\000\004\015\u0117\001\001" +
    "\000\004\032\u0113\001\001\000\002\001\001\000\006\011" +
    "\u0111\014\u0115\001\001\000\004\032\u0116\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\011\061\012\u0119\001" +
    "\001\000\002\001\001\000\004\011\u011b\001\001\000\002" +
    "\001\001\000\006\011\u011d\041\u011e\001\001\000\002\001" +
    "\001\000\004\042\u0120\001\001\000\006\011\u011d\041\u0121" +
    "\001\001\000\002\001\001\000\004\042\u0122\001\001\000" +
    "\002\001\001\000\006\011\u0111\014\u0124\001\001\000\002" +
    "\001\001\000\004\011\u0126\001\001\000\004\037\u0128\001" +
    "\001\000\004\011\u0129\001\001\000\002\001\001\000\004" +
    "\037\u012a\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\u0279\001\001\000\002\001\001\000" +
    "\004\011\u0278\001\001\000\002\001\001\000\004\226\u0254" +
    "\001\001\000\006\011\061\012\u0251\001\001\000\006\011" +
    "\u0111\014\u0139\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\011\u0141\201\u013d\206\u013b\224" +
    "\u0142\236\u013c\244\u013e\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\202\u024a\001\001\000\002\001\001\000" +
    "\004\011\u0246\001\001\000\004\011\u0245\001\001\000\010" +
    "\022\u01f5\023\u01f4\024\u01f3\001\001\000\004\237\u0146\001" +
    "\001\000\002\001\001\000\004\200\u015c\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\226\u0148\001\001\000" +
    "\004\240\u014b\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\011\u014d\001\001\000\004\076" +
    "\u014e\001\001\000\004\243\u0151\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\u0153\001" +
    "\001\000\004\076\u0154\001\001\000\004\243\u0155\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\226\u0158\001" +
    "\001\000\004\240\u0159\001\001\000\002\001\001\000\004" +
    "\203\u01ce\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\056\u015e\061\u0160\001\001\000\022\011\u0171\016\u016e" +
    "\021\u016c\046\u016b\050\u0175\052\u0173\053\u0172\063\u0174\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\056\u015e" +
    "\061\u0162\001\001\000\002\001\001\000\006\062\u0164\066" +
    "\u0166\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\056\u015e\061\u0168\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\056\u01a1" +
    "\064\u01ac\065\u01ab\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\017\u019c\001\001\000\002\001\001\000\004\051" +
    "\u0195\001\001\000\006\062\u0194\066\u0166\001\001\000\004" +
    "\047\u018d\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\011\u0171\016\u016e\021\u016c\046\u0187" +
    "\050\u0175\052\u0173\053\u0172\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\011\u0171\016\u0181" +
    "\054\u0180\310\u017f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\011\u0171\016" +
    "\u0181\054\u0186\310\u017f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\011\u0171\016\u0181\054" +
    "\u018a\310\u017f\001\001\000\002\001\001\000\012\011\u0171" +
    "\016\u0181\054\u018c\310\u017f\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\011\u0171\016\u016e\021\u016c\050\u0192" +
    "\052\u0173\053\u0172\001\001\000\016\011\u0171\016\u016e\021" +
    "\u016c\050\u0190\052\u0173\053\u0172\001\001\000\004\047\u0191" +
    "\001\001\000\002\001\001\000\004\047\u0193\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\011\u0171\016\u016e\021\u016c\052\u019a\053\u0172\001\001\000" +
    "\014\011\u0171\016\u016e\021\u016c\052\u0198\053\u0172\001\001" +
    "\000\004\051\u0199\001\001\000\002\001\001\000\004\051" +
    "\u019b\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\011\u0111\014\u019e\001\001\000\002\001\001\000\012\011" +
    "\u0171\016\u0181\054\u01a0\310\u017f\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\011\u0171\016\u016e\021\u016c\046" +
    "\u01ba\050\u0175\052\u0173\053\u0172\001\001\000\020\011\u0171" +
    "\016\u016e\021\u016c\046\u01b9\050\u0175\052\u0173\053\u0172\001" +
    "\001\000\020\011\u0171\016\u016e\021\u016c\046\u01b8\050\u0175" +
    "\052\u0173\053\u0172\001\001\000\020\011\u0171\016\u016e\021" +
    "\u016c\046\u01b7\050\u0175\052\u0173\053\u0172\001\001\000\020" +
    "\011\u0171\016\u016e\021\u016c\046\u01b6\050\u0175\052\u0173\053" +
    "\u0172\001\001\000\020\011\u0171\016\u016e\021\u016c\046\u01b5" +
    "\050\u0175\052\u0173\053\u0172\001\001\000\020\011\u0171\016" +
    "\u016e\021\u016c\046\u01b4\050\u0175\052\u0173\053\u0172\001\001" +
    "\000\020\011\u0171\016\u016e\021\u016c\046\u01b3\050\u0175\052" +
    "\u0173\053\u0172\001\001\000\020\011\u0171\016\u016e\021\u016c" +
    "\046\u01b2\050\u0175\052\u0173\053\u0172\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\056\u01b0\001\001\000\020" +
    "\011\u0171\016\u016e\021\u016c\046\u01af\050\u0175\052\u0173\053" +
    "\u0172\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\067\u01c9\001\001\000\002\001\001\000\020\011\u0171" +
    "\016\u016e\021\u016c\046\u01be\050\u0175\052\u0173\053\u0172\001" +
    "\001\000\002\001\001\000\020\011\u0171\016\u016e\021\u016c" +
    "\046\u01c0\050\u0175\052\u0173\053\u0172\001\001\000\002\001" +
    "\001\000\020\011\u0171\016\u016e\021\u016c\046\u01c2\050\u0175" +
    "\052\u0173\053\u0172\001\001\000\004\055\u01c4\001\001\000" +
    "\020\011\u0171\016\u016e\021\u016c\046\u01c6\050\u0175\052\u0173" +
    "\053\u0172\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\055\u01c7\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\067\u01cb\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\204\u01d1\001\001\000\004\205\u01d3\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\241\u01d6\001\001\000\002\001\001\000" +
    "\004\011\u01d8\001\001\000\004\242\u01d9\001\001\000\002" +
    "\001\001\000\004\011\u01db\001\001\000\004\242\u01dc\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\011\061" +
    "\012\u01df\001\001\000\004\230\u01e1\001\001\000\004\011" +
    "\u01f0\001\001\000\004\231\u01e3\001\001\000\004\232\u01e6" +
    "\001\001\000\004\200\u01e4\001\001\000\002\001\001\000" +
    "\004\233\u01ef\001\001\000\004\231\u01ee\001\001\000\004" +
    "\233\u01e8\001\001\000\002\001\001\000\004\234\u01ec\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\024\u0243\001\001" +
    "\000\002\001\001\000\004\025\u023d\001\001\000\004\207" +
    "\u01f7\001\001\000\004\011\u023b\001\001\000\012\214\u01ff" +
    "\215\u01fe\217\u01fd\224\u01f9\001\001\000\004\213\u0237\001" +
    "\001\000\010\225\u0235\227\u0212\235\u020f\001\001\000\004" +
    "\011\u0221\001\001\000\006\223\u0220\224\u020a\001\001\000" +
    "\002\001\001\000\004\220\u0200\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\212\u0209\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\221\u0206\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\223\u020b\224\u020a\001\001" +
    "\000\010\225\u020d\227\u0212\235\u020f\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\223\u021e\224\u020a\001\001" +
    "\000\004\200\u021a\001\001\000\004\226\u0219\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\011\061\012\u0214\001\001\000\004\230\u0215\001\001\000" +
    "\004\231\u0216\001\001\000\004\200\u0217\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\056\u015e\061\u021c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\222\u0223\001\001\000\004\216\u0227" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\210\u022b\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\213\u0230\001\001\000" +
    "\004\200\u022c\001\001\000\004\212\u022d\001\001\000\006" +
    "\223\u022e\224\u020a\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\223\u0236\224" +
    "\u020a\001\001\000\002\001\001\000\004\200\u0238\001\001" +
    "\000\004\212\u0239\001\001\000\006\223\u023a\224\u020a\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\026\u0240\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\226\u0247\001\001\000\004\240\u0248\001\001\000\002" +
    "\001\001\000\016\011\u0141\201\u024f\206\u013b\224\u0142\236" +
    "\u013c\244\u013e\001\001\000\002\001\001\000\004\177\u024c" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\202\u0250\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\071\u0253\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\u0256\001\001\000\002\001\001" +
    "\000\006\011\u0111\014\u0258\001\001\000\004\171\u0259\001" +
    "\001\000\004\174\u0264\001\001\000\006\011\u025b\172\u025c" +
    "\001\001\000\004\076\u025e\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\173\u0260\001\001\000\004\011\u0261" +
    "\001\001\000\002\001\001\000\004\076\u0262\001\001\000" +
    "\004\173\u0263\001\001\000\002\001\001\000\004\070\u0270" +
    "\001\001\000\004\111\u0266\001\001\000\002\001\001\000" +
    "\006\011\u0268\112\u0269\001\001\000\004\113\u026b\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\u026d\001\001\000\004\113\u026e\001\001\000\002" +
    "\001\001\000\006\056\u015e\061\u0277\001\001\000\004\175" +
    "\u0272\001\001\000\004\011\u0273\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\011\u0275\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\143\u027a\144\u027c\001\001\000\002\001\001\000" +
    "\004\146\u0281\001\001\000\004\145\u027d\001\001\000\002" +
    "\001\001\000\004\011\u027f\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\147\u0284\150\u0282\001\001\000\002" +
    "\001\001\000\004\151\u0285\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\152\u028b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\153\u0291\001\001\000\012\155\u0294\156" +
    "\u0293\161\u0297\164\u0296\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\153\u02ad\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\157" +
    "\u029d\160\u029c\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\162\u02a4\001\001\000\006\160\u02a5" +
    "\163\u02a6\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\160\u02aa\165\u02ab\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\147\u02af" +
    "\150\u0282\001\001\000\002\001\001\000\004\115\u02b8\001" +
    "\001\000\002\001\001\000\004\310\u02b3\001\001\000\002" +
    "\001\001\000\004\060\u02b6\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\011\u0111\014\u02b9" +
    "\001\001\000\006\111\u02ba\116\u02bb\001\001\000\002\001" +
    "\001\000\004\122\u02be\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\021\u02c6\117\u02c4\120" +
    "\u02c7\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\121\u02c9\001\001\000\006" +
    "\021\u02c6\120\u02ca\001\001\000\002\001\001\000\004\121" +
    "\u02cb\001\001\000\002\001\001\000\004\123\u02ce\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\021\u02c6\117" +
    "\u02d0\120\u02c7\001\001\000\002\001\001\000\004\123\u02d2" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\011" +
    "\360\021\363\300\u02d5\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\372\u02da\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\373\u02dc\001\001\000\002\001\001" +
    "\000\004\374\u02de\001\001\000\002\001\001\000\004\375" +
    "\u02e3\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\376\u02e7\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\071\u02ea\001\001\000" +
    "\004\377\u02eb\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\u0100\u02ef\001\001\000\006\011\u0268\112\u02f0\001" +
    "\001\000\002\001\001\000\002\001\001\000\064\002\u02f2" +
    "\003\047\004\035\005\030\006\003\007\017\027\015\043" +
    "\032\071\016\114\036\124\006\132\004\137\037\245\052" +
    "\273\012\302\024\304\044\306\013\307\054\311\021\316" +
    "\025\324\053\342\034\352\026\371\031\001\001\000\002" +
    "\001\001\000\012\011\061\012\u02f6\021\u02f8\313\u02f7\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\314\u030b" +
    "\001\001\000\010\021\u02fb\317\u02fa\320\u02f9\001\001\000" +
    "\002\001\001\000\012\021\u0306\310\u0305\321\u0301\323\u0307" +
    "\001\001\000\004\315\u02fe\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\021\u02fb\317\u02ff\320\u02f9\001\001" +
    "\000\002\001\001\000\004\315\u0300\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\322\u0309\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\310\u030c\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\057\u0310\001\001\000\002" +
    "\001\001\000\022\011\u0171\016\u016e\021\u016c\046\u0311\050" +
    "\u0175\052\u0173\053\u0172\107\u0313\001\001\000\010\011\u0317" +
    "\044\u034f\045\u031a\001\001\000\004\110\u034b\001\001\000" +
    "\004\102\u0314\001\001\000\004\070\u0332\001\001\000\006" +
    "\011\u0111\014\u0316\001\001\000\010\011\u0317\044\u0318\045" +
    "\u031a\001\001\000\002\001\001\000\006\104\u031f\105\u0322" +
    "\001\001\000\006\011\u0317\045\u031c\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\106\u0331" +
    "\001\001\000\002\001\001\000\004\103\u032d\001\001\000" +
    "\004\106\u032b\001\001\000\004\106\u032a\001\001\000\002" +
    "\001\001\000\006\011\u0111\014\u0324\001\001\000\010\011" +
    "\u0317\044\u0325\045\u031a\001\001\000\002\001\001\000\006" +
    "\056\u015e\061\u0327\001\001\000\006\104\u0328\105\u0322\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\011\u0111\014\u032e\001\001\000" +
    "\002\001\001\000\010\011\u0317\044\u032f\045\u031a\001\001" +
    "\000\006\104\u0330\105\u0322\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\100\u0334\001\001\000\002\001\001" +
    "\000\004\073\u0336\001\001\000\006\056\u015e\061\u0343\001" +
    "\001\000\004\074\u0338\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\011\u0171\016\u016e\021\u016c\046\u033a\050" +
    "\u0175\052\u0173\053\u0172\001\001\000\004\075\u033c\001\001" +
    "\000\004\011\u0342\001\001\000\004\076\u033d\001\001\000" +
    "\022\011\u0171\016\u016e\021\u016c\046\u033e\050\u0175\052\u0173" +
    "\053\u0172\077\u033f\001\001\000\004\075\u0340\001\001\000" +
    "\002\001\001\000\004\076\u0341\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\011\u0171\016" +
    "\u016e\021\u016c\046\u0345\050\u0175\052\u0173\053\u0172\001\001" +
    "\000\004\101\u0347\001\001\000\020\011\u0171\016\u016e\021" +
    "\u016c\046\u0348\050\u0175\052\u0173\053\u0172\001\001\000\002" +
    "\001\001\000\004\101\u0349\001\001\000\002\001\001\000" +
    "\020\011\u0171\016\u016e\021\u016c\046\u034c\050\u0175\052\u0173" +
    "\053\u0172\001\001\000\002\001\001\000\010\011\u0317\044" +
    "\u034d\045\u031a\001\001\000\004\110\u034e\001\001\000\002" +
    "\001\001\000\004\110\u0350\001\001\000\002\001\001\000" +
    "\012\011\360\021\363\274\u0353\300\u0352\001\001\000\004" +
    "\275\u0355\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\276\u0357\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\011\u0394\250\u0396" +
    "\001\001\000\002\001\001\000\004\011\u0393\001\001\000" +
    "\002\001\001\000\006\011\061\012\u038e\001\001\000\006" +
    "\011\u0111\014\u0365\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\256\u0369\257\u0366\264\u036a\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\011\u0141\201\u037a\206" +
    "\u013b\224\u0142\236\u013c\244\u013e\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\265\u0370\267\u036f\272\u036c\001" +
    "\001\000\004\011\u0379\001\001\000\002\001\001\000\006" +
    "\020\u0109\271\u0378\001\001\000\006\020\u0109\271\u0377\001" +
    "\001\000\004\266\u0372\001\001\000\014\011\u0373\265\u0375" +
    "\267\u036f\270\u0374\272\u036c\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\266\u0376\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\202\u037b\001\001\000\002\001\001" +
    "\000\004\011\u037d\001\001\000\016\022\u0381\023\u01f4\024" +
    "\u01f3\260\u0380\261\u037f\262\u037e\001\001\000\004\263\u038b" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\207" +
    "\u0384\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\211\u0385\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\111\u038f\254\u0390\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\071\u0392\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\251\u0399\001\001\000\004\011\u039c\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\125\u039e\001\001\000" +
    "\010\011\u0111\014\u03a1\126\u03a0\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\127\u03aa\001\001\000\004\131" +
    "\u03a3\001\001\000\002\001\001\000\004\011\u03a5\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\011\u0111\014\u03ac\001\001\000\004" +
    "\070\u03ab\001\001\000\002\001\001\000\004\130\u03ad\001" +
    "\001\000\002\001\001\000\006\011\u0111\014\u03af\001\001" +
    "\000\004\130\u03b0\001\001\000\002\001\001\000\006\011" +
    "\u0111\014\u03b2\001\001\000\002\001\001\000\006\011\u03b4" +
    "\133\u03b5\001\001\000\002\001\001\000\004\136\u03b6\001" +
    "\001\000\004\070\u03ba\001\001\000\006\011\u0111\014\u03b8" +
    "\001\001\000\004\130\u03b9\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\011\u0171\016\u016e\021\u016c\046\u03bc" +
    "\050\u0175\052\u0173\053\u0172\134\u03bd\001\001\000\002\001" +
    "\001\000\004\135\u03c0\001\001\000\002\001\001\000\006" +
    "\011\u03b4\133\u03c1\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\011\u0111\014\u03c3\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public String Er = "";
    private Symbol s;

    public Symbol getS(){
    	return this.s;
    }

    public final Class getSymbolContainer() {
        return sym.class;
    }

    public void syntax_error(Symbol s){
  	this.s=s; 
 	List<Integer> ids = expected_token_ids();
	LinkedList<String> idsNames = new LinkedList<String>();
	for (Integer esperado : ids){
            idsNames.add(symbl_name_from_id(esperado));
            idsNames.add(", ");
	}
       	Er = Er + ("Error de sintaxis en Token " + s.value + ", en columna " + (s.left+1) + ", en linea " + (s.right+1) + ", esperando tokens (" + idsNames.toString() + ")\n\n");
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        List<Integer> ids = expected_token_ids();
	LinkedList<String> idsNames = new LinkedList<String>();
	for (Integer esperado : ids){
            idsNames.add(symbl_name_from_id(esperado));
            idsNames.add(", ");
	}
       	Er = Er + ("Error de sintaxis en Token " + s.value + ", en columna " + (s.left+1) + ", en linea " + (s.right+1) + ", esperando tokens (" + idsNames.toString() + ")\n\n");   
    }
    
    public String symbl_name_from_id(int id){
	Field[] fields = getSymbolContainer().getFields();
	for(Field f : fields){
            try {
		if (f.getInt(null)==id)
                    return f.getName();
            } catch (IllegalArgumentException e) {
                //e.printStackTrace();
            } catch (IllegalAccessException e) {
                //e.printStackTrace();
            }
	}
	return "invalid symbol id";
    }

    public List<Integer> expected_token_ids() {
        List<Integer> ret = new LinkedList<Integer>();
	int parse_state = ((Symbol)stack.peek()).parse_state ;
	short[] row = action_tab[parse_state];
	for (int i = 0; i<row.length; i+=2){
	    if (row[i]==-1) continue;
            if (!validate_expected_symbol(row[i])) continue;
            ret.add(new Integer(row[i]));
	}
	return ret;
    }
    
    private boolean validate_expected_symbol(int id){
	short lhs,rhs_size;
	int act;
	try {
            virtual_parse_stack vstack = new virtual_parse_stack(stack);
            /* parse until we fail or get past the lookahead input */
            for (;;){
                /* look up the action from the current state (on top of stack) */
		act = get_action(vstack.top(), id);

                /* if its an error, we fail */
		if (act == 0) return false;

                /* > 0 encodes a shift */
		if (act > 0){
                    /* push the new state on the stack */
                    vstack.push(act-1);
                    /* advance simulated input, if we run off the end, we are done */
                    if (!advance_lookahead()) return true;
		}
                    /* < 0 encodes a reduce */
		else{
                    /* if this is a reduce with the start production we are done */
                    if ((-act)-1 == start_production())  return true;

		    /* get the lhs Symbol and the rhs size */
                    lhs = production_tab[(-act)-1][0];
                    rhs_size = production_tab[(-act)-1][1];
                    /* pop handle off the stack */
                    for (int i = 0; i < rhs_size; i++) vstack.pop();
                    vstack.push(get_reduce(vstack.top(), lhs));
		}
            }
	} catch (Exception e) {
            e.printStackTrace();
	}
	return true;
    }

    protected static final int _error_sync_size(){
	return 1;
    }

    public String obtenerErrores(){
        return Er;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 560: // Cursor7 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor7",254, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 559: // Cursor7 ::= OF ListaColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor7",254, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 558: // Cursor6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor6",253, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 557: // Cursor6 ::= FOR UPDATE Cursor7 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor6",253, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 556: // Cursor5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor5",252, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 555: // Cursor5 ::= TYPE_WARNING 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor5",252, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 554: // Cursor4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",251, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 553: // Cursor4 ::= OPTIMISTIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",251, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 552: // Cursor4 ::= SCROLL_LOCKS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",251, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 551: // Cursor4 ::= READ_ONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",251, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 550: // Cursor3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",250, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 549: // Cursor3 ::= FASTFORWARD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",250, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 548: // Cursor3 ::= DYNAMIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",250, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 547: // Cursor3 ::= KEYSET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",250, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 546: // Cursor3 ::= STATIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",250, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 545: // Cursor2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",249, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 544: // Cursor2 ::= SCROLL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",249, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 543: // Cursor2 ::= FORWARDONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",249, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 542: // Cursor1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",248, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 541: // Cursor1 ::= GLOBAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",248, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 540: // Cursor1 ::= LOCAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",248, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 539: // Cursor ::= DECLARE ID CURSOR Cursor1 Cursor2 Cursor3 Cursor4 Cursor5 FOR Select Cursor6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor",247, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 538: // ReturnData1 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData1",246, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 537: // ReturnData1 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData1",246, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 536: // ReturnData1 ::= Number 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData1",246, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 535: // ReturnData1 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData1",246, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 534: // ReturnData ::= TipoDeDato3 ReturnTable1 AsWord BEGIN SentenciasDML Fin RETURN ReturnData1 END 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData",245, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 533: // SelectOption ::= Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectOption",244, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 532: // SelectOption ::= Aparentesis Select Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectOption",244, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 531: // FunctionOption ::= EXECUTE AS ExecuteType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",243, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 530: // FunctionOption ::= CALLED ON NULL INPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",243, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 529: // FunctionOption ::= RETURNS NULL ON NULL INPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",243, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 528: // FunctionOption ::= SCHEMABINDING 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",243, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 527: // FunctionOption ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",243, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // ReturnTable2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable2",242, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // ReturnTable2 ::= Coma ReturnTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable2",242, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // ReturnTable1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable1",241, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // ReturnTable1 ::= WITH FunctionOption ReturnTable2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable1",241, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // ReturnTable ::= TABLE ReturnTable1 AsWord RETURN SelectOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable",240, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // ReturnType ::= ReturnData 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnType",239, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // ReturnType ::= ReturnTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnType",239, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // ReadOnlyWord ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReadOnlyWord",238, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // ReadOnlyWord ::= READONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReadOnlyWord",238, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // AsWord ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsWord",237, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // AsWord ::= AS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsWord",237, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // FunctionParam3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam3",236, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // FunctionParam3 ::= Coma FunctionParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam3",236, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // FunctionParam2 ::= Var AsWord TipoDeDato3 ProcedureDataType1 ReadOnlyWord 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam2",235, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // FunctionParam1 ::= FunctionParam2 FunctionParam3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam1",234, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // FunctionParam ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam",233, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // FunctionParam ::= FunctionParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam",233, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // Function ::= OrAlter FUNCTION IDL1 Aparentesis FunctionParam Cparentesis RETURNS ReturnType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Function",232, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // ProcedureStatement2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement2",231, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // ProcedureStatement2 ::= SentenciasDML Fin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement2",231, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // ProcedureStatement1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement1",230, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // ProcedureStatement1 ::= SentenciasDML Fin ProcedureStatement2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement1",230, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // ProcedureStatement ::= SentenciasDML Fin ProcedureStatement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement",229, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // EndProcedure ::= END 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EndProcedure",228, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // BeginProcedure ::= ProcedureStatement 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BeginProcedure",227, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // BeginProcedure ::= BEGIN ProcedureStatement EndProcedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BeginProcedure",227, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // ProcedureReplication ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureReplication",226, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // ProcedureReplication ::= FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureReplication",226, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // ExecuteType ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",225, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // ExecuteType ::= OWNER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",225, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // ExecuteType ::= SELF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",225, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // ExecuteType ::= CALLER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",225, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // Execute ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Execute",224, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // Execute ::= EXEC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Execute",224, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // ProcedureOption3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption3",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // ProcedureOption3 ::= Coma ProcedureOption1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption3",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // ProcedureOption2 ::= Execute AS ExecuteType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // ProcedureOption2 ::= RECOMPILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // ProcedureOption2 ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // ProcedureOption1 ::= ProcedureOption2 ProcedureOption3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption1",221, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // ProcedureOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption",220, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // ProcedureOption ::= WITH ProcedureOption1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption",220, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // ProcedureDataType3 ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType3",219, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // ProcedureDataType3 ::= OUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType3",219, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // ProcedureDataType2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType2",218, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // ProcedureDataType2 ::= ProcedureDataType3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType2",218, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // ProcedureDataType1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType1",217, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // ProcedureDataType1 ::= Igual DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType1",217, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // ProcedureDataType ::= ID READONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",216, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // ProcedureDataType ::= CURSOR VARYING ProcedureDataType3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",216, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // ProcedureDataType ::= TipoDeDato3 ProcedureDataType1 ProcedureDataType2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",216, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // ProcedureParam2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam2",215, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // ProcedureParam2 ::= Coma ProcedureParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam2",215, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // ProcedureParam1 ::= Var ProcedureDataType ProcedureParam2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam1",214, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // ProcedureParam ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam",213, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // ProcedureParam ::= ProcedureParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam",213, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // ProcedureNum ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureNum",212, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // ProcedureNum ::= PuntoYComa Number 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureNum",212, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // ProcedureName ::= PROCEDURE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureName",211, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // ProcedureName ::= PROC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureName",211, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // Procedure ::= OrAlter ProcedureName IDL1 ProcedureNum ProcedureParam ProcedureOption ProcedureReplication AS BeginProcedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Procedure",210, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // ExecuteProcedureParam4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam4",209, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // ExecuteProcedureParam4 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam4",209, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // ExecuteProcedureParam3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam3",208, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // ExecuteProcedureParam3 ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam3",208, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // ExecuteProcedureParam2 ::= ExecuteProcedureParam4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam2",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // ExecuteProcedureParam2 ::= Var ExecuteProcedureParam3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam2",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // ExecuteProcedureParam2 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam2",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // ExecuteProcedureParam2 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam2",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // ExecuteProcedureParam2 ::= Number 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam2",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // ExecuteProcedureParam1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam1",206, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // ExecuteProcedureParam1 ::= Var Igual 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam1",206, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // ExecuteProcedureParam ::= ExecuteProcedureParam1 ExecuteProcedureParam2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedureParam",205, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // ExecuteProcedure5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure5",204, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // ExecuteProcedure5 ::= Execute 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure5",204, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // ExecuteProcedure4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure4",203, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // ExecuteProcedure4 ::= Coma ExecuteProcedureParam ExecuteProcedure4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure4",203, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // ExecuteProcedure3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure3",202, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // ExecuteProcedure3 ::= PuntoYComa Number 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure3",202, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // ExecuteProcedure2 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure2",201, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // ExecuteProcedure2 ::= IDL1 ExecuteProcedure3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure2",201, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // ExecuteProcedure1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure1",200, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // ExecuteProcedure1 ::= Var Igual 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure1",200, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // ExecuteProcedure ::= ExecuteProcedure5 ExecuteProcedure1 ExecuteProcedure2 ExecuteProcedureParam ExecuteProcedure4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteProcedure",199, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // Number ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Number",198, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // Number ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Number",198, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // OrAlter ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrAlter",197, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // OrAlter ::= OR ALTER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrAlter",197, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // Save ::= SAVE TransactName Name 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Save",196, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // Commit1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit1",195, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // Commit1 ::= TransactName Name1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit1",195, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // Commit ::= COMMIT Commit1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit",194, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // Rollback1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback1",193, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // Rollback1 ::= Name 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback1",193, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // Rollback ::= ROLLBACK TransactName Rollback1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback",192, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // Name1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",191, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // Name1 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",191, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // Name1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",191, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // Name ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name",190, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // Name ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name",190, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // TransactName ::= TRANSACTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TransactName",189, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // TransactName ::= TRAN 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TransactName",189, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // Transact3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact3",188, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // Transact3 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact3",188, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // Transact2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact2",187, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // Transact2 ::= WITH MARK Transact3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact2",187, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // Transact1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact1",186, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // Transact1 ::= Name Transact2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact1",186, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // Transact ::= BEGIN TransactName Transact1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact",185, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // AlterTableDrop6 ::= COLUMN AlterTableDrop5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop6",184, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // AlterTableDrop6 ::= AlterTableDrop3 AlterTableDrop5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop6",184, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // AlterTableDrop5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop5",183, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // AlterTableDrop5 ::= IFExists 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop5",183, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // AlterTableDrop4 ::= AlterTableDrop1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop4",182, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // AlterTableDrop4 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop4",182, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // AlterTableDrop3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop3",181, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // AlterTableDrop3 ::= CONSTRAINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop3",181, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // AlterTableDrop2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop2",180, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // AlterTableDrop2 ::= Coma AlterTableDrop4 AlterTableDrop2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop2",180, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // AlterTableDrop1 ::= AlterTableDrop6 ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop1",179, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // AlterTableDrop ::= DROP AlterTableDrop1 AlterTableDrop2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop",178, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // AlterColumna4 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna4",177, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // AlterColumna4 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna4",177, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // AlterColumna3 ::= DROP 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna3",176, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // AlterColumna3 ::= ADD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna3",176, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // AlterColumna2 ::= TipoDeDato DefinicionColumna1 DefinicionColumna3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna2",175, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // AlterColumna1 ::= AlterColumna3 AlterColumna4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna1",174, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // AlterColumna1 ::= AlterColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna1",174, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // AlterColumna ::= ALTER COLUMN ID AlterColumna1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna",173, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // AlterTable1 ::= AlterTableDrop 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",172, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // AlterTable1 ::= ADD TableElement2 TableElement3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",172, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // AlterTable1 ::= AlterColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",172, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // AlterTable ::= TABLE IDL3 AlterTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable",171, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // AlterView1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView1",170, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // AlterView1 ::= ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView1",170, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // AlterView ::= VIEW IDL1 AlterView1 AS Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView",169, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // AlterUser ::= USER ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterUser",168, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // AlterDataBase2 ::= SET ROLLBACK IMMEDIATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase2",167, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // AlterDataBase2 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase2",167, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // AlterDataBase1 ::= CURRENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase1",166, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // AlterDataBase1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase1",166, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // AlterDataBase ::= DATABASE AlterDataBase1 AlterDataBase2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase",165, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // Alter1 ::= Function 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",164, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // Alter1 ::= Procedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",164, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // Alter1 ::= AlterTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",164, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // Alter1 ::= AlterView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",164, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // Alter1 ::= AlterDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",164, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // Alter1 ::= AlterUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",164, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // Alter ::= ALTER Alter1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // IndexTabla ::= INDEX ID ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexTabla",162, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // ConstraintTabla5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla5",161, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // ConstraintTabla5 ::= Coma ID OrderBy2 ConstraintTabla5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla5",161, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // ConstraintTabla4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla4",160, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // ConstraintTabla4 ::= Coma ID ConstraintTabla4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla4",160, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // ConstraintTabla3 ::= Aparentesis ID ConstraintTabla4 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla3",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // ConstraintTabla2 ::= Aparentesis ID OrderBy2 ConstraintTabla5 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla2",158, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // ConstraintTabla1 ::= CHECK TableElement1 Aparentesis Condicion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",157, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // ConstraintTabla1 ::= FOREIGN KEY ConstraintTabla3 REFERENCES IDL1 ConstraintColumna5 ConstraintColumna6 TableElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",157, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // ConstraintTabla1 ::= UNIQUE ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",157, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // ConstraintTabla1 ::= PRIMARY KEY ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",157, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // ConstraintTabla ::= ConstraintColumna1 ConstraintTabla1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // ConstraintColumna10 ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna10",155, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // ConstraintColumna10 ::= PRIMARY KEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna10",155, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // ConstraintColumna9 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna9",154, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // ConstraintColumna9 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna9",154, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // ConstraintColumna8 ::= SET ConstraintColumna9 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna8",153, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // ConstraintColumna8 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna8",153, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // ConstraintColumna7 ::= UPDATE ConstraintColumna8 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna7",152, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // ConstraintColumna7 ::= DELETE ConstraintColumna8 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna7",152, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // ConstraintColumna6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna6",151, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // ConstraintColumna6 ::= ON ConstraintColumna7 ConstraintColumna6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna6",151, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // ConstraintColumna5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna5",150, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // ConstraintColumna5 ::= Aparentesis ID Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna5",150, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // ConstraintColumna4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna4",149, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // ConstraintColumna4 ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna4",149, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // ConstraintColumna3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",148, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // ConstraintColumna3 ::= NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",148, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // ConstraintColumna3 ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",148, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // ConstraintColumna2 ::= CHECK TableElement1 Aparentesis Condicion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // ConstraintColumna2 ::= ConstraintColumna4 REFERENCES IDL1 ConstraintColumna5 ConstraintColumna6 TableElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // ConstraintColumna2 ::= ConstraintColumna10 ConstraintColumna3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ConstraintColumna1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna1",146, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ConstraintColumna1 ::= CONSTRAINT ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna1",146, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ConstraintColumna ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna",145, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ConstraintColumna ::= ConstraintColumna1 ConstraintColumna2 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna",145, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // DefinicionColumna12 ::= DEFAULT DefinicionColumna8 DefinicionColumna2 TableElement1 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna12",144, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // DefinicionColumna11 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",143, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // DefinicionColumna11 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",143, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // DefinicionColumna11 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",143, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // DefinicionColumna10 ::= FOR REPLICATION DefinicionColumna11 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna10",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // DefinicionColumna10 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna10",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // DefinicionColumna9 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna9",141, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // DefinicionColumna9 ::= NOT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna9",141, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // DefinicionColumna8 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // DefinicionColumna8 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // DefinicionColumna8 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // DefinicionColumna8 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // DefinicionColumna8 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // DefinicionColumna7 ::= ConstraintColumna1 ConstraintColumna2 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // DefinicionColumna7 ::= ROWGUIDCOL ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // DefinicionColumna7 ::= DefinicionColumna9 DefinicionColumna10 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // DefinicionColumna7 ::= IDENTITY DefinicionColumna5 TableElement1 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // DefinicionColumna6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // DefinicionColumna6 ::= DefinicionColumna7 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // DefinicionColumna6 ::= CONSTRAINT ID DefinicionColumna12 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // DefinicionColumna5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna5",137, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // DefinicionColumna5 ::= Aparentesis Bit Coma Bit Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna5",137, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // DefinicionColumna4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna4",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // DefinicionColumna4 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna4",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // DefinicionColumna3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // DefinicionColumna3 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // DefinicionColumna3 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // DefinicionColumna2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna2",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // DefinicionColumna2 ::= IDENTITY DefinicionColumna5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna2",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // DefinicionColumna1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna1",133, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // DefinicionColumna1 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna1",133, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // DefinicionColumna ::= ID TipoDeDato DefinicionColumna1 DefinicionColumna6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna",132, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // TableElement3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement3",128, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // TableElement3 ::= Coma TableElement2 TableElement3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement3",128, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // TableElement2 ::= IndexTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",127, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // TableElement2 ::= ConstraintTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",127, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // TableElement2 ::= DefinicionColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",127, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // TableElement6 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement6",131, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // TableElement5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement5",130, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // TableElement5 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement5",130, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // TableElement5 ::= NOT TableElement6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement5",130, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // TableElement4 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement4",129, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // TableElement4 ::= FOR REPLICATION TableElement5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement4",129, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // TableElement1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement1",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // TableElement1 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement1",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // TableElement1 ::= NOT TableElement4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement1",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // TableOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableOption",125, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // TableOption ::= ON PRIMARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableOption",125, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // CreateTable ::= TABLE IDL3 Aparentesis TableElement2 TableElement3 Cparentesis TableOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateTable",124, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // OnOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OnOption",123, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // OnOption ::= ON ID Aparentesis ID Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OnOption",123, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // IndexInclude ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexInclude",122, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // IndexInclude ::= INCLUDE ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexInclude",122, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // IndexColumna2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna2",121, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // IndexColumna2 ::= Coma ID OrderBy2 IndexColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna2",121, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // IndexColumna1 ::= ID OrderBy2 IndexColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna1",120, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // IndexColumna ::= Aparentesis IndexColumna1 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna",119, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // CreateIndex1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex1",118, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // CreateIndex1 ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex1",118, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // CreateIndex ::= CreateIndex1 ConstraintColumna3 INDEX ID ON IDL3 IndexColumna IndexInclude Where OnOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex",117, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // CreateView ::= VIEW IDL1 AS Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateView",116, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // FileGrowth1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",115, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // FileGrowth1 ::= Porce 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",115, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // FileGrowth1 ::= Size2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",115, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // FileGrowth ::= FILEGROWTH Igual Integer FileGrowth1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth",114, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // MaxSize2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize2",113, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // MaxSize2 ::= UNLIMITED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize2",113, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // MaxSize2 ::= Size2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize2",113, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // MaxSize1 ::= Integer MaxSize2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize1",112, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // MaxSize ::= MAXSIZE Igual MaxSize1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize",111, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // Size2 ::= TB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",110, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // Size2 ::= GB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",110, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // Size2 ::= MB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",110, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // Size2 ::= KB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",110, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // Size1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size1",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // Size1 ::= Size2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size1",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // Size ::= SIZE Igual Integer Size1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size",108, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // DefinitionOption ::= FileGrowth 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",107, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // DefinitionOption ::= MaxSize 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",107, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // DefinitionOption ::= Size 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",107, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // DefinitionOptions ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOptions",105, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // DefinitionOptions ::= Coma DefinitionOption DefinitionOptions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOptions",105, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // FileName ::= FILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileName",104, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // FileName ::= FILENAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileName",104, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // DefinitionName ::= NAMES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionName",103, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // DefinitionName ::= NAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionName",103, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // Definition ::= Aparentesis DefinitionName Igual Varchar Coma FileName Igual Varchar DefinitionOptions Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definition",102, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // Definitions ::= Definition 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definitions",101, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // Definitions ::= Definition Coma Definitions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definitions",101, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // Primary ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Primary",100, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // Primary ::= PRIMARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Primary",100, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // CollateDataBase ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CollateDataBase",99, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // CollateDataBase ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CollateDataBase",99, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // CreateDataBase2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase2",98, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // CreateDataBase2 ::= ON Primary Definitions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase2",98, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // CreateDataBase1 ::= CreateDataBase2 CollateDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase1",97, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // CreateDataBase ::= DATABASE ID CreateDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase",96, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // CreateUser ::= USER ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateUser",95, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // Create1 ::= CreateIndex 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",94, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // Create1 ::= CreateView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",94, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // Create1 ::= CreateUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",94, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // Create1 ::= CreateDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",94, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // Create1 ::= CreateTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",94, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // Create1 ::= Function 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",94, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // Create1 ::= Procedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",94, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // Create ::= CREATE Create1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // UpdateFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("UpdateFrom",92, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // UpdateFrom ::= FROM IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("UpdateFrom",92, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // Update3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update3",91, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // Update3 ::= Coma Update1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update3",91, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // Update2 ::= Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update2",90, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // Update2 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update2",90, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // Update1 ::= ID Igual Update2 Update3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update1",89, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // Update ::= UPDATE Top IDL3 SET Update1 UpdateFrom Where 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update",88, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // DeleteServer ::= Aparentesis ID Coma Varchar Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteServer",87, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // Delete3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete3",86, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // Delete3 ::= Coma IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete3",86, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // Delete2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete2",85, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // Delete2 ::= FROM IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete2",85, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // Delete1 ::= IDL3 Delete2 Where 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete1",84, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // Delete1 ::= OPENQUERY DeleteServer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete1",84, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // DeleteFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteFrom",83, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // DeleteFrom ::= FROM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteFrom",83, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // Delete ::= DELETE Top DeleteFrom Delete1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete",82, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // InsertValores1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores1",81, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // InsertValores1 ::= Coma Aparentesis InsertTipo Cparentesis InsertValores1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores1",81, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // InsertValores ::= DEFAULT VALUES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores",80, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // InsertValores ::= VALUES Aparentesis InsertTipo Cparentesis InsertValores1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores",80, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // InsertTipo2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo2",79, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // InsertTipo2 ::= Coma InsertTipo1 InsertTipo2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo2",79, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // InsertTipo1 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // InsertTipo1 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // InsertTipo1 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // InsertTipo1 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // InsertTipo1 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // InsertTipo1 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // InsertTipo ::= InsertTipo1 InsertTipo2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // InsertListaColumna ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertListaColumna",76, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // InsertListaColumna ::= ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertListaColumna",76, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // InsertInto ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertInto",75, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // InsertInto ::= INTO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertInto",75, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // Insert ::= INSERT Top InsertInto IDL3 InsertListaColumna InsertValores 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Insert",74, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // ListaColumnas2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas2",73, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // ListaColumnas2 ::= Coma ID ListaColumnas2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas2",73, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // ListaColumnas1 ::= ID ListaColumnas2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas1",72, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // ListaColumnas ::= Aparentesis ListaColumnas1 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas",71, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // SelectColumnas1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas1",70, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // SelectColumnas1 ::= Coma Operacion AsElement SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas1",70, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // SelectColumnas ::= Mul SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas",69, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // SelectColumnas ::= Operacion AsElement SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas",69, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // JoinOuter ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinOuter",68, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // JoinOuter ::= OUTER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinOuter",68, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // JoinType ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // JoinType ::= FULL JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // JoinType ::= LEFT JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // JoinType ::= RIGHT JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // JoinType ::= INNER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // SelectFromJoin ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFromJoin",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // SelectFromJoin ::= JoinType JOIN IDL3 AsElement ON Condicion SelectFromJoin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFromJoin",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // SelectFrom1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom1",65, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // SelectFrom1 ::= Coma IDL3 AsElement SelectFromJoin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom1",65, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // SelectFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom",64, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // SelectFrom ::= FROM IDL3 AsElement SelectFromJoin SelectFrom1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom",64, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // GroupBy1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy1",63, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // GroupBy1 ::= Coma Operacion GroupBy1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy1",63, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // GroupBy ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy",62, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // GroupBy ::= GROUP BY Operacion GroupBy1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy",62, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // OrderBy3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy3",61, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // OrderBy3 ::= Operacion OrderBy1 OrderBy2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy3",61, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // OrderBy2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",60, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // OrderBy2 ::= DESC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",60, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // OrderBy2 ::= ASC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",60, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // OrderBy1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy1",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // OrderBy1 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy1",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // OrderBy ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy",58, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // OrderBy ::= ORDER BY Operacion OrderBy1 OrderBy2 OrderBy3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy",58, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // Having ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Having",57, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // Having ::= HAVING Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Having",57, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // Select1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",56, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // Select1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",56, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // Select1 ::= ALL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",56, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // Select ::= SELECT Select1 Top SelectColumnas SelectFrom Where GroupBy Having OrderBy 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select",55, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // Where ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Where",54, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // Where ::= WHERE Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Where",54, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // Condicion5 ::= OR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion5",52, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // Condicion5 ::= AND 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion5",52, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // LikeOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LikeOption",53, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // LikeOption ::= Porce 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LikeOption",53, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Condicion4 ::= Not LIKE LikeOption Varchar LikeOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Condicion4 ::= Not BETWEEN Operacion AND Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Condicion4 ::= Not IN Aparentesis Operacion Operaciones Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Condicion3 ::= Condicion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Condicion3 ::= IS Not NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Condicion3 ::= Igual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Condicion3 ::= Exclamacion Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Condicion3 ::= Dbarra Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Condicion3 ::= Dampersand Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Condicion3 ::= Diferente Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Condicion3 ::= Digual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Condicion3 ::= MayorIgual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Condicion3 ::= Mayor Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Condicion3 ::= MenorIgual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Condicion3 ::= Menor Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Condicion2 ::= Operacion Condicion3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion2",49, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Condicion1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion1",48, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Condicion1 ::= Condicion5 Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion1",48, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // Condicion ::= Not Condicion2 Condicion1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion",47, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // Condicion ::= Aparentesis Condicion Cparentesis Condicion1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion",47, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // Top1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top1",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Top1 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top1",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // Top ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Top ::= TOP Aparentesis Number Cparentesis Top1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Not ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Not",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Not ::= NOT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Not",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // Operaciones ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operaciones",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // Operaciones ::= Coma Operacion Operaciones 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operaciones",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Operacion6 ::= Mul Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Operacion6 ::= Number Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Operacion6 ::= IDL5 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Operacion5 ::= COUNT Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Operacion5 ::= MAX Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Operacion5 ::= MIN Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Operacion5 ::= AVG Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Operacion5 ::= SUM Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Operacion5 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Operacion5 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Operacion5 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Operacion5 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Operacion5 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Operacion5 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Operacion5 ::= IDL5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Operacion3 ::= Operacion5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion3",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Operacion3 ::= Aparentesis Operacion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion3",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Operacion4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Operacion4 ::= Div Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Operacion4 ::= Mul Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Operacion1 ::= Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion1",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Operacion2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Operacion2 ::= Resta Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Operacion2 ::= Suma Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Operacion ::= Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // AsElement1 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement1",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // AsElement1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement1",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // AsElement ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // AsElement ::= AsElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // AsElement ::= AS AsElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Truncate ::= TRUNCATE TABLE IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Truncate",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // DropIndex2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex2",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // DropIndex2 ::= Coma DropIndex1 DropIndex2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex2",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // DropIndex1 ::= ID ON IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex1",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // DropIndex ::= INDEX AlterTableDrop5 DropIndex1 DropIndex2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // DropDataBase1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase1",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // DropDataBase1 ::= Coma ID DropDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase1",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // DropDataBase ::= DATABASE AlterTableDrop5 ID DropDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // DropUser ::= USER AlterTableDrop5 ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropUser",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // DropView1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView1",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // DropView1 ::= Coma IDL1 DropView1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView1",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // DropView ::= VIEW AlterTableDrop5 IDL1 DropView1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // DropTable1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable1",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // DropTable1 ::= Coma IDL3 DropTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable1",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // DropTable ::= TABLE AlterTableDrop5 IDL3 DropTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // DropOptions ::= DropIndex 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // DropOptions ::= DropDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // DropOptions ::= DropView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // DropOptions ::= DropUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // DropOptions ::= DropTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Drop ::= DROP DropOptions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Drop",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // TipoDeDato4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato4",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // TipoDeDato4 ::= Coma Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato4",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // TipoDeDato2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato2",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // TipoDeDato2 ::= Aparentesis Integer TipoDeDato4 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato2",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // TipoDeDato3 ::= VARBINARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // TipoDeDato3 ::= IMAGE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // TipoDeDato3 ::= BINARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // TipoDeDato3 ::= NVARCHAR Aparentesis MAX Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // TipoDeDato3 ::= NVARCHAR Aparentesis Number Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // TipoDeDato3 ::= NTEXT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // TipoDeDato3 ::= NCHAR Aparentesis Number Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // TipoDeDato3 ::= VARCHAR Aparentesis MAX Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // TipoDeDato3 ::= VARCHAR Aparentesis Number Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // TipoDeDato3 ::= TEXT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // TipoDeDato3 ::= CHAR Aparentesis Number Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // TipoDeDato3 ::= TIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // TipoDeDato3 ::= SMALLDATETIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // TipoDeDato3 ::= DATETIMEOFFSET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // TipoDeDato3 ::= DATETIME2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // TipoDeDato3 ::= DATETIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // TipoDeDato3 ::= DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // TipoDeDato3 ::= REAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // TipoDeDato3 ::= FLOAT Aparentesis Number Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // TipoDeDato3 ::= FLOAT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // TipoDeDato3 ::= SMALLMONEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // TipoDeDato3 ::= NUMERIC Aparentesis Number Coma Number Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // TipoDeDato3 ::= MONEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // TipoDeDato3 ::= DECIMAL Aparentesis Number Coma Number Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // TipoDeDato3 ::= BIT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // TipoDeDato3 ::= TINYINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // TipoDeDato3 ::= SMALLINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // TipoDeDato3 ::= INT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // TipoDeDato3 ::= BIGINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // TipoDeDato1 ::= Acorchete TipoDeDato3 Ccorchete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato1",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // TipoDeDato1 ::= TipoDeDato3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato1",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // TipoDeDato ::= TipoDeDato1 TipoDeDato2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Var ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Var",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // IFExists ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IFExists",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // IDL6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL6",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // IDL6 ::= Punto IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL6",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // IDL5 ::= ID IDL6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL5",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // IDL4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL4",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // IDL4 ::= Punto IDL1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL4",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // IDL3 ::= ID IDL4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL3",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // IDL2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL2",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // IDL2 ::= Punto ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL2",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // IDL1 ::= ID IDL2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL1",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ID ::= Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ID",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ID ::= Acorchete Identificador Ccorchete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ID",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Fin ::= GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Fin",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Fin ::= PuntoYComa 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Fin",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SentenciasTSQL ::= Function 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTSQL",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SentenciasTSQL ::= ExecuteProcedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTSQL",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SentenciasTSQL ::= Procedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTSQL",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SentenciasTSQL ::= Cursor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTSQL",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SentenciasTCL ::= Save 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SentenciasTCL ::= Commit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SentenciasTCL ::= Rollback 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // SentenciasTCL ::= Transact 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // SentenciasDDL ::= Drop 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // SentenciasDDL ::= Alter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // SentenciasDDL ::= Truncate 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SentenciasDDL ::= Create 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SentenciasDML ::= Update 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // SentenciasDML ::= Delete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // SentenciasDML ::= Insert 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // SentenciasDML ::= Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Inicio2 ::= SentenciasTSQL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Inicio2 ::= SentenciasTCL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Inicio2 ::= SentenciasDDL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Inicio2 ::= SentenciasDML 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Inicio1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Inicio1 ::= error Fin Inicio1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Inicio1 ::= Inicio2 Fin Inicio1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Inicio1 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

