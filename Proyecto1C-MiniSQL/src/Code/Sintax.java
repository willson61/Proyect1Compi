
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Oct 30 00:44:16 CST 2019
//----------------------------------------------------

package Code;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java_cup.runtime.virtual_parse_stack;
import java.lang.reflect.Field;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Oct 30 00:44:16 CST 2019
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0206\000\002\002\004\000\002\002\005\000\002\002" +
    "\005\000\002\002\002\000\002\003\003\000\002\003\003" +
    "\000\002\003\003\000\002\003\003\000\002\004\003\000" +
    "\002\004\003\000\002\004\003\000\002\004\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\006\003\000\002\006\003\000\002\006\003" +
    "\000\002\006\003\000\002\007\003\000\002\010\003\000" +
    "\002\010\003\000\002\011\003\000\002\011\005\000\002" +
    "\012\004\000\002\013\004\000\002\013\002\000\002\014" +
    "\004\000\002\015\004\000\002\015\002\000\002\016\004" +
    "\000\002\017\004\000\002\017\002\000\002\020\004\000" +
    "\002\021\004\000\002\022\004\000\002\023\003\000\002" +
    "\023\005\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\024\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\024\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\025\006\000\002\025\002\000\002\026" +
    "\004\000\002\026\002\000\002\027\004\000\002\030\003" +
    "\000\002\030\003\000\002\030\003\000\002\030\003\000" +
    "\002\030\003\000\002\031\006\000\002\032\005\000\002" +
    "\032\002\000\002\033\006\000\002\034\005\000\002\034" +
    "\002\000\002\035\005\000\002\036\006\000\002\037\005" +
    "\000\002\037\002\000\002\040\006\000\002\041\005\000" +
    "\002\042\005\000\002\042\002\000\002\043\005\000\002" +
    "\044\004\000\002\044\003\000\002\044\002\000\002\045" +
    "\003\000\002\045\003\000\002\046\004\000\002\047\005" +
    "\000\002\047\005\000\002\047\002\000\002\050\004\000" +
    "\002\051\005\000\002\051\005\000\002\051\002\000\002" +
    "\052\005\000\002\052\003\000\002\053\003\000\002\053" +
    "\003\000\002\053\003\000\002\053\003\000\002\053\003" +
    "\000\002\053\003\000\002\053\005\000\002\053\005\000" +
    "\002\053\005\000\002\053\005\000\002\053\005\000\002" +
    "\054\004\000\002\054\004\000\002\054\004\000\002\054" +
    "\004\000\002\055\005\000\002\055\002\000\002\056\003" +
    "\000\002\056\002\000\002\057\007\000\002\057\002\000" +
    "\002\060\003\000\002\060\002\000\002\061\005\000\002" +
    "\061\006\000\002\062\004\000\002\062\002\000\002\063" +
    "\004\000\002\064\004\000\002\064\004\000\002\064\004" +
    "\000\002\064\004\000\002\064\004\000\002\064\004\000" +
    "\002\064\004\000\002\064\004\000\002\064\004\000\002" +
    "\064\004\000\002\064\005\000\002\064\004\000\002\065" +
    "\007\000\002\065\006\000\002\065\004\000\002\066\003" +
    "\000\002\066\003\000\002\067\004\000\002\067\002\000" +
    "\002\070\013\000\002\071\003\000\002\071\003\000\002" +
    "\071\002\000\002\072\004\000\002\072\002\000\002\073" +
    "\010\000\002\073\002\000\002\074\004\000\002\074\002" +
    "\000\002\075\003\000\002\075\003\000\002\075\002\000" +
    "\002\076\005\000\002\076\002\000\002\077\006\000\002" +
    "\077\002\000\002\100\005\000\002\100\002\000\002\101" +
    "\007\000\002\101\002\000\002\102\006\000\002\102\002" +
    "\000\002\103\011\000\002\103\002\000\002\104\003\000" +
    "\002\104\004\000\002\104\004\000\002\104\004\000\002" +
    "\104\002\000\002\105\003\000\002\105\002\000\002\106" +
    "\005\000\002\106\004\000\002\107\006\000\002\107\002" +
    "\000\002\110\005\000\002\111\004\000\002\112\005\000" +
    "\002\112\002\000\002\113\010\000\002\114\003\000\002" +
    "\114\002\000\002\115\003\000\002\115\002\000\002\116" +
    "\004\000\002\117\003\000\002\117\003\000\002\117\003" +
    "\000\002\117\003\000\002\117\003\000\002\120\005\000" +
    "\002\120\002\000\002\121\007\000\002\121\004\000\002" +
    "\122\007\000\002\122\002\000\002\123\006\000\002\124" +
    "\003\000\002\124\002\000\002\125\004\000\002\125\005" +
    "\000\002\126\005\000\002\127\005\000\002\127\002\000" +
    "\002\130\007\000\002\131\011\000\002\132\006\000\002" +
    "\133\003\000\002\133\003\000\002\134\004\000\002\134" +
    "\002\000\002\135\005\000\002\135\002\000\002\136\004" +
    "\000\002\137\003\000\002\137\003\000\002\137\003\000" +
    "\002\137\003\000\002\137\003\000\002\137\003\000\002" +
    "\137\003\000\002\140\004\000\002\141\005\000\002\142" +
    "\004\000\002\143\005\000\002\143\002\000\002\144\004" +
    "\000\002\144\002\000\002\145\003\000\002\145\002\000" +
    "\002\146\005\000\002\146\003\000\002\147\014\000\002" +
    "\150\003\000\002\150\003\000\002\151\003\000\002\151" +
    "\003\000\002\152\005\000\002\152\002\000\002\154\003" +
    "\000\002\154\003\000\002\154\003\000\002\155\006\000" +
    "\002\156\003\000\002\156\002\000\002\157\003\000\002" +
    "\157\003\000\002\157\003\000\002\157\003\000\002\160" +
    "\005\000\002\161\004\000\002\162\003\000\002\162\003" +
    "\000\002\162\002\000\002\163\006\000\002\164\003\000" +
    "\002\164\003\000\002\164\002\000\002\165\006\000\002" +
    "\166\014\000\002\167\003\000\002\167\002\000\002\170" +
    "\005\000\002\171\005\000\002\172\006\000\002\172\002" +
    "\000\002\173\004\000\002\173\002\000\002\174\007\000" +
    "\002\174\002\000\002\175\011\000\002\176\004\000\002" +
    "\176\002\000\002\177\004\000\002\177\003\000\002\202" +
    "\005\000\002\202\003\000\002\203\004\000\002\203\003" +
    "\000\002\204\003\000\002\200\003\000\002\200\003\000" +
    "\002\200\003\000\002\201\005\000\002\201\002\000\002" +
    "\205\006\000\002\206\004\000\002\206\002\000\002\207" +
    "\004\000\002\207\002\000\002\210\003\000\002\210\004" +
    "\000\002\210\002\000\002\211\003\000\002\211\002\000" +
    "\002\212\007\000\002\212\002\000\002\213\005\000\002" +
    "\213\003\000\002\213\002\000\002\214\007\000\002\214" +
    "\006\000\002\214\004\000\002\214\005\000\002\215\003" +
    "\000\002\215\003\000\002\215\003\000\002\215\003\000" +
    "\002\215\003\000\002\216\003\000\002\216\002\000\002" +
    "\217\003\000\002\217\005\000\002\220\004\000\002\220" +
    "\003\000\002\220\002\000\002\221\010\000\002\222\005" +
    "\000\002\222\002\000\002\223\004\000\002\223\002\000" +
    "\002\224\004\000\002\224\010\000\002\224\007\000\002" +
    "\225\003\000\002\225\003\000\002\225\002\000\002\226" +
    "\004\000\002\226\002\000\002\227\005\000\002\227\002" +
    "\000\002\230\005\000\002\230\002\000\002\231\004\000" +
    "\002\231\004\000\002\232\003\000\002\232\004\000\002" +
    "\233\003\000\002\233\003\000\002\234\004\000\002\234" +
    "\003\000\002\235\004\000\002\236\006\000\002\236\005" +
    "\000\002\236\013\000\002\236\007\000\002\237\007\000" +
    "\002\240\006\000\002\241\005\000\002\241\002\000\002" +
    "\242\006\000\002\242\002\000\002\243\006\000\002\244" +
    "\004\000\002\245\003\000\002\245\003\000\002\245\003" +
    "\000\002\245\003\000\002\245\003\000\002\245\003\000" +
    "\002\246\005\000\002\247\003\000\002\247\003\000\002" +
    "\250\004\000\002\250\005\000\002\251\004\000\002\252" +
    "\007\000\002\253\003\000\002\253\002\000\002\254\005" +
    "\000\002\255\003\000\002\255\005\000\002\255\003\000" +
    "\002\256\006\000\002\257\003\000\002\257\004\000\002" +
    "\260\005\000\002\261\003\000\002\261\003\000\002\262" +
    "\003\000\002\262\005\000\002\263\005\000\002\264\005" +
    "\000\002\264\005\000\002\265\005\000\002\265\002\000" +
    "\002\266\003\000\002\266\002\000\002\267\003\000\002" +
    "\267\003\000\002\270\005\000\002\271\004\000\002\271" +
    "\002\000\002\272\005\000\002\272\002\000\002\273\003" +
    "\000\002\273\002\000\002\274\003\000\002\274\003\000" +
    "\002\275\003\000\002\275\003\000\002\276\003\000\002" +
    "\276\003\000\002\276\002\000\002\277\004\000\002\300" +
    "\004\000\002\300\002\000\002\301\004\000\002\302\004" +
    "\000\002\302\002\000\002\303\005\000\002\304\004\000" +
    "\002\304\002\000\002\305\013\000\002\306\003\000\002" +
    "\306\003\000\002\307\004\000\002\307\002\000\002\310" +
    "\003\000\002\310\002\000\002\311\005\000\002\312\004" +
    "\000\002\312\002\000\002\313\005\000\002\313\005\000" +
    "\002\313\004\000\002\314\004\000\002\314\002\000\002" +
    "\315\003\000\002\315\002\000\002\316\003\000\002\316" +
    "\003\000\002\317\004\000\002\317\002\000\002\320\004" +
    "\000\002\321\003\000\002\321\003\000\002\321\005\000" +
    "\002\322\004\000\002\322\002\000\002\323\003\000\002" +
    "\323\003\000\002\324\003\000\002\324\003\000\002\324" +
    "\003\000\002\324\003\000\002\325\004\000\002\325\002" +
    "\000\002\326\005\000\002\326\003\000\002\327\005\000" +
    "\002\330\005\000\002\330\002\000\002\331\004\000\002" +
    "\331\002\000\002\332\012\000\002\333\003\000\002\333" +
    "\002\000\002\334\004\000\002\335\007\000\002\336\004" +
    "\000\002\336\002\000\002\337\003\000\002\337\002\000" +
    "\002\340\003\000\002\340\002\000\002\341\003\000\002" +
    "\341\003\000\002\342\007\000\002\343\005\000\002\343" +
    "\002\000\002\344\004\000\002\344\002\000\002\345\003" +
    "\000\002\345\003\000\002\345\007\000\002\345\006\000" +
    "\002\345\005\000\002\346\005\000\002\346\003\000\002" +
    "\347\013\000\002\350\003\000\002\350\003\000\002\351" +
    "\015\000\002\352\003\000\002\352\003\000\002\352\002" +
    "\000\002\353\003\000\002\353\003\000\002\353\002\000" +
    "\002\354\003\000\002\354\003\000\002\354\003\000\002" +
    "\354\003\000\002\354\002\000\002\355\003\000\002\355" +
    "\003\000\002\355\003\000\002\355\002\000\002\356\003" +
    "\000\002\356\002\000\002\357\005\000\002\357\002\000" +
    "\002\360\004\000\002\360\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u037e\000\040\002\ufffe\003\034\037\030\065\023\106" +
    "\021\122\006\133\007\140\025\142\022\167\024\227\012" +
    "\230\043\236\040\251\041\263\031\001\002\000\006\325" +
    "\uffee\u010b\uffee\001\002\000\006\325\ufff4\u010b\ufff4\001\002" +
    "\000\006\216\u0324\221\u0322\001\002\000\044\007\u033b\213" +
    "\uff66\220\uff66\252\u0339\326\uff66\327\uff66\330\uff66\331\uff66" +
    "\332\uff66\u0108\uff66\u010e\uff66\u0110\uff66\u0124\uff66\u0127\uff66\u0128" +
    "\uff66\u0129\uff66\u012b\uff66\001\002\000\006\325\352\u010b\350" +
    "\001\002\000\004\002\u0336\001\002\000\004\174\u0334\001" +
    "\002\000\006\325\ufffc\u010b\ufffc\001\002\000\006\325\ufff7" +
    "\u010b\ufff7\001\002\000\006\325\ufff6\u010b\ufff6\001\002\000" +
    "\006\325\ufff3\u010b\ufff3\001\002\000\006\325\ufffd\u010b\ufffd" +
    "\001\002\000\006\325\ufff0\u010b\ufff0\001\002\000\012\216" +
    "\u0324\221\u0322\325\ufe5e\u010b\ufe5e\001\002\000\012\216\u0324" +
    "\221\u0322\325\ufe5b\u010b\ufe5b\001\002\000\006\216\u0324\221" +
    "\u0322\001\002\000\032\006\ufe58\071\ufe58\126\ufeef\132\ufeef" +
    "\174\u02c2\212\ufeef\217\u02bb\243\u02bf\262\u02be\264\u0122\273" +
    "\u02c1\322\ufe58\001\002\000\012\146\uff84\213\112\u010e\uff84" +
    "\u0129\uff84\001\002\000\006\325\ufff9\u010b\ufff9\001\002\000" +
    "\006\325\ufff2\u010b\ufff2\001\002\000\022\006\ufe58\071\ufe58" +
    "\174\u011e\217\u011a\262\u011c\264\u0122\273\u011f\322\ufe58\001" +
    "\002\000\014\132\356\174\363\217\355\262\357\273\364" +
    "\001\002\000\006\325\uffed\u010b\uffed\001\002\000\006\325" +
    "\ufffa\u010b\ufffa\001\002\000\006\325\352\u010b\350\001\002" +
    "\000\006\325\ufffb\u010b\ufffb\001\002\000\006\325\ufff1\u010b" +
    "\ufff1\001\002\000\006\325\uffef\u010b\uffef\001\002\000\014" +
    "\063\uff84\213\112\250\uff84\u010e\uff84\u0129\uff84\001\002\000" +
    "\010\213\112\u010e\uff84\u0129\uff84\001\002\000\006\325\ufff5" +
    "\u010b\ufff5\001\002\000\006\u010e\047\u0129\046\001\002\000" +
    "\006\325\ufff8\u010b\ufff8\001\002\000\004\214\052\001\002" +
    "\000\324\004\uffea\011\uffea\037\uffea\042\uffea\046\uffea\051" +
    "\uffea\052\uffea\054\uffea\056\uffea\063\uffea\065\uffea\066\uffea" +
    "\070\uffea\072\uffea\102\uffea\103\uffea\105\uffea\113\uffea\114" +
    "\uffea\115\uffea\126\uffea\127\uffea\134\uffea\135\uffea\150\uffea" +
    "\151\uffea\152\uffea\154\uffea\165\uffea\170\uffea\212\uffea\214" +
    "\uffea\215\uffea\220\uffea\233\uffea\236\uffea\237\uffea\243\uffea" +
    "\244\uffea\251\uffea\263\uffea\264\uffea\265\uffea\267\uffea\304" +
    "\uffea\312\uffea\314\uffea\325\uffea\326\uffea\327\uffea\330\uffea" +
    "\331\uffea\332\uffea\337\uffea\340\uffea\341\uffea\342\uffea\343" +
    "\uffea\344\uffea\345\uffea\346\uffea\347\uffea\350\uffea\351\uffea" +
    "\352\uffea\353\uffea\354\uffea\355\uffea\356\uffea\357\uffea\360" +
    "\uffea\361\uffea\362\uffea\363\uffea\364\uffea\365\uffea\366\uffea" +
    "\367\uffea\370\uffea\u0106\uffea\u0107\uffea\u0108\uffea\u0109\uffea\u010b" +
    "\uffea\u010c\uffea\u010d\uffea\u010e\uffea\u0110\uffea\u0111\uffea\u0117\uffea" +
    "\u011a\uffea\u011b\uffea\u011c\uffea\u011d\uffea\u011e\uffea\u011f\uffea\u0120" +
    "\uffea\u0121\uffea\u0122\uffea\u0123\uffea\u0124\uffea\u0127\uffea\u0128\uffea" +
    "\u0129\uffea\u012b\uffea\001\002\000\004\u0129\050\001\002\000" +
    "\004\u010f\051\001\002\000\324\004\uffe9\011\uffe9\037\uffe9" +
    "\042\uffe9\046\uffe9\051\uffe9\052\uffe9\054\uffe9\056\uffe9\063" +
    "\uffe9\065\uffe9\066\uffe9\070\uffe9\072\uffe9\102\uffe9\103\uffe9" +
    "\105\uffe9\113\uffe9\114\uffe9\115\uffe9\126\uffe9\127\uffe9\134" +
    "\uffe9\135\uffe9\150\uffe9\151\uffe9\152\uffe9\154\uffe9\165\uffe9" +
    "\170\uffe9\212\uffe9\214\uffe9\215\uffe9\220\uffe9\233\uffe9\236" +
    "\uffe9\237\uffe9\243\uffe9\244\uffe9\251\uffe9\263\uffe9\264\uffe9" +
    "\265\uffe9\267\uffe9\304\uffe9\312\uffe9\314\uffe9\325\uffe9\326" +
    "\uffe9\327\uffe9\330\uffe9\331\uffe9\332\uffe9\337\uffe9\340\uffe9" +
    "\341\uffe9\342\uffe9\343\uffe9\344\uffe9\345\uffe9\346\uffe9\347" +
    "\uffe9\350\uffe9\351\uffe9\352\uffe9\353\uffe9\354\uffe9\355\uffe9" +
    "\356\uffe9\357\uffe9\360\uffe9\361\uffe9\362\uffe9\363\uffe9\364" +
    "\uffe9\365\uffe9\366\uffe9\367\uffe9\370\uffe9\u0106\uffe9\u0107\uffe9" +
    "\u0108\uffe9\u0109\uffe9\u010b\uffe9\u010c\uffe9\u010d\uffe9\u010e\uffe9\u0110" +
    "\uffe9\u0111\uffe9\u0117\uffe9\u011a\uffe9\u011b\uffe9\u011c\uffe9\u011d\uffe9" +
    "\u011e\uffe9\u011f\uffe9\u0120\uffe9\u0121\uffe9\u0122\uffe9\u0123\uffe9\u0124" +
    "\uffe9\u0127\uffe9\u0128\uffe9\u0129\uffe9\u012b\uffe9\001\002\000\034" +
    "\024\ufe0e\025\ufe0e\026\ufe0e\027\ufe0e\030\ufe0e\031\ufe0e\032" +
    "\ufe0e\033\ufe0e\034\ufe0e\046\ufe0e\u0102\054\u0103\053\u0104\ufe0e" +
    "\001\002\000\030\024\ufe0f\025\ufe0f\026\ufe0f\027\ufe0f\030" +
    "\ufe0f\031\ufe0f\032\ufe0f\033\ufe0f\034\ufe0f\046\ufe0f\u0104\ufe0f" +
    "\001\002\000\030\024\ufe10\025\ufe10\026\ufe10\027\ufe10\030" +
    "\ufe10\031\ufe10\032\ufe10\033\ufe10\034\ufe10\046\ufe10\u0104\ufe10" +
    "\001\002\000\030\024\056\025\ufe0b\026\ufe0b\027\ufe0b\030" +
    "\ufe0b\031\ufe0b\032\ufe0b\033\ufe0b\034\ufe0b\046\ufe0b\u0104\060" +
    "\001\002\000\024\025\ufe0d\026\ufe0d\027\ufe0d\030\ufe0d\031" +
    "\ufe0d\032\ufe0d\033\ufe0d\034\ufe0d\046\ufe0d\001\002\000\024" +
    "\025\062\026\063\027\064\030\065\031\ufe06\032\ufe06\033" +
    "\ufe06\034\ufe06\046\ufe06\001\002\000\024\025\ufe0c\026\ufe0c" +
    "\027\ufe0c\030\ufe0c\031\ufe0c\032\ufe0c\033\ufe0c\034\ufe0c\046" +
    "\ufe0c\001\002\000\014\031\071\032\067\033\070\034\ufe02" +
    "\046\ufe02\001\002\000\014\031\ufe0a\032\ufe0a\033\ufe0a\034" +
    "\ufe0a\046\ufe0a\001\002\000\014\031\ufe09\032\ufe09\033\ufe09" +
    "\034\ufe09\046\ufe09\001\002\000\014\031\ufe08\032\ufe08\033" +
    "\ufe08\034\ufe08\046\ufe08\001\002\000\014\031\ufe07\032\ufe07" +
    "\033\ufe07\034\ufe07\046\ufe07\001\002\000\006\034\073\046" +
    "\ufe00\001\002\000\006\034\ufe04\046\ufe04\001\002\000\006" +
    "\034\ufe03\046\ufe03\001\002\000\006\034\ufe05\046\ufe05\001" +
    "\002\000\004\046\074\001\002\000\004\046\ufe01\001\002" +
    "\000\004\133\007\001\002\000\010\046\077\325\ufdfe\u010b" +
    "\ufdfe\001\002\000\006\325\ufe11\u010b\ufe11\001\002\000\004" +
    "\251\100\001\002\000\010\226\102\325\ufdfc\u010b\ufdfc\001" +
    "\002\000\006\325\ufdff\u010b\ufdff\001\002\000\006\u010e\047" +
    "\u0129\046\001\002\000\012\325\uff42\u010b\uff42\u010c\106\u0111" +
    "\uff42\001\002\000\006\325\ufdfd\u010b\ufdfd\001\002\000\010" +
    "\325\uff44\u010b\uff44\u0111\uff44\001\002\000\006\u010e\047\u0129" +
    "\046\001\002\000\012\325\uff42\u010b\uff42\u010c\106\u0111\uff42" +
    "\001\002\000\010\325\uff43\u010b\uff43\u0111\uff43\001\002\000" +
    "\006\u010e\047\u0129\046\001\002\000\004\u0110\113\001\002" +
    "\000\004\u0128\114\001\002\000\004\u0111\115\001\002\000" +
    "\046\063\uff82\146\uff82\220\uff82\250\uff82\300\116\326\uff82" +
    "\327\uff82\330\uff82\331\uff82\332\uff82\u0108\uff82\u010e\uff82\u0110" +
    "\uff82\u0124\uff82\u0127\uff82\u0128\uff82\u0129\uff82\u012b\uff82\001\002" +
    "\000\044\063\uff83\146\uff83\220\uff83\250\uff83\326\uff83\327" +
    "\uff83\330\uff83\331\uff83\332\uff83\u0108\uff83\u010e\uff83\u0110\uff83" +
    "\u0124\uff83\u0127\uff83\u0128\uff83\u0129\uff83\u012b\uff83\001\002\000" +
    "\044\063\uff85\146\uff85\220\uff85\250\uff85\326\uff85\327\uff85" +
    "\330\uff85\331\uff85\332\uff85\u0108\uff85\u010e\uff85\u0110\uff85\u0124" +
    "\uff85\u0127\uff85\u0128\uff85\u0129\uff85\u012b\uff85\001\002\000\174" +
    "\004\uffe3\037\uffe3\042\uffe3\046\uffe3\051\uffe3\054\uffe3\063" +
    "\uffe3\066\uffe3\070\uffe3\102\uffe3\103\uffe3\105\uffe3\127\uffe3" +
    "\134\uffe3\135\uffe3\151\uffe3\152\uffe3\154\uffe3\165\uffe3\170" +
    "\uffe3\215\uffe3\220\uffe3\233\uffe3\237\uffe3\244\uffe3\263\uffe3" +
    "\264\uffe3\265\uffe3\267\uffe3\304\uffe3\325\uffe3\326\uffe3\327" +
    "\uffe3\330\uffe3\331\uffe3\332\uffe3\u0106\uffe3\u0107\uffe3\u0108\uffe3" +
    "\u0109\uffe3\u010b\uffe3\u010c\uffe3\u010d\321\u010e\uffe3\u0110\uffe3\u0111" +
    "\uffe3\u011a\uffe3\u011b\uffe3\u011c\uffe3\u011d\uffe3\u011e\uffe3\u011f\uffe3" +
    "\u0120\uffe3\u0121\uffe3\u0122\uffe3\u0123\uffe3\u0124\uffe3\u0127\uffe3\u0128" +
    "\uffe3\u0129\uffe3\u012b\uffe3\001\002\000\004\152\122\001\002" +
    "\000\006\u010e\047\u0129\046\001\002\000\004\u0123\311\001" +
    "\002\000\012\063\126\304\uff20\325\uff20\u010b\uff20\001\002" +
    "\000\010\304\134\325\uff6a\u010b\uff6a\001\002\000\006\u010e" +
    "\047\u0129\046\001\002\000\012\304\uff29\325\uff29\u010b\uff29" +
    "\u010c\130\001\002\000\006\u010e\047\u0129\046\001\002\000" +
    "\010\304\uff21\325\uff21\u010b\uff21\001\002\000\012\304\uff29" +
    "\325\uff29\u010b\uff29\u010c\130\001\002\000\010\304\uff2a\325" +
    "\uff2a\u010b\uff2a\001\002\000\036\215\137\220\uff86\326\uff86" +
    "\327\uff86\330\uff86\331\uff86\332\uff86\u010e\uff86\u0110\141\u0124" +
    "\uff86\u0127\uff86\u0128\uff86\u0129\uff86\u012b\uff86\001\002\000\006" +
    "\325\uff27\u010b\uff27\001\002\000\034\220\171\326\153\327" +
    "\164\330\172\331\170\332\165\u010e\047\u0110\167\u0124\151" +
    "\u0127\155\u0128\156\u0129\046\u012b\166\001\002\000\042\070" +
    "\uff87\127\uff87\170\uff87\220\uff87\326\uff87\327\uff87\330\uff87" +
    "\331\uff87\332\uff87\u010e\uff87\u0110\uff87\u0124\uff87\u0127\uff87\u0128" +
    "\uff87\u0129\uff87\u012b\uff87\001\002\000\022\046\uff6b\102\uff6b" +
    "\105\uff6b\237\uff6b\267\uff6b\325\uff6b\u010b\uff6b\u0111\uff6b\001" +
    "\002\000\036\215\137\220\uff86\326\uff86\327\uff86\330\uff86" +
    "\331\uff86\332\uff86\u010e\uff86\u0110\141\u0124\uff86\u0127\uff86\u0128" +
    "\uff86\u0129\uff86\u012b\uff86\001\002\000\004\u0111\143\001\002" +
    "\000\044\042\145\046\uff7e\066\uff7e\102\uff7e\103\uff7e\105" +
    "\uff7e\135\uff7e\154\uff7e\165\uff7e\237\uff7e\264\147\267\uff7e" +
    "\304\uff7e\325\uff7e\u010b\uff7e\u010c\uff7e\u0111\uff7e\001\002\000" +
    "\044\042\uff80\046\uff80\066\uff80\102\uff80\103\uff80\105\uff80" +
    "\135\uff80\154\uff80\165\uff80\237\uff80\264\uff80\267\uff80\304" +
    "\uff80\325\uff80\u010b\uff80\u010c\uff80\u0111\uff80\001\002\000\036" +
    "\215\uff6d\220\uff6d\326\uff6d\327\uff6d\330\uff6d\331\uff6d\332" +
    "\uff6d\u010e\uff6d\u0110\uff6d\u0124\uff6d\u0127\uff6d\u0128\uff6d\u0129\uff6d" +
    "\u012b\uff6d\001\002\000\036\215\137\220\uff86\326\uff86\327" +
    "\uff86\330\uff86\331\uff86\332\uff86\u010e\uff86\u0110\141\u0124\uff86" +
    "\u0127\uff86\u0128\uff86\u0129\uff86\u012b\uff86\001\002\000\036\215" +
    "\uff6c\220\uff6c\326\uff6c\327\uff6c\330\uff6c\331\uff6c\332\uff6c" +
    "\u010e\uff6c\u0110\uff6c\u0124\uff6c\u0127\uff6c\u0128\uff6c\u0129\uff6c\u012b" +
    "\uff6c\001\002\000\044\042\uff7f\046\uff7f\066\uff7f\102\uff7f" +
    "\103\uff7f\105\uff7f\135\uff7f\154\uff7f\165\uff7f\237\uff7f\264" +
    "\uff7f\267\uff7f\304\uff7f\325\uff7f\u010b\uff7f\u010c\uff7f\u0111\uff7f" +
    "\001\002\000\156\042\uff95\046\uff95\051\uff95\054\uff95\063" +
    "\uff95\066\uff95\070\uff95\102\uff95\103\uff95\105\uff95\127\uff95" +
    "\134\uff95\135\uff95\151\uff95\154\uff95\165\uff95\170\uff95\215" +
    "\uff95\220\uff95\237\uff95\244\uff95\264\uff95\267\uff95\304\uff95" +
    "\325\uff95\326\uff95\327\uff95\330\uff95\331\uff95\332\uff95\u0106" +
    "\uff95\u0107\uff95\u0108\uff95\u0109\uff95\u010b\uff95\u010c\uff95\u010e\uff95" +
    "\u0110\uff95\u0111\uff95\u011a\uff95\u011b\uff95\u011c\uff95\u011d\uff95\u011e" +
    "\uff95\u011f\uff95\u0120\uff95\u0121\uff95\u0122\uff95\u0123\uff95\u0124\uff95" +
    "\u0127\uff95\u0128\uff95\u0129\uff95\u012b\uff95\001\002\000\040\070" +
    "\uff86\127\uff86\151\255\170\uff86\215\137\u011a\242\u011b\243" +
    "\u011c\247\u011d\246\u011e\245\u011f\250\u0120\244\u0121\252\u0122" +
    "\254\u0123\251\001\002\000\004\u0110\237\001\002\000\156" +
    "\042\uff98\046\uff98\051\uff98\054\uff98\063\uff98\066\uff98\070" +
    "\uff98\102\uff98\103\uff98\105\uff98\127\uff98\134\uff98\135\uff98" +
    "\151\uff98\154\uff98\165\uff98\170\uff98\215\uff98\220\uff98\237" +
    "\uff98\244\uff98\264\uff98\267\uff98\304\uff98\325\uff98\326\uff98" +
    "\327\uff98\330\uff98\331\uff98\332\uff98\u0106\uff98\u0107\uff98\u0108" +
    "\uff98\u0109\uff98\u010b\uff98\u010c\uff98\u010e\uff98\u0110\uff98\u0111\uff98" +
    "\u011a\uff98\u011b\uff98\u011c\uff98\u011d\uff98\u011e\uff98\u011f\uff98\u0120" +
    "\uff98\u0121\uff98\u0122\uff98\u0123\uff98\u0124\uff98\u0127\uff98\u0128\uff98" +
    "\u0129\uff98\u012b\uff98\001\002\000\156\042\uff96\046\uff96\051" +
    "\uff96\054\uff96\063\uff96\066\uff96\070\uff96\102\uff96\103\uff96" +
    "\105\uff96\127\uff96\134\uff96\135\uff96\151\uff96\154\uff96\165" +
    "\uff96\170\uff96\215\uff96\220\uff96\237\uff96\244\uff96\264\uff96" +
    "\267\uff96\304\uff96\325\uff96\326\uff96\327\uff96\330\uff96\331" +
    "\uff96\332\uff96\u0106\uff96\u0107\uff96\u0108\uff96\u0109\uff96\u010b\uff96" +
    "\u010c\uff96\u010e\uff96\u0110\uff96\u0111\uff96\u011a\uff96\u011b\uff96\u011c" +
    "\uff96\u011d\uff96\u011e\uff96\u011f\uff96\u0120\uff96\u0121\uff96\u0122\uff96" +
    "\u0123\uff96\u0124\uff96\u0127\uff96\u0128\uff96\u0129\uff96\u012b\uff96\001" +
    "\002\000\156\042\uff97\046\uff97\051\uff97\054\uff97\063\uff97" +
    "\066\uff97\070\uff97\102\uff97\103\uff97\105\uff97\127\uff97\134" +
    "\uff97\135\uff97\151\uff97\154\uff97\165\uff97\170\uff97\215\uff97" +
    "\220\uff97\237\uff97\244\uff97\264\uff97\267\uff97\304\uff97\325" +
    "\uff97\326\uff97\327\uff97\330\uff97\331\uff97\332\uff97\u0106\uff97" +
    "\u0107\uff97\u0108\uff97\u0109\uff97\u010b\uff97\u010c\uff97\u010e\uff97\u0110" +
    "\uff97\u0111\uff97\u011a\uff97\u011b\uff97\u011c\uff97\u011d\uff97\u011e\uff97" +
    "\u011f\uff97\u0120\uff97\u0121\uff97\u0122\uff97\u0123\uff97\u0124\uff97\u0127" +
    "\uff97\u0128\uff97\u0129\uff97\u012b\uff97\001\002\000\160\042\uffe0" +
    "\046\uffe0\051\uffe0\054\uffe0\063\uffe0\066\uffe0\070\uffe0\102" +
    "\uffe0\103\uffe0\105\uffe0\127\uffe0\134\uffe0\135\uffe0\151\uffe0" +
    "\154\uffe0\165\uffe0\170\uffe0\215\uffe0\220\uffe0\237\uffe0\244" +
    "\uffe0\264\uffe0\267\uffe0\304\uffe0\325\uffe0\326\uffe0\327\uffe0" +
    "\330\uffe0\331\uffe0\332\uffe0\u0106\uffe0\u0107\uffe0\u0108\uffe0\u0109" +
    "\uffe0\u010b\uffe0\u010c\uffe0\u010d\235\u010e\uffe0\u0110\uffe0\u0111\uffe0" +
    "\u011a\uffe0\u011b\uffe0\u011c\uffe0\u011d\uffe0\u011e\uffe0\u011f\uffe0\u0120" +
    "\uffe0\u0121\uffe0\u0122\uffe0\u0123\uffe0\u0124\uffe0\u0127\uffe0\u0128\uffe0" +
    "\u0129\uffe0\u012b\uffe0\001\002\000\156\042\uff99\046\uff99\051" +
    "\uff99\054\uff99\063\uff99\066\uff99\070\uff99\102\uff99\103\uff99" +
    "\105\uff99\127\uff99\134\uff99\135\uff99\151\uff99\154\uff99\165" +
    "\uff99\170\uff99\215\uff99\220\uff99\237\uff99\244\uff99\264\uff99" +
    "\267\uff99\304\uff99\325\uff99\326\uff99\327\uff99\330\uff99\331" +
    "\uff99\332\uff99\u0106\uff99\u0107\uff99\u0108\uff99\u0109\uff99\u010b\uff99" +
    "\u010c\uff99\u010e\uff99\u0110\uff99\u0111\uff99\u011a\uff99\u011b\uff99\u011c" +
    "\uff99\u011d\uff99\u011e\uff99\u011f\uff99\u0120\uff99\u0121\uff99\u0122\uff99" +
    "\u0123\uff99\u0124\uff99\u0127\uff99\u0128\uff99\u0129\uff99\u012b\uff99\001" +
    "\002\000\156\042\uff9b\046\uff9b\051\uff9b\054\uff9b\063\uff9b" +
    "\066\uff9b\070\uff9b\102\uff9b\103\uff9b\105\uff9b\127\uff9b\134" +
    "\uff9b\135\uff9b\151\uff9b\154\uff9b\165\uff9b\170\uff9b\215\uff9b" +
    "\220\uff9b\237\uff9b\244\uff9b\264\uff9b\267\uff9b\304\uff9b\325" +
    "\uff9b\326\uff9b\327\uff9b\330\uff9b\331\uff9b\332\uff9b\u0106\uff9b" +
    "\u0107\uff9b\u0108\226\u0109\227\u010b\uff9b\u010c\uff9b\u010e\uff9b\u0110" +
    "\uff9b\u0111\uff9b\u011a\uff9b\u011b\uff9b\u011c\uff9b\u011d\uff9b\u011e\uff9b" +
    "\u011f\uff9b\u0120\uff9b\u0121\uff9b\u0122\uff9b\u0123\uff9b\u0124\uff9b\u0127" +
    "\uff9b\u0128\uff9b\u0129\uff9b\u012b\uff9b\001\002\000\044\042\145" +
    "\046\uff7e\066\uff7e\102\uff7e\103\uff7e\105\uff7e\135\uff7e\154" +
    "\uff7e\165\uff7e\237\uff7e\264\147\267\uff7e\304\uff7e\325\uff7e" +
    "\u010b\uff7e\u010c\uff7e\u0111\uff7e\001\002\000\152\042\uff9f\046" +
    "\uff9f\051\uff9f\054\uff9f\063\uff9f\066\uff9f\070\uff9f\102\uff9f" +
    "\103\uff9f\105\uff9f\127\uff9f\134\uff9f\135\uff9f\151\uff9f\154" +
    "\uff9f\165\uff9f\170\uff9f\215\uff9f\220\uff9f\237\uff9f\244\uff9f" +
    "\264\uff9f\267\uff9f\304\uff9f\325\uff9f\326\uff9f\327\uff9f\330" +
    "\uff9f\331\uff9f\332\uff9f\u0106\217\u0107\216\u010b\uff9f\u010c\uff9f" +
    "\u010e\uff9f\u0110\uff9f\u0111\uff9f\u011a\uff9f\u011b\uff9f\u011c\uff9f\u011d" +
    "\uff9f\u011e\uff9f\u011f\uff9f\u0120\uff9f\u0121\uff9f\u0122\uff9f\u0123\uff9f" +
    "\u0124\uff9f\u0127\uff9f\u0128\uff9f\u0129\uff9f\u012b\uff9f\001\002\000" +
    "\004\u0110\213\001\002\000\004\u0110\211\001\002\000\156" +
    "\042\uff94\046\uff94\051\uff94\054\uff94\063\uff94\066\uff94\070" +
    "\uff94\102\uff94\103\uff94\105\uff94\127\uff94\134\uff94\135\uff94" +
    "\151\uff94\154\uff94\165\uff94\170\uff94\215\uff94\220\uff94\237" +
    "\uff94\244\uff94\264\uff94\267\uff94\304\uff94\325\uff94\326\uff94" +
    "\327\uff94\330\uff94\331\uff94\332\uff94\u0106\uff94\u0107\uff94\u0108" +
    "\uff94\u0109\uff94\u010b\uff94\u010c\uff94\u010e\uff94\u0110\uff94\u0111\uff94" +
    "\u011a\uff94\u011b\uff94\u011c\uff94\u011d\uff94\u011e\uff94\u011f\uff94\u0120" +
    "\uff94\u0121\uff94\u0122\uff94\u0123\uff94\u0124\uff94\u0127\uff94\u0128\uff94" +
    "\u0129\uff94\u012b\uff94\001\002\000\034\220\171\326\153\327" +
    "\164\330\172\331\170\332\165\u010e\047\u0110\167\u0124\151" +
    "\u0127\155\u0128\156\u0129\046\u012b\166\001\002\000\004\u0110" +
    "\205\001\002\000\156\042\uff93\046\uff93\051\uff93\054\uff93" +
    "\063\uff93\066\uff93\070\uff93\102\uff93\103\uff93\105\uff93\127" +
    "\uff93\134\uff93\135\uff93\151\uff93\154\uff93\165\uff93\170\uff93" +
    "\215\uff93\220\uff93\237\uff93\244\uff93\264\uff93\267\uff93\304" +
    "\uff93\325\uff93\326\uff93\327\uff93\330\uff93\331\uff93\332\uff93" +
    "\u0106\uff93\u0107\uff93\u0108\uff93\u0109\uff93\u010b\uff93\u010c\uff93\u010e" +
    "\uff93\u0110\uff93\u0111\uff93\u011a\uff93\u011b\uff93\u011c\uff93\u011d\uff93" +
    "\u011e\uff93\u011f\uff93\u0120\uff93\u0121\uff93\u0122\uff93\u0123\uff93\u0124" +
    "\uff93\u0127\uff93\u0128\uff93\u0129\uff93\u012b\uff93\001\002\000\004" +
    "\u0110\173\001\002\000\014\u0108\177\u010e\047\u0128\175\u0129" +
    "\046\u012b\200\001\002\000\156\042\uff8e\046\uff8e\051\uff8e" +
    "\054\uff8e\063\uff8e\066\uff8e\070\uff8e\102\uff8e\103\uff8e\105" +
    "\uff8e\127\uff8e\134\uff8e\135\uff8e\151\uff8e\154\uff8e\165\uff8e" +
    "\170\uff8e\215\uff8e\220\uff8e\237\uff8e\244\uff8e\264\uff8e\267" +
    "\uff8e\304\uff8e\325\uff8e\326\uff8e\327\uff8e\330\uff8e\331\uff8e" +
    "\332\uff8e\u0106\uff8e\u0107\uff8e\u0108\uff8e\u0109\uff8e\u010b\uff8e\u010c" +
    "\uff8e\u010e\uff8e\u0110\uff8e\u0111\uff8e\u011a\uff8e\u011b\uff8e\u011c\uff8e" +
    "\u011d\uff8e\u011e\uff8e\u011f\uff8e\u0120\uff8e\u0121\uff8e\u0122\uff8e\u0123" +
    "\uff8e\u0124\uff8e\u0127\uff8e\u0128\uff8e\u0129\uff8e\u012b\uff8e\001\002" +
    "\000\004\u0111\204\001\002\000\004\u0111\203\001\002\000" +
    "\004\u0111\202\001\002\000\004\u0111\201\001\002\000\156" +
    "\042\uff8b\046\uff8b\051\uff8b\054\uff8b\063\uff8b\066\uff8b\070" +
    "\uff8b\102\uff8b\103\uff8b\105\uff8b\127\uff8b\134\uff8b\135\uff8b" +
    "\151\uff8b\154\uff8b\165\uff8b\170\uff8b\215\uff8b\220\uff8b\237" +
    "\uff8b\244\uff8b\264\uff8b\267\uff8b\304\uff8b\325\uff8b\326\uff8b" +
    "\327\uff8b\330\uff8b\331\uff8b\332\uff8b\u0106\uff8b\u0107\uff8b\u0108" +
    "\uff8b\u0109\uff8b\u010b\uff8b\u010c\uff8b\u010e\uff8b\u0110\uff8b\u0111\uff8b" +
    "\u011a\uff8b\u011b\uff8b\u011c\uff8b\u011d\uff8b\u011e\uff8b\u011f\uff8b\u0120" +
    "\uff8b\u0121\uff8b\u0122\uff8b\u0123\uff8b\u0124\uff8b\u0127\uff8b\u0128\uff8b" +
    "\u0129\uff8b\u012b\uff8b\001\002\000\156\042\uff8a\046\uff8a\051" +
    "\uff8a\054\uff8a\063\uff8a\066\uff8a\070\uff8a\102\uff8a\103\uff8a" +
    "\105\uff8a\127\uff8a\134\uff8a\135\uff8a\151\uff8a\154\uff8a\165" +
    "\uff8a\170\uff8a\215\uff8a\220\uff8a\237\uff8a\244\uff8a\264\uff8a" +
    "\267\uff8a\304\uff8a\325\uff8a\326\uff8a\327\uff8a\330\uff8a\331" +
    "\uff8a\332\uff8a\u0106\uff8a\u0107\uff8a\u0108\uff8a\u0109\uff8a\u010b\uff8a" +
    "\u010c\uff8a\u010e\uff8a\u0110\uff8a\u0111\uff8a\u011a\uff8a\u011b\uff8a\u011c" +
    "\uff8a\u011d\uff8a\u011e\uff8a\u011f\uff8a\u0120\uff8a\u0121\uff8a\u0122\uff8a" +
    "\u0123\uff8a\u0124\uff8a\u0127\uff8a\u0128\uff8a\u0129\uff8a\u012b\uff8a\001" +
    "\002\000\156\042\uff8d\046\uff8d\051\uff8d\054\uff8d\063\uff8d" +
    "\066\uff8d\070\uff8d\102\uff8d\103\uff8d\105\uff8d\127\uff8d\134" +
    "\uff8d\135\uff8d\151\uff8d\154\uff8d\165\uff8d\170\uff8d\215\uff8d" +
    "\220\uff8d\237\uff8d\244\uff8d\264\uff8d\267\uff8d\304\uff8d\325" +
    "\uff8d\326\uff8d\327\uff8d\330\uff8d\331\uff8d\332\uff8d\u0106\uff8d" +
    "\u0107\uff8d\u0108\uff8d\u0109\uff8d\u010b\uff8d\u010c\uff8d\u010e\uff8d\u0110" +
    "\uff8d\u0111\uff8d\u011a\uff8d\u011b\uff8d\u011c\uff8d\u011d\uff8d\u011e\uff8d" +
    "\u011f\uff8d\u0120\uff8d\u0121\uff8d\u0122\uff8d\u0123\uff8d\u0124\uff8d\u0127" +
    "\uff8d\u0128\uff8d\u0129\uff8d\u012b\uff8d\001\002\000\156\042\uff8c" +
    "\046\uff8c\051\uff8c\054\uff8c\063\uff8c\066\uff8c\070\uff8c\102" +
    "\uff8c\103\uff8c\105\uff8c\127\uff8c\134\uff8c\135\uff8c\151\uff8c" +
    "\154\uff8c\165\uff8c\170\uff8c\215\uff8c\220\uff8c\237\uff8c\244" +
    "\uff8c\264\uff8c\267\uff8c\304\uff8c\325\uff8c\326\uff8c\327\uff8c" +
    "\330\uff8c\331\uff8c\332\uff8c\u0106\uff8c\u0107\uff8c\u0108\uff8c\u0109" +
    "\uff8c\u010b\uff8c\u010c\uff8c\u010e\uff8c\u0110\uff8c\u0111\uff8c\u011a\uff8c" +
    "\u011b\uff8c\u011c\uff8c\u011d\uff8c\u011e\uff8c\u011f\uff8c\u0120\uff8c\u0121" +
    "\uff8c\u0122\uff8c\u0123\uff8c\u0124\uff8c\u0127\uff8c\u0128\uff8c\u0129\uff8c" +
    "\u012b\uff8c\001\002\000\014\u0108\177\u010e\047\u0128\175\u0129" +
    "\046\u012b\200\001\002\000\156\042\uff8f\046\uff8f\051\uff8f" +
    "\054\uff8f\063\uff8f\066\uff8f\070\uff8f\102\uff8f\103\uff8f\105" +
    "\uff8f\127\uff8f\134\uff8f\135\uff8f\151\uff8f\154\uff8f\165\uff8f" +
    "\170\uff8f\215\uff8f\220\uff8f\237\uff8f\244\uff8f\264\uff8f\267" +
    "\uff8f\304\uff8f\325\uff8f\326\uff8f\327\uff8f\330\uff8f\331\uff8f" +
    "\332\uff8f\u0106\uff8f\u0107\uff8f\u0108\uff8f\u0109\uff8f\u010b\uff8f\u010c" +
    "\uff8f\u010e\uff8f\u0110\uff8f\u0111\uff8f\u011a\uff8f\u011b\uff8f\u011c\uff8f" +
    "\u011d\uff8f\u011e\uff8f\u011f\uff8f\u0120\uff8f\u0121\uff8f\u0122\uff8f\u0123" +
    "\uff8f\u0124\uff8f\u0127\uff8f\u0128\uff8f\u0129\uff8f\u012b\uff8f\001\002" +
    "\000\004\u0111\210\001\002\000\156\042\uff9a\046\uff9a\051" +
    "\uff9a\054\uff9a\063\uff9a\066\uff9a\070\uff9a\102\uff9a\103\uff9a" +
    "\105\uff9a\127\uff9a\134\uff9a\135\uff9a\151\uff9a\154\uff9a\165" +
    "\uff9a\170\uff9a\215\uff9a\220\uff9a\237\uff9a\244\uff9a\264\uff9a" +
    "\267\uff9a\304\uff9a\325\uff9a\326\uff9a\327\uff9a\330\uff9a\331" +
    "\uff9a\332\uff9a\u0106\uff9a\u0107\uff9a\u0108\uff9a\u0109\uff9a\u010b\uff9a" +
    "\u010c\uff9a\u010e\uff9a\u0110\uff9a\u0111\uff9a\u011a\uff9a\u011b\uff9a\u011c" +
    "\uff9a\u011d\uff9a\u011e\uff9a\u011f\uff9a\u0120\uff9a\u0121\uff9a\u0122\uff9a" +
    "\u0123\uff9a\u0124\uff9a\u0127\uff9a\u0128\uff9a\u0129\uff9a\u012b\uff9a\001" +
    "\002\000\014\u0108\177\u010e\047\u0128\175\u0129\046\u012b\200" +
    "\001\002\000\156\042\uff90\046\uff90\051\uff90\054\uff90\063" +
    "\uff90\066\uff90\070\uff90\102\uff90\103\uff90\105\uff90\127\uff90" +
    "\134\uff90\135\uff90\151\uff90\154\uff90\165\uff90\170\uff90\215" +
    "\uff90\220\uff90\237\uff90\244\uff90\264\uff90\267\uff90\304\uff90" +
    "\325\uff90\326\uff90\327\uff90\330\uff90\331\uff90\332\uff90\u0106" +
    "\uff90\u0107\uff90\u0108\uff90\u0109\uff90\u010b\uff90\u010c\uff90\u010e\uff90" +
    "\u0110\uff90\u0111\uff90\u011a\uff90\u011b\uff90\u011c\uff90\u011d\uff90\u011e" +
    "\uff90\u011f\uff90\u0120\uff90\u0121\uff90\u0122\uff90\u0123\uff90\u0124\uff90" +
    "\u0127\uff90\u0128\uff90\u0129\uff90\u012b\uff90\001\002\000\014\u0108" +
    "\177\u010e\047\u0128\175\u0129\046\u012b\200\001\002\000\156" +
    "\042\uff91\046\uff91\051\uff91\054\uff91\063\uff91\066\uff91\070" +
    "\uff91\102\uff91\103\uff91\105\uff91\127\uff91\134\uff91\135\uff91" +
    "\151\uff91\154\uff91\165\uff91\170\uff91\215\uff91\220\uff91\237" +
    "\uff91\244\uff91\264\uff91\267\uff91\304\uff91\325\uff91\326\uff91" +
    "\327\uff91\330\uff91\331\uff91\332\uff91\u0106\uff91\u0107\uff91\u0108" +
    "\uff91\u0109\uff91\u010b\uff91\u010c\uff91\u010e\uff91\u0110\uff91\u0111\uff91" +
    "\u011a\uff91\u011b\uff91\u011c\uff91\u011d\uff91\u011e\uff91\u011f\uff91\u0120" +
    "\uff91\u0121\uff91\u0122\uff91\u0123\uff91\u0124\uff91\u0127\uff91\u0128\uff91" +
    "\u0129\uff91\u012b\uff91\001\002\000\146\042\uffa2\046\uffa2\051" +
    "\uffa2\054\uffa2\063\uffa2\066\uffa2\070\uffa2\102\uffa2\103\uffa2" +
    "\105\uffa2\127\uffa2\134\uffa2\135\uffa2\151\uffa2\154\uffa2\165" +
    "\uffa2\170\uffa2\215\uffa2\220\uffa2\237\uffa2\244\uffa2\264\uffa2" +
    "\267\uffa2\304\uffa2\325\uffa2\326\uffa2\327\uffa2\330\uffa2\331" +
    "\uffa2\332\uffa2\u010b\uffa2\u010c\uffa2\u010e\uffa2\u0110\uffa2\u0111\uffa2" +
    "\u011a\uffa2\u011b\uffa2\u011c\uffa2\u011d\uffa2\u011e\uffa2\u011f\uffa2\u0120" +
    "\uffa2\u0121\uffa2\u0122\uffa2\u0123\uffa2\u0124\uffa2\u0127\uffa2\u0128\uffa2" +
    "\u0129\uffa2\u012b\uffa2\001\002\000\034\220\171\326\153\327" +
    "\164\330\172\331\170\332\165\u010e\047\u0110\167\u0124\151" +
    "\u0127\155\u0128\156\u0129\046\u012b\166\001\002\000\034\220" +
    "\171\326\153\327\164\330\172\331\170\332\165\u010e\047" +
    "\u0110\167\u0124\151\u0127\155\u0128\156\u0129\046\u012b\166\001" +
    "\002\000\152\042\uff9f\046\uff9f\051\uff9f\054\uff9f\063\uff9f" +
    "\066\uff9f\070\uff9f\102\uff9f\103\uff9f\105\uff9f\127\uff9f\134" +
    "\uff9f\135\uff9f\151\uff9f\154\uff9f\165\uff9f\170\uff9f\215\uff9f" +
    "\220\uff9f\237\uff9f\244\uff9f\264\uff9f\267\uff9f\304\uff9f\325" +
    "\uff9f\326\uff9f\327\uff9f\330\uff9f\331\uff9f\332\uff9f\u0106\217" +
    "\u0107\216\u010b\uff9f\u010c\uff9f\u010e\uff9f\u0110\uff9f\u0111\uff9f\u011a" +
    "\uff9f\u011b\uff9f\u011c\uff9f\u011d\uff9f\u011e\uff9f\u011f\uff9f\u0120\uff9f" +
    "\u0121\uff9f\u0122\uff9f\u0123\uff9f\u0124\uff9f\u0127\uff9f\u0128\uff9f\u0129" +
    "\uff9f\u012b\uff9f\001\002\000\146\042\uffa1\046\uffa1\051\uffa1" +
    "\054\uffa1\063\uffa1\066\uffa1\070\uffa1\102\uffa1\103\uffa1\105" +
    "\uffa1\127\uffa1\134\uffa1\135\uffa1\151\uffa1\154\uffa1\165\uffa1" +
    "\170\uffa1\215\uffa1\220\uffa1\237\uffa1\244\uffa1\264\uffa1\267" +
    "\uffa1\304\uffa1\325\uffa1\326\uffa1\327\uffa1\330\uffa1\331\uffa1" +
    "\332\uffa1\u010b\uffa1\u010c\uffa1\u010e\uffa1\u0110\uffa1\u0111\uffa1\u011a" +
    "\uffa1\u011b\uffa1\u011c\uffa1\u011d\uffa1\u011e\uffa1\u011f\uffa1\u0120\uffa1" +
    "\u0121\uffa1\u0122\uffa1\u0123\uffa1\u0124\uffa1\u0127\uffa1\u0128\uffa1\u0129" +
    "\uffa1\u012b\uffa1\001\002\000\152\042\uff9f\046\uff9f\051\uff9f" +
    "\054\uff9f\063\uff9f\066\uff9f\070\uff9f\102\uff9f\103\uff9f\105" +
    "\uff9f\127\uff9f\134\uff9f\135\uff9f\151\uff9f\154\uff9f\165\uff9f" +
    "\170\uff9f\215\uff9f\220\uff9f\237\uff9f\244\uff9f\264\uff9f\267" +
    "\uff9f\304\uff9f\325\uff9f\326\uff9f\327\uff9f\330\uff9f\331\uff9f" +
    "\332\uff9f\u0106\217\u0107\216\u010b\uff9f\u010c\uff9f\u010e\uff9f\u0110" +
    "\uff9f\u0111\uff9f\u011a\uff9f\u011b\uff9f\u011c\uff9f\u011d\uff9f\u011e\uff9f" +
    "\u011f\uff9f\u0120\uff9f\u0121\uff9f\u0122\uff9f\u0123\uff9f\u0124\uff9f\u0127" +
    "\uff9f\u0128\uff9f\u0129\uff9f\u012b\uff9f\001\002\000\146\042\uffa0" +
    "\046\uffa0\051\uffa0\054\uffa0\063\uffa0\066\uffa0\070\uffa0\102" +
    "\uffa0\103\uffa0\105\uffa0\127\uffa0\134\uffa0\135\uffa0\151\uffa0" +
    "\154\uffa0\165\uffa0\170\uffa0\215\uffa0\220\uffa0\237\uffa0\244" +
    "\uffa0\264\uffa0\267\uffa0\304\uffa0\325\uffa0\326\uffa0\327\uffa0" +
    "\330\uffa0\331\uffa0\332\uffa0\u010b\uffa0\u010c\uffa0\u010e\uffa0\u0110" +
    "\uffa0\u0111\uffa0\u011a\uffa0\u011b\uffa0\u011c\uffa0\u011d\uffa0\u011e\uffa0" +
    "\u011f\uffa0\u0120\uffa0\u0121\uffa0\u0122\uffa0\u0123\uffa0\u0124\uffa0\u0127" +
    "\uffa0\u0128\uffa0\u0129\uffa0\u012b\uffa0\001\002\000\044\042\uff81" +
    "\046\uff81\066\uff81\102\uff81\103\uff81\105\uff81\135\uff81\154" +
    "\uff81\165\uff81\237\uff81\264\uff81\267\uff81\304\uff81\325\uff81" +
    "\u010b\uff81\u010c\uff81\u0111\uff81\001\002\000\152\042\uff9e\046" +
    "\uff9e\051\uff9e\054\uff9e\063\uff9e\066\uff9e\070\uff9e\102\uff9e" +
    "\103\uff9e\105\uff9e\127\uff9e\134\uff9e\135\uff9e\151\uff9e\154" +
    "\uff9e\165\uff9e\170\uff9e\215\uff9e\220\uff9e\237\uff9e\244\uff9e" +
    "\264\uff9e\267\uff9e\304\uff9e\325\uff9e\326\uff9e\327\uff9e\330" +
    "\uff9e\331\uff9e\332\uff9e\u0106\uff9e\u0107\uff9e\u010b\uff9e\u010c\uff9e" +
    "\u010e\uff9e\u0110\uff9e\u0111\uff9e\u011a\uff9e\u011b\uff9e\u011c\uff9e\u011d" +
    "\uff9e\u011e\uff9e\u011f\uff9e\u0120\uff9e\u0121\uff9e\u0122\uff9e\u0123\uff9e" +
    "\u0124\uff9e\u0127\uff9e\u0128\uff9e\u0129\uff9e\u012b\uff9e\001\002\000" +
    "\034\220\171\326\153\327\164\330\172\331\170\332\165" +
    "\u010e\047\u0110\167\u0124\151\u0127\155\u0128\156\u0129\046\u012b" +
    "\166\001\002\000\034\220\171\326\153\327\164\330\172" +
    "\331\170\332\165\u010e\047\u0110\167\u0124\151\u0127\155\u0128" +
    "\156\u0129\046\u012b\166\001\002\000\156\042\uff9b\046\uff9b" +
    "\051\uff9b\054\uff9b\063\uff9b\066\uff9b\070\uff9b\102\uff9b\103" +
    "\uff9b\105\uff9b\127\uff9b\134\uff9b\135\uff9b\151\uff9b\154\uff9b" +
    "\165\uff9b\170\uff9b\215\uff9b\220\uff9b\237\uff9b\244\uff9b\264" +
    "\uff9b\267\uff9b\304\uff9b\325\uff9b\326\uff9b\327\uff9b\330\uff9b" +
    "\331\uff9b\332\uff9b\u0106\uff9b\u0107\uff9b\u0108\226\u0109\227\u010b" +
    "\uff9b\u010c\uff9b\u010e\uff9b\u0110\uff9b\u0111\uff9b\u011a\uff9b\u011b\uff9b" +
    "\u011c\uff9b\u011d\uff9b\u011e\uff9b\u011f\uff9b\u0120\uff9b\u0121\uff9b\u0122" +
    "\uff9b\u0123\uff9b\u0124\uff9b\u0127\uff9b\u0128\uff9b\u0129\uff9b\u012b\uff9b" +
    "\001\002\000\152\042\uff9c\046\uff9c\051\uff9c\054\uff9c\063" +
    "\uff9c\066\uff9c\070\uff9c\102\uff9c\103\uff9c\105\uff9c\127\uff9c" +
    "\134\uff9c\135\uff9c\151\uff9c\154\uff9c\165\uff9c\170\uff9c\215" +
    "\uff9c\220\uff9c\237\uff9c\244\uff9c\264\uff9c\267\uff9c\304\uff9c" +
    "\325\uff9c\326\uff9c\327\uff9c\330\uff9c\331\uff9c\332\uff9c\u0106" +
    "\uff9c\u0107\uff9c\u010b\uff9c\u010c\uff9c\u010e\uff9c\u0110\uff9c\u0111\uff9c" +
    "\u011a\uff9c\u011b\uff9c\u011c\uff9c\u011d\uff9c\u011e\uff9c\u011f\uff9c\u0120" +
    "\uff9c\u0121\uff9c\u0122\uff9c\u0123\uff9c\u0124\uff9c\u0127\uff9c\u0128\uff9c" +
    "\u0129\uff9c\u012b\uff9c\001\002\000\156\042\uff9b\046\uff9b\051" +
    "\uff9b\054\uff9b\063\uff9b\066\uff9b\070\uff9b\102\uff9b\103\uff9b" +
    "\105\uff9b\127\uff9b\134\uff9b\135\uff9b\151\uff9b\154\uff9b\165" +
    "\uff9b\170\uff9b\215\uff9b\220\uff9b\237\uff9b\244\uff9b\264\uff9b" +
    "\267\uff9b\304\uff9b\325\uff9b\326\uff9b\327\uff9b\330\uff9b\331" +
    "\uff9b\332\uff9b\u0106\uff9b\u0107\uff9b\u0108\226\u0109\227\u010b\uff9b" +
    "\u010c\uff9b\u010e\uff9b\u0110\uff9b\u0111\uff9b\u011a\uff9b\u011b\uff9b\u011c" +
    "\uff9b\u011d\uff9b\u011e\uff9b\u011f\uff9b\u0120\uff9b\u0121\uff9b\u0122\uff9b" +
    "\u0123\uff9b\u0124\uff9b\u0127\uff9b\u0128\uff9b\u0129\uff9b\u012b\uff9b\001" +
    "\002\000\152\042\uff9d\046\uff9d\051\uff9d\054\uff9d\063\uff9d" +
    "\066\uff9d\070\uff9d\102\uff9d\103\uff9d\105\uff9d\127\uff9d\134" +
    "\uff9d\135\uff9d\151\uff9d\154\uff9d\165\uff9d\170\uff9d\215\uff9d" +
    "\220\uff9d\237\uff9d\244\uff9d\264\uff9d\267\uff9d\304\uff9d\325" +
    "\uff9d\326\uff9d\327\uff9d\330\uff9d\331\uff9d\332\uff9d\u0106\uff9d" +
    "\u0107\uff9d\u010b\uff9d\u010c\uff9d\u010e\uff9d\u0110\uff9d\u0111\uff9d\u011a" +
    "\uff9d\u011b\uff9d\u011c\uff9d\u011d\uff9d\u011e\uff9d\u011f\uff9d\u0120\uff9d" +
    "\u0121\uff9d\u0122\uff9d\u0123\uff9d\u0124\uff9d\u0127\uff9d\u0128\uff9d\u0129" +
    "\uff9d\u012b\uff9d\001\002\000\156\042\uffe2\046\uffe2\051\uffe2" +
    "\054\uffe2\063\uffe2\066\uffe2\070\uffe2\102\uffe2\103\uffe2\105" +
    "\uffe2\127\uffe2\134\uffe2\135\uffe2\151\uffe2\154\uffe2\165\uffe2" +
    "\170\uffe2\215\uffe2\220\uffe2\237\uffe2\244\uffe2\264\uffe2\267" +
    "\uffe2\304\uffe2\325\uffe2\326\uffe2\327\uffe2\330\uffe2\331\uffe2" +
    "\332\uffe2\u0106\uffe2\u0107\uffe2\u0108\uffe2\u0109\uffe2\u010b\uffe2\u010c" +
    "\uffe2\u010e\uffe2\u0110\uffe2\u0111\uffe2\u011a\uffe2\u011b\uffe2\u011c\uffe2" +
    "\u011d\uffe2\u011e\uffe2\u011f\uffe2\u0120\uffe2\u0121\uffe2\u0122\uffe2\u0123" +
    "\uffe2\u0124\uffe2\u0127\uffe2\u0128\uffe2\u0129\uffe2\u012b\uffe2\001\002" +
    "\000\006\u010e\047\u0129\046\001\002\000\156\042\uffe1\046" +
    "\uffe1\051\uffe1\054\uffe1\063\uffe1\066\uffe1\070\uffe1\102\uffe1" +
    "\103\uffe1\105\uffe1\127\uffe1\134\uffe1\135\uffe1\151\uffe1\154" +
    "\uffe1\165\uffe1\170\uffe1\215\uffe1\220\uffe1\237\uffe1\244\uffe1" +
    "\264\uffe1\267\uffe1\304\uffe1\325\uffe1\326\uffe1\327\uffe1\330" +
    "\uffe1\331\uffe1\332\uffe1\u0106\uffe1\u0107\uffe1\u0108\uffe1\u0109\uffe1" +
    "\u010b\uffe1\u010c\uffe1\u010e\uffe1\u0110\uffe1\u0111\uffe1\u011a\uffe1\u011b" +
    "\uffe1\u011c\uffe1\u011d\uffe1\u011e\uffe1\u011f\uffe1\u0120\uffe1\u0121\uffe1" +
    "\u0122\uffe1\u0123\uffe1\u0124\uffe1\u0127\uffe1\u0128\uffe1\u0129\uffe1\u012b" +
    "\uffe1\001\002\000\014\u0108\177\u010e\047\u0128\175\u0129\046" +
    "\u012b\200\001\002\000\156\042\uff92\046\uff92\051\uff92\054" +
    "\uff92\063\uff92\066\uff92\070\uff92\102\uff92\103\uff92\105\uff92" +
    "\127\uff92\134\uff92\135\uff92\151\uff92\154\uff92\165\uff92\170" +
    "\uff92\215\uff92\220\uff92\237\uff92\244\uff92\264\uff92\267\uff92" +
    "\304\uff92\325\uff92\326\uff92\327\uff92\330\uff92\331\uff92\332" +
    "\uff92\u0106\uff92\u0107\uff92\u0108\uff92\u0109\uff92\u010b\uff92\u010c\uff92" +
    "\u010e\uff92\u0110\uff92\u0111\uff92\u011a\uff92\u011b\uff92\u011c\uff92\u011d" +
    "\uff92\u011e\uff92\u011f\uff92\u0120\uff92\u0121\uff92\u0122\uff92\u0123\uff92" +
    "\u0124\uff92\u0127\uff92\u0128\uff92\u0129\uff92\u012b\uff92\001\002\000" +
    "\010\070\274\127\273\170\272\001\002\000\034\220\171" +
    "\326\153\327\164\330\172\331\170\332\165\u010e\047\u0110" +
    "\167\u0124\151\u0127\155\u0128\156\u0129\046\u012b\166\001\002" +
    "\000\034\220\171\326\153\327\164\330\172\331\170\332" +
    "\165\u010e\047\u0110\167\u0124\151\u0127\155\u0128\156\u0129\046" +
    "\u012b\166\001\002\000\034\220\171\326\153\327\164\330" +
    "\172\331\170\332\165\u010e\047\u0110\167\u0124\151\u0127\155" +
    "\u0128\156\u0129\046\u012b\166\001\002\000\034\220\171\326" +
    "\153\327\164\330\172\331\170\332\165\u010e\047\u0110\167" +
    "\u0124\151\u0127\155\u0128\156\u0129\046\u012b\166\001\002\000" +
    "\034\220\171\326\153\327\164\330\172\331\170\332\165" +
    "\u010e\047\u0110\167\u0124\151\u0127\155\u0128\156\u0129\046\u012b" +
    "\166\001\002\000\034\220\171\326\153\327\164\330\172" +
    "\331\170\332\165\u010e\047\u0110\167\u0124\151\u0127\155\u0128" +
    "\156\u0129\046\u012b\166\001\002\000\034\220\171\326\153" +
    "\327\164\330\172\331\170\332\165\u010e\047\u0110\167\u0124" +
    "\151\u0127\155\u0128\156\u0129\046\u012b\166\001\002\000\034" +
    "\220\171\326\153\327\164\330\172\331\170\332\165\u010e" +
    "\047\u0110\167\u0124\151\u0127\155\u0128\156\u0129\046\u012b\166" +
    "\001\002\000\034\220\171\326\153\327\164\330\172\331" +
    "\170\332\165\u010e\047\u0110\167\u0124\151\u0127\155\u0128\156" +
    "\u0129\046\u012b\166\001\002\000\044\042\uff7d\046\uff7d\066" +
    "\uff7d\102\uff7d\103\uff7d\105\uff7d\135\uff7d\154\uff7d\165\uff7d" +
    "\237\uff7d\264\uff7d\267\uff7d\304\uff7d\325\uff7d\u010b\uff7d\u010c" +
    "\uff7d\u0111\uff7d\001\002\000\034\220\171\326\153\327\164" +
    "\330\172\331\170\332\165\u010e\047\u0110\167\u0124\151\u0127" +
    "\155\u0128\156\u0129\046\u012b\166\001\002\000\006\215\137" +
    "\220\uff86\001\002\000\004\220\257\001\002\000\044\042" +
    "\uff72\046\uff72\066\uff72\102\uff72\103\uff72\105\uff72\135\uff72" +
    "\154\uff72\165\uff72\237\uff72\264\uff72\267\uff72\304\uff72\325" +
    "\uff72\u010b\uff72\u010c\uff72\u0111\uff72\001\002\000\044\042\uff74" +
    "\046\uff74\066\uff74\102\uff74\103\uff74\105\uff74\135\uff74\154" +
    "\uff74\165\uff74\237\uff74\264\uff74\267\uff74\304\uff74\325\uff74" +
    "\u010b\uff74\u010c\uff74\u0111\uff74\001\002\000\044\042\uff75\046" +
    "\uff75\066\uff75\102\uff75\103\uff75\105\uff75\135\uff75\154\uff75" +
    "\165\uff75\237\uff75\264\uff75\267\uff75\304\uff75\325\uff75\u010b" +
    "\uff75\u010c\uff75\u0111\uff75\001\002\000\044\042\uff73\046\uff73" +
    "\066\uff73\102\uff73\103\uff73\105\uff73\135\uff73\154\uff73\165" +
    "\uff73\237\uff73\264\uff73\267\uff73\304\uff73\325\uff73\u010b\uff73" +
    "\u010c\uff73\u0111\uff73\001\002\000\044\042\uff77\046\uff77\066" +
    "\uff77\102\uff77\103\uff77\105\uff77\135\uff77\154\uff77\165\uff77" +
    "\237\uff77\264\uff77\267\uff77\304\uff77\325\uff77\u010b\uff77\u010c" +
    "\uff77\u0111\uff77\001\002\000\044\042\uff7a\046\uff7a\066\uff7a" +
    "\102\uff7a\103\uff7a\105\uff7a\135\uff7a\154\uff7a\165\uff7a\237" +
    "\uff7a\264\uff7a\267\uff7a\304\uff7a\325\uff7a\u010b\uff7a\u010c\uff7a" +
    "\u0111\uff7a\001\002\000\044\042\uff79\046\uff79\066\uff79\102" +
    "\uff79\103\uff79\105\uff79\135\uff79\154\uff79\165\uff79\237\uff79" +
    "\264\uff79\267\uff79\304\uff79\325\uff79\u010b\uff79\u010c\uff79\u0111" +
    "\uff79\001\002\000\044\042\uff78\046\uff78\066\uff78\102\uff78" +
    "\103\uff78\105\uff78\135\uff78\154\uff78\165\uff78\237\uff78\264" +
    "\uff78\267\uff78\304\uff78\325\uff78\u010b\uff78\u010c\uff78\u0111\uff78" +
    "\001\002\000\044\042\uff76\046\uff76\066\uff76\102\uff76\103" +
    "\uff76\105\uff76\135\uff76\154\uff76\165\uff76\237\uff76\264\uff76" +
    "\267\uff76\304\uff76\325\uff76\u010b\uff76\u010c\uff76\u0111\uff76\001" +
    "\002\000\044\042\uff7b\046\uff7b\066\uff7b\102\uff7b\103\uff7b" +
    "\105\uff7b\135\uff7b\154\uff7b\165\uff7b\237\uff7b\264\uff7b\267" +
    "\uff7b\304\uff7b\325\uff7b\u010b\uff7b\u010c\uff7b\u0111\uff7b\001\002" +
    "\000\044\042\uff7c\046\uff7c\066\uff7c\102\uff7c\103\uff7c\105" +
    "\uff7c\135\uff7c\154\uff7c\165\uff7c\237\uff7c\264\uff7c\267\uff7c" +
    "\304\uff7c\325\uff7c\u010b\uff7c\u010c\uff7c\u0111\uff7c\001\002\000" +
    "\036\215\137\220\uff86\326\uff86\327\uff86\330\uff86\331\uff86" +
    "\332\uff86\u010e\uff86\u0110\141\u0124\uff86\u0127\uff86\u0128\uff86\u0129" +
    "\uff86\u012b\uff86\001\002\000\004\u0110\301\001\002\000\036" +
    "\215\137\220\uff86\326\uff86\327\uff86\330\uff86\331\uff86\332" +
    "\uff86\u010e\uff86\u0110\141\u0124\uff86\u0127\uff86\u0128\uff86\u0129\uff86" +
    "\u012b\uff86\001\002\000\044\042\uff71\046\uff71\066\uff71\102" +
    "\uff71\103\uff71\105\uff71\135\uff71\154\uff71\165\uff71\237\uff71" +
    "\264\uff71\267\uff71\304\uff71\325\uff71\u010b\uff71\u010c\uff71\u0111" +
    "\uff71\001\002\000\004\042\277\001\002\000\036\215\137" +
    "\220\uff86\326\uff86\327\uff86\330\uff86\331\uff86\332\uff86\u010e" +
    "\uff86\u0110\141\u0124\uff86\u0127\uff86\u0128\uff86\u0129\uff86\u012b\uff86" +
    "\001\002\000\044\042\uff6f\046\uff6f\066\uff6f\102\uff6f\103" +
    "\uff6f\105\uff6f\135\uff6f\154\uff6f\165\uff6f\237\uff6f\264\uff6f" +
    "\267\uff6f\304\uff6f\325\uff6f\u010b\uff6f\u010c\uff6f\u0111\uff6f\001" +
    "\002\000\034\220\171\326\153\327\164\330\172\331\170" +
    "\332\165\u010e\047\u0110\167\u0124\151\u0127\155\u0128\156\u0129" +
    "\046\u012b\166\001\002\000\006\u010c\303\u0111\uff88\001\002" +
    "\000\034\220\171\326\153\327\164\330\172\331\170\332" +
    "\165\u010e\047\u0110\167\u0124\151\u0127\155\u0128\156\u0129\046" +
    "\u012b\166\001\002\000\004\u0111\305\001\002\000\044\042" +
    "\uff70\046\uff70\066\uff70\102\uff70\103\uff70\105\uff70\135\uff70" +
    "\154\uff70\165\uff70\237\uff70\264\uff70\267\uff70\304\uff70\325" +
    "\uff70\u010b\uff70\u010c\uff70\u0111\uff70\001\002\000\006\u010c\303" +
    "\u0111\uff88\001\002\000\004\u0111\uff89\001\002\000\044\042" +
    "\uff6e\046\uff6e\066\uff6e\102\uff6e\103\uff6e\105\uff6e\135\uff6e" +
    "\154\uff6e\165\uff6e\237\uff6e\264\uff6e\267\uff6e\304\uff6e\325" +
    "\uff6e\u010b\uff6e\u010c\uff6e\u0111\uff6e\001\002\000\036\220\171" +
    "\233\314\326\153\327\164\330\172\331\170\332\165\u010e" +
    "\047\u0110\167\u0124\151\u0127\155\u0128\156\u0129\046\u012b\166" +
    "\001\002\000\014\063\uff24\304\uff24\325\uff24\u010b\uff24\u010c" +
    "\uff24\001\002\000\014\063\uff22\304\uff22\325\uff22\u010b\uff22" +
    "\u010c\315\001\002\000\014\063\uff25\304\uff25\325\uff25\u010b" +
    "\uff25\u010c\uff25\001\002\000\006\u010e\047\u0129\046\001\002" +
    "\000\012\063\uff26\304\uff26\325\uff26\u010b\uff26\001\002\000" +
    "\012\063\uff23\304\uff23\325\uff23\u010b\uff23\001\002\000\172" +
    "\004\uffe5\037\uffe5\042\uffe5\046\uffe5\051\uffe5\054\uffe5\063" +
    "\uffe5\066\uffe5\070\uffe5\102\uffe5\103\uffe5\105\uffe5\127\uffe5" +
    "\134\uffe5\135\uffe5\151\uffe5\152\uffe5\154\uffe5\165\uffe5\170" +
    "\uffe5\215\uffe5\220\uffe5\233\uffe5\237\uffe5\244\uffe5\263\uffe5" +
    "\264\uffe5\265\uffe5\267\uffe5\304\uffe5\325\uffe5\326\uffe5\327" +
    "\uffe5\330\uffe5\331\uffe5\332\uffe5\u0106\uffe5\u0107\uffe5\u0108\uffe5" +
    "\u0109\uffe5\u010b\uffe5\u010c\uffe5\u010e\uffe5\u0110\uffe5\u0111\uffe5\u011a" +
    "\uffe5\u011b\uffe5\u011c\uffe5\u011d\uffe5\u011e\uffe5\u011f\uffe5\u0120\uffe5" +
    "\u0121\uffe5\u0122\uffe5\u0123\uffe5\u0124\uffe5\u0127\uffe5\u0128\uffe5\u0129" +
    "\uffe5\u012b\uffe5\001\002\000\006\u010e\047\u0129\046\001\002" +
    "\000\204\004\uffe6\037\uffe6\042\uffe6\046\uffe6\051\uffe6\054" +
    "\uffe6\063\uffe6\066\uffe6\070\uffe6\102\uffe6\103\uffe6\105\uffe6" +
    "\127\uffe6\134\uffe6\135\uffe6\151\uffe6\152\uffe6\154\uffe6\165" +
    "\uffe6\170\uffe6\215\uffe6\220\uffe6\233\uffe6\236\uffe6\237\uffe6" +
    "\244\uffe6\251\uffe6\263\uffe6\264\uffe6\265\uffe6\267\uffe6\304" +
    "\uffe6\312\uffe6\325\uffe6\326\uffe6\327\uffe6\330\uffe6\331\uffe6" +
    "\332\uffe6\u0106\uffe6\u0107\uffe6\u0108\uffe6\u0109\uffe6\u010b\uffe6\u010c" +
    "\uffe6\u010d\325\u010e\uffe6\u0110\uffe6\u0111\uffe6\u0117\uffe6\u011a\uffe6" +
    "\u011b\uffe6\u011c\uffe6\u011d\uffe6\u011e\uffe6\u011f\uffe6\u0120\uffe6\u0121" +
    "\uffe6\u0122\uffe6\u0123\uffe6\u0124\uffe6\u0127\uffe6\u0128\uffe6\u0129\uffe6" +
    "\u012b\uffe6\001\002\000\172\004\uffe4\037\uffe4\042\uffe4\046" +
    "\uffe4\051\uffe4\054\uffe4\063\uffe4\066\uffe4\070\uffe4\102\uffe4" +
    "\103\uffe4\105\uffe4\127\uffe4\134\uffe4\135\uffe4\151\uffe4\152" +
    "\uffe4\154\uffe4\165\uffe4\170\uffe4\215\uffe4\220\uffe4\233\uffe4" +
    "\237\uffe4\244\uffe4\263\uffe4\264\uffe4\265\uffe4\267\uffe4\304" +
    "\uffe4\325\uffe4\326\uffe4\327\uffe4\330\uffe4\331\uffe4\332\uffe4" +
    "\u0106\uffe4\u0107\uffe4\u0108\uffe4\u0109\uffe4\u010b\uffe4\u010c\uffe4\u010e" +
    "\uffe4\u0110\uffe4\u0111\uffe4\u011a\uffe4\u011b\uffe4\u011c\uffe4\u011d\uffe4" +
    "\u011e\uffe4\u011f\uffe4\u0120\uffe4\u0121\uffe4\u0122\uffe4\u0123\uffe4\u0124" +
    "\uffe4\u0127\uffe4\u0128\uffe4\u0129\uffe4\u012b\uffe4\001\002\000\202" +
    "\004\uffe8\037\uffe8\042\uffe8\046\uffe8\051\uffe8\054\uffe8\063" +
    "\uffe8\066\uffe8\070\uffe8\102\uffe8\103\uffe8\105\uffe8\127\uffe8" +
    "\134\uffe8\135\uffe8\151\uffe8\152\uffe8\154\uffe8\165\uffe8\170" +
    "\uffe8\215\uffe8\220\uffe8\233\uffe8\236\uffe8\237\uffe8\244\uffe8" +
    "\251\uffe8\263\uffe8\264\uffe8\265\uffe8\267\uffe8\304\uffe8\312" +
    "\uffe8\325\uffe8\326\uffe8\327\uffe8\330\uffe8\331\uffe8\332\uffe8" +
    "\u0106\uffe8\u0107\uffe8\u0108\uffe8\u0109\uffe8\u010b\uffe8\u010c\uffe8\u010e" +
    "\uffe8\u0110\uffe8\u0111\uffe8\u0117\uffe8\u011a\uffe8\u011b\uffe8\u011c\uffe8" +
    "\u011d\uffe8\u011e\uffe8\u011f\uffe8\u0120\uffe8\u0121\uffe8\u0122\uffe8\u0123" +
    "\uffe8\u0124\uffe8\u0127\uffe8\u0128\uffe8\u0129\uffe8\u012b\uffe8\001\002" +
    "\000\006\u010e\047\u0129\046\001\002\000\202\004\uffe7\037" +
    "\uffe7\042\uffe7\046\uffe7\051\uffe7\054\uffe7\063\uffe7\066\uffe7" +
    "\070\uffe7\102\uffe7\103\uffe7\105\uffe7\127\uffe7\134\uffe7\135" +
    "\uffe7\151\uffe7\152\uffe7\154\uffe7\165\uffe7\170\uffe7\215\uffe7" +
    "\220\uffe7\233\uffe7\236\uffe7\237\uffe7\244\uffe7\251\uffe7\263" +
    "\uffe7\264\uffe7\265\uffe7\267\uffe7\304\uffe7\312\uffe7\325\uffe7" +
    "\326\uffe7\327\uffe7\330\uffe7\331\uffe7\332\uffe7\u0106\uffe7\u0107" +
    "\uffe7\u0108\uffe7\u0109\uffe7\u010b\uffe7\u010c\uffe7\u010e\uffe7\u0110\uffe7" +
    "\u0111\uffe7\u0117\uffe7\u011a\uffe7\u011b\uffe7\u011c\uffe7\u011d\uffe7\u011e" +
    "\uffe7\u011f\uffe7\u0120\uffe7\u0121\uffe7\u0122\uffe7\u0123\uffe7\u0124\uffe7" +
    "\u0127\uffe7\u0128\uffe7\u0129\uffe7\u012b\uffe7\001\002\000\012\063" +
    "\331\250\uff2e\u010e\uff2e\u0129\uff2e\001\002\000\010\250\334" +
    "\u010e\047\u0129\046\001\002\000\010\250\uff2f\u010e\uff2f\u0129" +
    "\uff2f\001\002\000\006\325\uff30\u010b\uff30\001\002\000\004" +
    "\063\344\001\002\000\004\u0110\336\001\002\000\006\325" +
    "\uff2d\u010b\uff2d\001\002\000\006\u010e\047\u0129\046\001\002" +
    "\000\004\u010c\340\001\002\000\004\u0124\341\001\002\000" +
    "\004\u0111\342\001\002\000\006\325\uff28\u010b\uff28\001\002" +
    "\000\010\304\134\325\uff6a\u010b\uff6a\001\002\000\006\u010e" +
    "\047\u0129\046\001\002\000\012\304\uff29\325\uff29\u010b\uff29" +
    "\u010c\130\001\002\000\010\304\uff2b\325\uff2b\u010b\uff2b\001" +
    "\002\000\006\325\uff2c\u010b\uff2c\001\002\000\050\002\uffec" +
    "\003\uffec\037\uffec\065\uffec\072\uffec\106\uffec\122\uffec\133" +
    "\uffec\140\uffec\142\uffec\167\uffec\227\uffec\230\uffec\236\uffec" +
    "\251\uffec\263\uffec\274\uffec\325\uffec\u010b\uffec\001\002\000" +
    "\040\002\ufffe\003\034\037\030\065\023\106\021\122\006" +
    "\133\007\140\025\142\022\167\024\227\012\230\043\236" +
    "\040\251\041\263\031\001\002\000\050\002\uffeb\003\uffeb" +
    "\037\uffeb\065\uffeb\072\uffeb\106\uffeb\122\uffeb\133\uffeb\140" +
    "\uffeb\142\uffeb\167\uffeb\227\uffeb\230\uffeb\236\uffeb\251\uffeb" +
    "\263\uffeb\274\uffeb\325\uffeb\u010b\uffeb\001\002\000\004\002" +
    "\uffff\001\002\000\006\325\uffbb\u010b\uffbb\001\002\000\004" +
    "\124\367\001\002\000\004\124\367\001\002\000\004\124" +
    "\367\001\002\000\006\325\uffb8\u010b\uffb8\001\002\000\006" +
    "\325\uffbc\u010b\uffbc\001\002\000\006\325\uffba\u010b\uffba\001" +
    "\002\000\004\124\367\001\002\000\004\124\367\001\002" +
    "\000\006\325\uffb7\u010b\uffb7\001\002\000\006\325\uffb9\u010b" +
    "\uffb9\001\002\000\004\316\376\001\002\000\006\u010e\047" +
    "\u0129\046\001\002\000\010\325\uffb1\u010b\uffb1\u010c\373\001" +
    "\002\000\006\325\uffb3\u010b\uffb3\001\002\000\006\u010e\047" +
    "\u0129\046\001\002\000\010\325\uffb1\u010b\uffb1\u010c\373\001" +
    "\002\000\006\325\uffb2\u010b\uffb2\001\002\000\006\u010e\uffdf" +
    "\u0129\uffdf\001\002\000\006\u010e\047\u0129\046\001\002\000" +
    "\010\325\uffb4\u010b\uffb4\u010c\u0102\001\002\000\006\325\uffb6" +
    "\u010b\uffb6\001\002\000\006\u010e\047\u0129\046\001\002\000" +
    "\010\325\uffb4\u010b\uffb4\u010c\u0102\001\002\000\006\325\uffb5" +
    "\u010b\uffb5\001\002\000\006\u010e\047\u0129\046\001\002\000" +
    "\006\325\uffb0\u010b\uffb0\001\002\000\006\u010e\047\u0129\046" +
    "\001\002\000\004\237\u010e\001\002\000\010\325\uffa9\u010b" +
    "\uffa9\u010c\u010a\001\002\000\006\u010e\047\u0129\046\001\002" +
    "\000\006\325\uffac\u010b\uffac\001\002\000\010\325\uffa9\u010b" +
    "\uffa9\u010c\u010a\001\002\000\006\325\uffaa\u010b\uffaa\001\002" +
    "\000\006\u010e\047\u0129\046\001\002\000\010\325\uffab\u010b" +
    "\uffab\u010c\uffab\001\002\000\006\u010e\047\u0129\046\001\002" +
    "\000\010\325\uffad\u010b\uffad\u010c\u0112\001\002\000\006\u010e" +
    "\047\u0129\046\001\002\000\006\325\uffaf\u010b\uffaf\001\002" +
    "\000\010\325\uffad\u010b\uffad\u010c\u0112\001\002\000\006\325" +
    "\uffae\u010b\uffae\001\002\000\006\325\ufe8f\u010b\ufe8f\001\002" +
    "\000\006\325\ufe8d\u010b\ufe8d\001\002\000\010\006\u021e\071" +
    "\u0220\322\u021f\001\002\000\006\325\ufe8e\u010b\ufe8e\001\002" +
    "\000\010\175\u0216\u010e\047\u0129\046\001\002\000\006\325" +
    "\ufe93\u010b\ufe93\001\002\000\006\u010e\047\u0129\046\001\002" +
    "\000\006\325\ufe92\u010b\ufe92\001\002\000\006\u010e\047\u0129" +
    "\046\001\002\000\006\u010e\047\u0129\046\001\002\000\006" +
    "\325\ufe90\u010b\ufe90\001\002\000\006\325\ufe91\u010b\ufe91\001" +
    "\002\000\004\037\u0123\001\002\000\010\006\ufe59\071\ufe59" +
    "\322\ufe59\001\002\000\006\051\ufe84\u0110\u0127\001\002\000" +
    "\004\051\ufe85\001\002\000\004\051\u012a\001\002\000\006" +
    "\u010e\047\u0129\046\001\002\000\004\u0111\u0129\001\002\000" +
    "\020\051\uff45\233\uff45\237\uff45\265\uff45\304\uff45\325\uff45" +
    "\u010b\uff45\001\002\000\004\133\007\001\002\000\006\325" +
    "\ufe86\u010b\ufe86\001\002\000\010\004\u012f\037\u012e\263\u0132" +
    "\001\002\000\006\325\ufe82\u010b\ufe82\001\002\000\004\137" +
    "\u0202\001\002\000\022\052\ufeb4\115\ufeb4\132\u0145\150\u0146" +
    "\243\ufeb4\314\ufeb4\u010e\047\u0129\046\001\002\000\006\325" +
    "\ufe83\u010b\ufe83\001\002\000\006\325\ufe80\u010b\ufe80\001\002" +
    "\000\010\124\ufe71\137\u0133\150\u0134\001\002\000\004\124" +
    "\367\001\002\000\004\124\ufe72\001\002\000\004\124\367" +
    "\001\002\000\010\325\ufe73\u010b\ufe73\u010c\u0137\001\002\000" +
    "\014\124\ufe71\137\u0133\150\u0134\u010e\047\u0129\046\001\002" +
    "\000\006\325\ufe77\u010b\ufe77\001\002\000\010\325\ufe70\u010b" +
    "\ufe70\u010c\ufe70\001\002\000\010\325\ufe73\u010b\ufe73\u010c\u0137" +
    "\001\002\000\010\325\ufe6f\u010b\ufe6f\u010c\ufe6f\001\002\000" +
    "\006\325\ufe74\u010b\ufe74\001\002\000\006\u010e\047\u0129\046" +
    "\001\002\000\010\325\ufe76\u010b\ufe76\u010c\ufe76\001\002\000" +
    "\006\u010e\047\u0129\046\001\002\000\010\325\ufe75\u010b\ufe75" +
    "\u010c\ufe75\001\002\000\012\325\ufedc\u010b\ufedc\u010c\ufedc\u0111" +
    "\ufedc\001\002\000\012\325\ufedb\u010b\ufedb\u010c\ufedb\u0111\ufedb" +
    "\001\002\000\012\325\ufeda\u010b\ufeda\u010c\ufeda\u0111\ufeda\001" +
    "\002\000\010\325\ufed8\u010b\ufed8\u010c\u01fe\001\002\000\006" +
    "\u010e\047\u0129\046\001\002\000\006\u010e\047\u0129\046\001" +
    "\002\000\070\337\u0194\340\u0191\341\u01a2\342\u01a8\343\u01a1" +
    "\344\u0193\345\u018d\346\u01a5\347\u0198\350\u01a0\351\u01a7\352" +
    "\u0196\353\u0190\354\u0197\355\u018f\356\u01a4\357\u01a3\360\u0195" +
    "\361\u01a6\362\u019d\363\u019a\364\u01aa\365\u01a9\366\u018e\367" +
    "\u0192\370\u019f\u010e\u0199\001\002\000\012\052\u014a\115\u0149" +
    "\243\u014d\314\u014b\001\002\000\006\215\u0178\220\u0179\001" +
    "\002\000\004\157\u0160\001\002\000\004\157\u015d\001\002" +
    "\000\012\325\ufe9f\u010b\ufe9f\u010c\ufe9f\u0111\ufe9f\001\002\000" +
    "\010\126\u014f\212\u0150\u0110\ufeae\001\002\000\004\u0110\u0152" +
    "\001\002\000\032\052\ufeb0\056\ufeb0\115\ufeb0\132\ufeb0\150" +
    "\ufeb0\243\ufeb0\314\ufeb0\325\ufeb0\u010b\ufeb0\u010c\ufeb0\u0110\ufeb0" +
    "\u0111\ufeb0\001\002\000\032\052\ufeaf\056\ufeaf\115\ufeaf\132" +
    "\ufeaf\150\ufeaf\243\ufeaf\314\ufeaf\325\ufeaf\u010b\ufeaf\u010c\ufeaf" +
    "\u0110\ufeaf\u0111\ufeaf\001\002\000\012\325\ufe9d\u010b\ufe9d\u010c" +
    "\ufe9d\u0111\ufe9d\001\002\000\006\u010e\047\u0129\046\001\002" +
    "\000\012\054\u0156\244\u0155\u010c\uff5d\u0111\uff5d\001\002\000" +
    "\006\u010c\u0158\u0111\ufe95\001\002\000\046\046\uff5e\220\uff5e" +
    "\325\uff5e\326\uff5e\327\uff5e\330\uff5e\331\uff5e\332\uff5e\u010b" +
    "\uff5e\u010c\uff5e\u010e\uff5e\u0110\uff5e\u0111\uff5e\u0124\uff5e\u0127\uff5e" +
    "\u0128\uff5e\u0129\uff5e\u012b\uff5e\001\002\000\046\046\uff5f\220" +
    "\uff5f\325\uff5f\326\uff5f\327\uff5f\330\uff5f\331\uff5f\332\uff5f" +
    "\u010b\uff5f\u010c\uff5f\u010e\uff5f\u0110\uff5f\u0111\uff5f\u0124\uff5f\u0127" +
    "\uff5f\u0128\uff5f\u0129\uff5f\u012b\uff5f\001\002\000\004\u0111\u015c" +
    "\001\002\000\006\u010e\047\u0129\046\001\002\000\012\054" +
    "\u0156\244\u0155\u010c\uff5d\u0111\uff5d\001\002\000\006\u010c\u0158" +
    "\u0111\ufe95\001\002\000\004\u0111\ufe96\001\002\000\012\325" +
    "\ufe9a\u010b\ufe9a\u010c\ufe9a\u0111\ufe9a\001\002\000\010\126\u014f" +
    "\212\u0150\u0110\ufeae\001\002\000\004\u0110\u0152\001\002\000" +
    "\012\325\ufe9e\u010b\ufe9e\u010c\ufe9e\u0111\ufe9e\001\002\000\004" +
    "\u0110\u0162\001\002\000\004\056\u0169\001\002\000\006\u010e" +
    "\047\u0129\046\001\002\000\006\u010c\u0165\u0111\ufe97\001\002" +
    "\000\004\u0111\u0168\001\002\000\006\u010e\047\u0129\046\001" +
    "\002\000\006\u010c\u0165\u0111\ufe97\001\002\000\004\u0111\ufe98" +
    "\001\002\000\004\056\ufe99\001\002\000\006\u010e\047\u0129" +
    "\046\001\002\000\012\236\ufeaa\237\ufeaa\251\ufeaa\u0110\u016b" +
    "\001\002\000\006\u010e\047\u0129\046\001\002\000\010\236" +
    "\ufea8\237\u016d\251\ufea8\001\002\000\006\236\u016f\251\u0171" +
    "\001\002\000\006\236\u016f\251\u0171\001\002\000\006\107" +
    "\u0174\152\u0173\001\002\000\006\215\u0178\220\u0179\001\002" +
    "\000\006\107\u0174\152\u0173\001\002\000\014\215\ufea6\220" +
    "\ufea6\236\ufea6\237\ufea6\251\ufea6\001\002\000\006\220\u0177" +
    "\233\u0175\001\002\000\014\215\ufea5\220\ufea5\236\ufea5\237" +
    "\ufea5\251\ufea5\001\002\000\014\215\ufea2\220\ufea2\236\ufea2" +
    "\237\ufea2\251\ufea2\001\002\000\014\215\ufea4\220\ufea4\236" +
    "\ufea4\237\ufea4\251\ufea4\001\002\000\014\215\ufea3\220\ufea3" +
    "\236\ufea3\237\ufea3\251\ufea3\001\002\000\006\046\u017b\220" +
    "\u017d\001\002\000\032\052\ufee2\056\ufee2\114\ufee2\115\ufee2" +
    "\150\ufee2\243\ufee2\314\ufee2\325\ufee2\u010b\ufee2\u010c\ufee2\u0110" +
    "\ufee2\u0111\ufee2\001\002\000\012\325\ufe9c\u010b\ufe9c\u010c\ufe9c" +
    "\u0111\ufe9c\001\002\000\004\061\u017e\001\002\000\032\052" +
    "\ufee3\056\ufee3\114\ufee3\115\ufee3\150\ufee3\243\ufee3\314\ufee3" +
    "\325\ufee3\u010b\ufee3\u010c\ufee3\u0110\ufee3\u0111\ufee3\001\002\000" +
    "\032\052\ufee0\056\ufee0\114\ufee0\115\ufee0\150\ufee0\243\ufee0" +
    "\314\ufee0\325\ufee0\u010b\ufee0\u010c\ufee0\u0110\ufee0\u0111\ufee0\001" +
    "\002\000\006\215\u017f\220\u0181\001\002\000\004\220\u0183" +
    "\001\002\000\032\052\ufee1\056\ufee1\114\ufee1\115\ufee1\150" +
    "\ufee1\243\ufee1\314\ufee1\325\ufee1\u010b\ufee1\u010c\ufee1\u0110\ufee1" +
    "\u0111\ufee1\001\002\000\032\052\ufede\056\ufede\114\ufede\115" +
    "\ufede\150\ufede\243\ufede\314\ufede\325\ufede\u010b\ufede\u010c\ufede" +
    "\u0110\ufede\u0111\ufede\001\002\000\032\052\ufedf\056\ufedf\114" +
    "\ufedf\115\ufedf\150\ufedf\243\ufedf\314\ufedf\325\ufedf\u010b\ufedf" +
    "\u010c\ufedf\u0110\ufedf\u0111\ufedf\001\002\000\032\052\ufedd\056" +
    "\ufedd\114\ufedd\115\ufedd\150\ufedd\243\ufedd\314\ufedd\325\ufedd" +
    "\u010b\ufedd\u010c\ufedd\u0110\ufedd\u0111\ufedd\001\002\000\014\215" +
    "\ufea7\220\ufea7\236\ufea7\237\ufea7\251\ufea7\001\002\000\014" +
    "\215\ufea8\220\ufea8\236\ufea8\237\u016d\251\ufea8\001\002\000" +
    "\012\215\ufea9\220\ufea9\236\ufea9\251\ufea9\001\002\000\004" +
    "\u0111\u0188\001\002\000\014\215\ufeab\220\ufeab\236\ufeab\237" +
    "\ufeab\251\ufeab\001\002\000\004\u0110\u018a\001\002\000\036" +
    "\215\137\220\uff86\326\uff86\327\uff86\330\uff86\331\uff86\332" +
    "\uff86\u010e\uff86\u0110\141\u0124\uff86\u0127\uff86\u0128\uff86\u0129\uff86" +
    "\u012b\uff86\001\002\000\004\u0111\u018c\001\002\000\012\325" +
    "\ufe9b\u010b\ufe9b\u010c\ufe9b\u0111\ufe9b\001\002\000\064\010\uffd4" +
    "\011\uffd4\046\uffd4\051\uffd4\052\uffd4\056\uffd4\065\uffd4\113" +
    "\uffd4\114\uffd4\115\uffd4\134\uffd4\150\uffd4\215\uffd4\220\uffd4" +
    "\243\uffd4\312\uffd4\314\uffd4\325\uffd4\u0100\uffd4\u010b\uffd4\u010c" +
    "\uffd4\u010f\uffd4\u0110\uffd4\u0111\uffd4\u0123\uffd4\001\002\000\064" +
    "\010\uffc3\011\uffc3\046\uffc3\051\uffc3\052\uffc3\056\uffc3\065" +
    "\uffc3\113\uffc3\114\uffc3\115\uffc3\134\uffc3\150\uffc3\215\uffc3" +
    "\220\uffc3\243\uffc3\312\uffc3\314\uffc3\325\uffc3\u0100\uffc3\u010b" +
    "\uffc3\u010c\uffc3\u010f\uffc3\u0110\uffc3\u0111\uffc3\u0123\uffc3\001\002" +
    "\000\064\010\uffcc\011\uffcc\046\uffcc\051\uffcc\052\uffcc\056" +
    "\uffcc\065\uffcc\113\uffcc\114\uffcc\115\uffcc\134\uffcc\150\uffcc" +
    "\215\uffcc\220\uffcc\243\uffcc\312\uffcc\314\uffcc\325\uffcc\u0100" +
    "\uffcc\u010b\uffcc\u010c\uffcc\u010f\uffcc\u0110\uffcc\u0111\uffcc\u0123\uffcc" +
    "\001\002\000\064\010\uffce\011\uffce\046\uffce\051\uffce\052" +
    "\uffce\056\uffce\065\uffce\113\uffce\114\uffce\115\uffce\134\uffce" +
    "\150\uffce\215\uffce\220\uffce\243\uffce\312\uffce\314\uffce\325" +
    "\uffce\u0100\uffce\u010b\uffce\u010c\uffce\u010f\uffce\u0110\uffce\u0111\uffce" +
    "\u0123\uffce\001\002\000\064\010\uffd9\011\uffd9\046\uffd9\051" +
    "\uffd9\052\uffd9\056\uffd9\065\uffd9\113\uffd9\114\uffd9\115\uffd9" +
    "\134\uffd9\150\uffd9\215\uffd9\220\uffd9\243\uffd9\312\uffd9\314" +
    "\uffd9\325\uffd9\u0100\uffd9\u010b\uffd9\u010c\uffd9\u010f\uffd9\u0110\uffd9" +
    "\u0111\uffd9\u0123\uffd9\001\002\000\064\010\uffc2\011\uffc2\046" +
    "\uffc2\051\uffc2\052\uffc2\056\uffc2\065\uffc2\113\uffc2\114\uffc2" +
    "\115\uffc2\134\uffc2\150\uffc2\215\uffc2\220\uffc2\243\uffc2\312" +
    "\uffc2\314\uffc2\325\uffc2\u0100\uffc2\u010b\uffc2\u010c\uffc2\u010f\uffc2" +
    "\u0110\uffc2\u0111\uffc2\u0123\uffc2\001\002\000\064\010\uffd5\011" +
    "\uffd5\046\uffd5\051\uffd5\052\uffd5\056\uffd5\065\uffd5\113\uffd5" +
    "\114\uffd5\115\uffd5\134\uffd5\150\uffd5\215\uffd5\220\uffd5\243" +
    "\uffd5\312\uffd5\314\uffd5\325\uffd5\u0100\uffd5\u010b\uffd5\u010c\uffd5" +
    "\u010f\uffd5\u0110\uffd5\u0111\uffd5\u0123\uffd5\001\002\000\064\010" +
    "\uffda\011\uffda\046\uffda\051\uffda\052\uffda\056\uffda\065\uffda" +
    "\113\uffda\114\uffda\115\uffda\134\uffda\150\uffda\215\uffda\220" +
    "\uffda\243\uffda\312\uffda\314\uffda\325\uffda\u0100\uffda\u010b\uffda" +
    "\u010c\uffda\u010f\uffda\u0110\uffda\u0111\uffda\u0123\uffda\001\002\000" +
    "\064\010\uffc9\011\uffc9\046\uffc9\051\uffc9\052\uffc9\056\uffc9" +
    "\065\uffc9\113\uffc9\114\uffc9\115\uffc9\134\uffc9\150\uffc9\215" +
    "\uffc9\220\uffc9\243\uffc9\312\uffc9\314\uffc9\325\uffc9\u0100\uffc9" +
    "\u010b\uffc9\u010c\uffc9\u010f\uffc9\u0110\uffc9\u0111\uffc9\u0123\uffc9\001" +
    "\002\000\064\010\uffcf\011\uffcf\046\uffcf\051\uffcf\052\uffcf" +
    "\056\uffcf\065\uffcf\113\uffcf\114\uffcf\115\uffcf\134\uffcf\150" +
    "\uffcf\215\uffcf\220\uffcf\243\uffcf\312\uffcf\314\uffcf\325\uffcf" +
    "\u0100\uffcf\u010b\uffcf\u010c\uffcf\u010f\uffcf\u0110\uffcf\u0111\uffcf\u0123" +
    "\uffcf\001\002\000\064\010\uffcd\011\uffcd\046\uffcd\051\uffcd" +
    "\052\uffcd\056\uffcd\065\uffcd\113\uffcd\114\uffcd\115\uffcd\134" +
    "\uffcd\150\uffcd\215\uffcd\220\uffcd\243\uffcd\312\uffcd\314\uffcd" +
    "\325\uffcd\u0100\uffcd\u010b\uffcd\u010c\uffcd\u010f\uffcd\u0110\uffcd\u0111" +
    "\uffcd\u0123\uffcd\001\002\000\064\010\uffd2\011\uffd2\046\uffd2" +
    "\051\uffd2\052\uffd2\056\uffd2\065\uffd2\113\uffd2\114\uffd2\115" +
    "\uffd2\134\uffd2\150\uffd2\215\uffd2\220\uffd2\243\uffd2\312\uffd2" +
    "\314\uffd2\325\uffd2\u0100\uffd2\u010b\uffd2\u010c\uffd2\u010f\uffd2\u0110" +
    "\uffd2\u0111\uffd2\u0123\uffd2\001\002\000\066\337\u0194\340\u0191" +
    "\341\u01a2\342\u01a8\343\u01a1\344\u0193\345\u018d\346\u01a5\347" +
    "\u0198\350\u01a0\351\u01a7\352\u0196\353\u0190\354\u0197\355\u018f" +
    "\356\u01a4\357\u01a3\360\u0195\361\u01a6\362\u019d\363\u019a\364" +
    "\u01aa\365\u01a9\366\u018e\367\u0192\370\u019f\001\002\000\064" +
    "\010\uffc6\011\uffc6\046\uffc6\051\uffc6\052\uffc6\056\uffc6\065" +
    "\uffc6\113\uffc6\114\uffc6\115\uffc6\134\uffc6\150\uffc6\215\uffc6" +
    "\220\uffc6\243\uffc6\312\uffc6\314\uffc6\325\uffc6\u0100\uffc6\u010b" +
    "\uffc6\u010c\uffc6\u010f\uffc6\u0110\uffc6\u0111\uffc6\u0123\uffc6\001\002" +
    "\000\044\046\uffdc\052\uffdc\056\uffdc\113\uffdc\114\uffdc\115" +
    "\uffdc\134\uffdc\150\uffdc\215\uffdc\220\uffdc\243\uffdc\314\uffdc" +
    "\325\uffdc\u010b\uffdc\u010c\uffdc\u0110\uffdc\u0111\uffdc\001\002\000" +
    "\044\046\uffbf\052\uffbf\056\uffbf\113\uffbf\114\uffbf\115\uffbf" +
    "\134\uffbf\150\uffbf\215\uffbf\220\uffbf\243\uffbf\314\uffbf\325" +
    "\uffbf\u010b\uffbf\u010c\uffbf\u0110\u01f1\u0111\uffbf\001\002\000\064" +
    "\010\uffc7\011\uffc7\046\uffc7\051\uffc7\052\uffc7\056\uffc7\065" +
    "\uffc7\113\uffc7\114\uffc7\115\uffc7\134\uffc7\150\uffc7\215\uffc7" +
    "\220\uffc7\243\uffc7\312\uffc7\314\uffc7\325\uffc7\u0100\uffc7\u010b" +
    "\uffc7\u010c\uffc7\u010f\uffc7\u0110\uffc7\u0111\uffc7\u0123\uffc7\001\002" +
    "\000\042\046\ufed5\052\ufed5\056\ufed5\113\ufed5\114\ufed5\115" +
    "\ufed5\134\u01ab\150\ufed5\215\ufed5\220\ufed5\243\ufed5\314\ufed5" +
    "\325\ufed5\u010b\ufed5\u010c\ufed5\u0111\ufed5\001\002\000\064\010" +
    "\uffc1\011\uffc1\046\uffc1\051\uffc1\052\uffc1\056\uffc1\065\uffc1" +
    "\113\uffc1\114\uffc1\115\uffc1\134\uffc1\150\uffc1\215\uffc1\220" +
    "\uffc1\243\uffc1\312\uffc1\314\uffc1\325\uffc1\u0100\uffc1\u010b\uffc1" +
    "\u010c\uffc1\u010f\uffc1\u0110\uffc1\u0111\uffc1\u0123\uffc1\001\002\000" +
    "\064\010\uffd1\011\uffd1\046\uffd1\051\uffd1\052\uffd1\056\uffd1" +
    "\065\uffd1\113\uffd1\114\uffd1\115\uffd1\134\uffd1\150\uffd1\215" +
    "\uffd1\220\uffd1\243\uffd1\312\uffd1\314\uffd1\325\uffd1\u0100\uffd1" +
    "\u010b\uffd1\u010c\uffd1\u010f\uffd1\u0110\uffd1\u0111\uffd1\u0123\uffd1\001" +
    "\002\000\064\010\uffd6\011\uffd6\046\uffd6\051\uffd6\052\uffd6" +
    "\056\uffd6\065\uffd6\113\uffd6\114\uffd6\115\uffd6\134\uffd6\150" +
    "\uffd6\215\uffd6\220\uffd6\243\uffd6\312\uffd6\314\uffd6\325\uffd6" +
    "\u0100\uffd6\u010b\uffd6\u010c\uffd6\u010f\uffd6\u0110\uffd6\u0111\uffd6\u0123" +
    "\uffd6\001\002\000\064\010\uffd8\011\uffd8\046\uffd8\051\uffd8" +
    "\052\uffd8\056\uffd8\065\uffd8\113\uffd8\114\uffd8\115\uffd8\134" +
    "\uffd8\150\uffd8\215\uffd8\220\uffd8\243\uffd8\312\uffd8\314\uffd8" +
    "\325\uffd8\u0100\uffd8\u010b\uffd8\u010c\uffd8\u010f\uffd8\u0110\uffd8\u0111" +
    "\uffd8\u0123\uffd8\001\002\000\064\010\uffca\011\uffca\046\uffca" +
    "\051\uffca\052\uffca\056\uffca\065\uffca\113\uffca\114\uffca\115" +
    "\uffca\134\uffca\150\uffca\215\uffca\220\uffca\243\uffca\312\uffca" +
    "\314\uffca\325\uffca\u0100\uffca\u010b\uffca\u010c\uffca\u010f\uffca\u0110" +
    "\uffca\u0111\uffca\u0123\uffca\001\002\000\064\010\uffcb\011\uffcb" +
    "\046\uffcb\051\uffcb\052\uffcb\056\uffcb\065\uffcb\113\uffcb\114" +
    "\uffcb\115\uffcb\134\uffcb\150\uffcb\215\uffcb\220\uffcb\243\uffcb" +
    "\312\uffcb\314\uffcb\325\uffcb\u0100\uffcb\u010b\uffcb\u010c\uffcb\u010f" +
    "\uffcb\u0110\uffcb\u0111\uffcb\u0123\uffcb\001\002\000\064\010\uffd3" +
    "\011\uffd3\046\uffd3\051\uffd3\052\uffd3\056\uffd3\065\uffd3\113" +
    "\uffd3\114\uffd3\115\uffd3\134\uffd3\150\uffd3\215\uffd3\220\uffd3" +
    "\243\uffd3\312\uffd3\314\uffd3\325\uffd3\u0100\uffd3\u010b\uffd3\u010c" +
    "\uffd3\u010f\uffd3\u0110\uffd3\u0111\uffd3\u0123\uffd3\001\002\000\064" +
    "\010\uffc8\011\uffc8\046\uffc8\051\uffc8\052\uffc8\056\uffc8\065" +
    "\uffc8\113\uffc8\114\uffc8\115\uffc8\134\uffc8\150\uffc8\215\uffc8" +
    "\220\uffc8\243\uffc8\312\uffc8\314\uffc8\325\uffc8\u0100\uffc8\u010b" +
    "\uffc8\u010c\uffc8\u010f\uffc8\u0110\uffc8\u0111\uffc8\u0123\uffc8\001\002" +
    "\000\064\010\uffd0\011\uffd0\046\uffd0\051\uffd0\052\uffd0\056" +
    "\uffd0\065\uffd0\113\uffd0\114\uffd0\115\uffd0\134\uffd0\150\uffd0" +
    "\215\uffd0\220\uffd0\243\uffd0\312\uffd0\314\uffd0\325\uffd0\u0100" +
    "\uffd0\u010b\uffd0\u010c\uffd0\u010f\uffd0\u0110\uffd0\u0111\uffd0\u0123\uffd0" +
    "\001\002\000\064\010\uffd7\011\uffd7\046\uffd7\051\uffd7\052" +
    "\uffd7\056\uffd7\065\uffd7\113\uffd7\114\uffd7\115\uffd7\134\uffd7" +
    "\150\uffd7\215\uffd7\220\uffd7\243\uffd7\312\uffd7\314\uffd7\325" +
    "\uffd7\u0100\uffd7\u010b\uffd7\u010c\uffd7\u010f\uffd7\u0110\uffd7\u0111\uffd7" +
    "\u0123\uffd7\001\002\000\064\010\uffc4\011\uffc4\046\uffc4\051" +
    "\uffc4\052\uffc4\056\uffc4\065\uffc4\113\uffc4\114\uffc4\115\uffc4" +
    "\134\uffc4\150\uffc4\215\uffc4\220\uffc4\243\uffc4\312\uffc4\314" +
    "\uffc4\325\uffc4\u0100\uffc4\u010b\uffc4\u010c\uffc4\u010f\uffc4\u0110\uffc4" +
    "\u0111\uffc4\u0123\uffc4\001\002\000\064\010\uffc5\011\uffc5\046" +
    "\uffc5\051\uffc5\052\uffc5\056\uffc5\065\uffc5\113\uffc5\114\uffc5" +
    "\115\uffc5\134\uffc5\150\uffc5\215\uffc5\220\uffc5\243\uffc5\312" +
    "\uffc5\314\uffc5\325\uffc5\u0100\uffc5\u010b\uffc5\u010c\uffc5\u010f\uffc5" +
    "\u0110\uffc5\u0111\uffc5\u0123\uffc5\001\002\000\006\u010e\047\u0129" +
    "\046\001\002\000\040\046\ufebe\052\ufeb4\056\ufeb4\113\u01ad" +
    "\114\u01ae\115\ufeb4\150\u01af\215\u01b1\220\ufebe\243\ufeb4\314" +
    "\ufeb4\325\ufec9\u010b\ufec9\u010c\ufec9\u0111\ufec9\001\002\000\010" +
    "\215\ufecc\220\ufecc\u0110\u01e5\001\002\000\026\052\ufeb4\056" +
    "\ufeb4\115\ufeb4\150\u0146\243\ufeb4\314\ufeb4\325\ufeb6\u010b\ufeb6" +
    "\u010c\ufeb6\u0111\ufeb6\001\002\000\006\u010e\047\u0129\046\001" +
    "\002\000\014\052\u01c4\056\ufeac\115\u01c2\243\u01c6\314\u01c5" +
    "\001\002\000\006\046\ufebf\220\ufebf\001\002\000\006\046" +
    "\u01b6\220\u01b7\001\002\000\012\325\ufeca\u010b\ufeca\u010c\ufeca" +
    "\u0111\ufeca\001\002\000\012\325\ufed7\u010b\ufed7\u010c\ufed7\u0111" +
    "\ufed7\001\002\000\030\052\ufece\056\ufece\114\u01bd\115\ufece" +
    "\150\ufece\243\ufece\314\ufece\325\ufece\u010b\ufece\u010c\ufece\u0111" +
    "\ufece\001\002\000\004\061\u01b8\001\002\000\030\052\ufebd" +
    "\056\ufebd\114\ufebd\115\ufebd\150\ufebd\243\ufebd\314\ufebd\325" +
    "\ufebd\u010b\ufebd\u010c\ufebd\u0111\ufebd\001\002\000\034\052\ufeb9" +
    "\056\ufeb9\114\ufeb9\115\ufeb9\150\ufeb9\215\u01b9\220\u01ba\243" +
    "\ufeb9\314\ufeb9\325\ufeb9\u010b\ufeb9\u010c\ufeb9\u0111\ufeb9\001\002" +
    "\000\004\220\u01bc\001\002\000\030\052\ufeba\056\ufeba\114" +
    "\ufeba\115\ufeba\150\ufeba\243\ufeba\314\ufeba\325\ufeba\u010b\ufeba" +
    "\u010c\ufeba\u0111\ufeba\001\002\000\030\052\ufebc\056\ufebc\114" +
    "\ufebc\115\ufebc\150\ufebc\243\ufebc\314\ufebc\325\ufebc\u010b\ufebc" +
    "\u010c\ufebc\u0111\ufebc\001\002\000\030\052\ufebb\056\ufebb\114" +
    "\ufebb\115\ufebb\150\ufebb\243\ufebb\314\ufebb\325\ufebb\u010b\ufebb" +
    "\u010c\ufebb\u0111\ufebb\001\002\000\026\052\ufecf\056\ufecf\115" +
    "\ufecf\150\ufecf\243\ufecf\314\ufecf\325\ufecf\u010b\ufecf\u010c\ufecf" +
    "\u0111\ufecf\001\002\000\026\052\ufeb4\056\ufeb4\115\ufeb4\150" +
    "\u0146\243\ufeb4\314\ufeb4\325\ufeb6\u010b\ufeb6\u010c\ufeb6\u0111\ufeb6" +
    "\001\002\000\014\052\u01c4\056\ufeac\115\u01c2\243\u01c6\314" +
    "\u01c5\001\002\000\012\325\ufec7\u010b\ufec7\u010c\ufec7\u0111\ufec7" +
    "\001\002\000\026\052\ufeb4\056\ufeb4\115\ufeb4\150\u0146\243" +
    "\ufeb4\314\ufeb4\325\ufeb6\u010b\ufeb6\u010c\ufeb6\u0111\ufeb6\001\002" +
    "\000\006\215\u0178\220\u0179\001\002\000\032\052\ufeae\056" +
    "\ufeae\115\ufeae\126\u014f\150\ufeae\212\u0150\243\ufeae\314\ufeae" +
    "\325\ufeae\u010b\ufeae\u010c\ufeae\u0111\ufeae\001\002\000\004\157" +
    "\u01ce\001\002\000\004\157\u01cd\001\002\000\032\052\ufea0" +
    "\056\ufea0\115\ufea0\126\ufea0\150\ufea0\212\ufea0\243\ufea0\314" +
    "\ufea0\325\ufea0\u010b\ufea0\u010c\ufea0\u0111\ufea0\001\002\000\004" +
    "\056\u01c8\001\002\000\006\u010e\047\u0129\046\001\002\000" +
    "\012\215\ufeaa\220\ufeaa\237\ufeaa\u0110\u016b\001\002\000\010" +
    "\215\ufea8\220\ufea8\237\u016d\001\002\000\006\215\u0178\220" +
    "\u0179\001\002\000\026\052\ufeb2\056\ufeb2\115\ufeb2\150\ufeb2" +
    "\243\ufeb2\314\ufeb2\325\ufeb2\u010b\ufeb2\u010c\ufeb2\u0111\ufeb2\001" +
    "\002\000\032\052\ufea1\056\ufea1\115\ufea1\126\ufea1\150\ufea1" +
    "\212\ufea1\243\ufea1\314\ufea1\325\ufea1\u010b\ufea1\u010c\ufea1\u0111" +
    "\ufea1\001\002\000\004\056\ufead\001\002\000\026\052\ufeb3" +
    "\056\ufeb3\115\ufeb3\150\ufeb3\243\ufeb3\314\ufeb3\325\ufeb3\u010b" +
    "\ufeb3\u010c\ufeb3\u0111\ufeb3\001\002\000\004\u0110\u01d1\001\002" +
    "\000\036\215\137\220\uff86\326\uff86\327\uff86\330\uff86\331" +
    "\uff86\332\uff86\u010e\uff86\u0110\141\u0124\uff86\u0127\uff86\u0128\uff86" +
    "\u0129\uff86\u012b\uff86\001\002\000\004\u0111\u01d3\001\002\000" +
    "\026\052\ufeb1\056\ufeb1\115\ufeb1\150\ufeb1\243\ufeb1\314\ufeb1" +
    "\325\ufeb1\u010b\ufeb1\u010c\ufeb1\u0111\ufeb1\001\002\000\012\325" +
    "\ufeb7\u010b\ufeb7\u010c\ufeb7\u0111\ufeb7\001\002\000\026\052\ufeb4" +
    "\056\ufeb4\115\ufeb4\150\u0146\243\ufeb4\314\ufeb4\325\ufeb6\u010b" +
    "\ufeb6\u010c\ufeb6\u0111\ufeb6\001\002\000\012\325\ufec5\u010b\ufec5" +
    "\u010c\ufec5\u0111\ufec5\001\002\000\016\052\ufeb5\056\ufeb5\115" +
    "\ufeb5\233\u01d8\243\ufeb5\314\ufeb5\001\002\000\014\220\u01de" +
    "\u0124\u01df\u0127\u01db\u0128\u01da\u012b\u01dc\001\002\000\012\325" +
    "\ufecb\u010b\ufecb\u010c\ufecb\u0111\ufecb\001\002\000\010\113\ufec4" +
    "\215\ufec4\220\ufec4\001\002\000\010\113\ufec3\215\ufec3\220" +
    "\ufec3\001\002\000\010\113\ufec1\215\ufec1\220\ufec1\001\002" +
    "\000\010\113\u01e0\215\ufed3\220\ufed3\001\002\000\010\113" +
    "\ufec0\215\ufec0\220\ufec0\001\002\000\010\113\ufec2\215\ufec2" +
    "\220\ufec2\001\002\000\010\215\ufecc\220\ufecc\u0110\u01e5\001" +
    "\002\000\006\215\u0178\220\u0179\001\002\000\030\052\ufece" +
    "\056\ufece\114\u01bd\115\ufece\150\ufece\243\ufece\314\ufece\325" +
    "\ufece\u010b\ufece\u010c\ufece\u0111\ufece\001\002\000\026\052\ufeb4" +
    "\056\ufeb4\115\ufeb4\150\u0146\243\ufeb4\314\ufeb4\325\ufeb6\u010b" +
    "\ufeb6\u010c\ufeb6\u0111\ufeb6\001\002\000\012\325\ufeb8\u010b\ufeb8" +
    "\u010c\ufeb8\u0111\ufeb8\001\002\000\004\u012b\u01e7\001\002\000" +
    "\006\215\ufed4\220\ufed4\001\002\000\004\u010c\u01e8\001\002" +
    "\000\004\u012b\u01e9\001\002\000\004\u0111\u01ea\001\002\000" +
    "\006\215\ufecd\220\ufecd\001\002\000\012\325\ufec6\u010b\ufec6" +
    "\u010c\ufec6\u0111\ufec6\001\002\000\006\215\u0178\220\u0179\001" +
    "\002\000\030\052\ufece\056\ufece\114\u01bd\115\ufece\150\ufece" +
    "\243\ufece\314\ufece\325\ufece\u010b\ufece\u010c\ufece\u0111\ufece\001" +
    "\002\000\026\052\ufeb4\056\ufeb4\115\ufeb4\150\u0146\243\ufeb4" +
    "\314\ufeb4\325\ufeb6\u010b\ufeb6\u010c\ufeb6\u0111\ufeb6\001\002\000" +
    "\012\325\ufec8\u010b\ufec8\u010c\ufec8\u0111\ufec8\001\002\000\040" +
    "\046\ufed6\052\ufed6\056\ufed6\113\ufed6\114\ufed6\115\ufed6\150" +
    "\ufed6\215\ufed6\220\ufed6\243\ufed6\314\ufed6\325\ufed6\u010b\ufed6" +
    "\u010c\ufed6\u0111\ufed6\001\002\000\004\u0128\u01f3\001\002\000" +
    "\042\046\uffdd\052\uffdd\056\uffdd\113\uffdd\114\uffdd\115\uffdd" +
    "\134\uffdd\150\uffdd\215\uffdd\220\uffdd\243\uffdd\314\uffdd\325" +
    "\uffdd\u010b\uffdd\u010c\uffdd\u0111\uffdd\001\002\000\006\u010c\u01f4" +
    "\u0111\uffbd\001\002\000\004\u0128\u01f7\001\002\000\004\u0111" +
    "\u01f6\001\002\000\042\046\uffc0\052\uffc0\056\uffc0\113\uffc0" +
    "\114\uffc0\115\uffc0\134\uffc0\150\uffc0\215\uffc0\220\uffc0\243" +
    "\uffc0\314\uffc0\325\uffc0\u010b\uffc0\u010c\uffc0\u0111\uffc0\001\002" +
    "\000\004\u0111\uffbe\001\002\000\004\u010f\u01f9\001\002\000" +
    "\044\046\uffdb\052\uffdb\056\uffdb\113\uffdb\114\uffdb\115\uffdb" +
    "\134\uffdb\150\uffdb\215\uffdb\220\uffdb\243\uffdb\314\uffdb\325" +
    "\uffdb\u010b\uffdb\u010c\uffdb\u0110\uffdb\u0111\uffdb\001\002\000\014" +
    "\052\ufeb5\056\ufeb5\115\ufeb5\243\ufeb5\314\ufeb5\001\002\000" +
    "\010\126\u014f\212\u0150\u0110\ufeae\001\002\000\004\u0110\u0152" +
    "\001\002\000\012\325\ufe94\u010b\ufe94\u010c\ufe94\u0111\ufe94\001" +
    "\002\000\022\052\ufeb4\115\ufeb4\132\u0145\150\u0146\243\ufeb4" +
    "\314\ufeb4\u010e\047\u0129\046\001\002\000\006\325\ufe81\u010b" +
    "\ufe81\001\002\000\012\325\ufed8\u010b\ufed8\u010c\u01fe\u0111\ufed8" +
    "\001\002\000\010\325\ufed9\u010b\ufed9\u0111\ufed9\001\002\000" +
    "\006\u010e\047\u0129\046\001\002\000\074\004\u0208\263\u0209" +
    "\337\u0194\340\u0191\341\u01a2\342\u01a8\343\u01a1\344\u0193\345" +
    "\u018d\346\u01a5\347\u0198\350\u01a0\351\u01a7\352\u0196\353\u0190" +
    "\354\u0197\355\u018f\356\u01a4\357\u01a3\360\u0195\361\u01a6\362" +
    "\u019d\363\u019a\364\u01aa\365\u01a9\366\u018e\367\u0192\370\u019f" +
    "\u010e\u0199\001\002\000\006\114\u020f\215\u0211\001\002\000" +
    "\006\325\ufe7e\u010b\ufe7e\001\002\000\006\325\ufe7f\u010b\ufe7f" +
    "\001\002\000\014\134\u01ab\215\ufed5\220\ufed5\325\ufed5\u010b" +
    "\ufed5\001\002\000\006\114\ufe7b\215\ufe7b\001\002\000\006" +
    "\114\ufe7a\215\ufe7a\001\002\000\012\215\u020c\220\u020d\325" +
    "\ufed0\u010b\ufed0\001\002\000\006\325\ufe7c\u010b\ufe7c\001\002" +
    "\000\004\220\u020e\001\002\000\006\325\ufed2\u010b\ufed2\001" +
    "\002\000\006\325\ufed1\u010b\ufed1\001\002\000\006\325\ufe79" +
    "\u010b\ufe79\001\002\000\006\325\ufe7d\u010b\ufe7d\001\002\000" +
    "\004\046\u0212\001\002\000\004\061\u0213\001\002\000\006" +
    "\325\ufe78\u010b\ufe78\001\002\000\006\325\ufe87\u010b\ufe87\001" +
    "\002\000\006\134\ufe8b\152\ufe8b\001\002\000\006\134\ufe8a" +
    "\152\ufe8a\001\002\000\006\134\u0218\152\u0219\001\002\000" +
    "\006\u010e\047\u0129\046\001\002\000\004\106\u021b\001\002" +
    "\000\006\325\ufe8c\u010b\ufe8c\001\002\000\004\324\u021c\001" +
    "\002\000\006\325\ufe88\u010b\ufe88\001\002\000\006\325\ufe89" +
    "\u010b\ufe89\001\002\000\006\u010e\ufe55\u0129\ufe55\001\002\000" +
    "\006\u010e\ufe56\u0129\ufe56\001\002\000\006\u010e\047\u0129\046" +
    "\001\002\000\006\u010e\047\u0129\046\001\002\000\014\046" +
    "\ufe53\051\ufe53\312\ufe53\u010b\u0223\u0117\ufe53\001\002\000\004" +
    "\u0128\u025e\001\002\000\012\046\ufe51\051\ufe51\312\ufe51\u0117" +
    "\u0227\001\002\000\010\046\ufe52\051\ufe52\312\ufe52\001\002" +
    "\000\010\046\ufe43\051\ufe43\312\u023c\001\002\000\004\u0129" +
    "\u023a\001\002\000\074\214\u0229\337\u0194\340\u0191\341\u01a2" +
    "\342\u01a8\343\u01a1\344\u0193\345\u018d\346\u01a5\347\u0198\350" +
    "\u01a0\351\u01a7\352\u0196\353\u0190\354\u0197\355\u018f\356\u01a4" +
    "\357\u01a3\360\u0195\361\u01a6\362\u019d\363\u019a\364\u01aa\365" +
    "\u01a9\366\u018e\367\u0192\370\u019f\u010e\047\u0129\046\001\002" +
    "\000\004\270\u0238\001\002\000\020\010\ufe49\046\ufe49\051" +
    "\ufe49\312\ufe49\u0100\ufe49\u010c\ufe49\u0123\u0232\001\002\000\004" +
    "\011\u0230\001\002\000\012\046\ufe4e\051\ufe4e\312\ufe4e\u010c" +
    "\u022e\001\002\000\010\046\ufe50\051\ufe50\312\ufe50\001\002" +
    "\000\004\u0117\u0227\001\002\000\010\046\ufe4f\051\ufe4f\312" +
    "\ufe4f\001\002\000\012\046\ufe4b\051\ufe4b\312\ufe4b\u010c\ufe4b" +
    "\001\002\000\016\010\u0234\046\ufe47\051\ufe47\312\ufe47\u0100" +
    "\u0235\u010c\ufe47\001\002\000\004\233\u0233\001\002\000\022" +
    "\010\ufe4a\011\ufe4a\046\ufe4a\051\ufe4a\312\ufe4a\u0100\ufe4a\u010c" +
    "\ufe4a\u0111\ufe4a\001\002\000\012\046\ufe46\051\ufe46\312\ufe46" +
    "\u010c\ufe46\001\002\000\012\046\ufe45\051\ufe45\312\ufe45\u010c" +
    "\ufe45\001\002\000\012\046\ufe48\051\ufe48\312\ufe48\u010c\ufe48" +
    "\001\002\000\012\046\ufe4d\051\ufe4d\312\ufe4d\u010c\ufe4d\001" +
    "\002\000\006\010\u0234\u0100\u0235\001\002\000\012\046\ufe4c" +
    "\051\ufe4c\312\ufe4c\u010c\ufe4c\001\002\000\104\051\uffde\214" +
    "\uffde\274\uffde\325\uffde\337\uffde\340\uffde\341\uffde\342\uffde" +
    "\343\uffde\344\uffde\345\uffde\346\uffde\347\uffde\350\uffde\351" +
    "\uffde\352\uffde\353\uffde\354\uffde\355\uffde\356\uffde\357\uffde" +
    "\360\uffde\361\uffde\362\uffde\363\uffde\364\uffde\365\uffde\366" +
    "\uffde\367\uffde\370\uffde\u010b\uffde\u010e\uffde\u0129\uffde\001\002" +
    "\000\006\046\u024d\051\ufe35\001\002\000\012\012\u0241\022" +
    "\u0243\310\u0242\313\u023f\001\002\000\010\046\ufe3d\051\ufe3d" +
    "\u010c\u024a\001\002\000\006\046\ufe44\051\ufe44\001\002\000" +
    "\004\051\ufe3b\001\002\000\004\051\u0244\001\002\000\010" +
    "\046\ufe41\051\ufe41\u010c\ufe41\001\002\000\004\051\ufe3c\001" +
    "\002\000\010\046\ufe40\051\ufe40\u010c\ufe40\001\002\000\014" +
    "\017\u0246\020\u0249\021\u0245\u010e\047\u0129\046\001\002\000" +
    "\014\046\ufe38\051\ufe38\065\ufe38\072\ufe38\u010c\ufe38\001\002" +
    "\000\014\046\ufe3a\051\ufe3a\065\ufe3a\072\ufe3a\u010c\ufe3a\001" +
    "\002\000\014\046\ufe37\051\ufe37\065\ufe37\072\ufe37\u010c\ufe37" +
    "\001\002\000\010\046\ufe3f\051\ufe3f\u010c\ufe3f\001\002\000" +
    "\014\046\ufe39\051\ufe39\065\ufe39\072\ufe39\u010c\ufe39\001\002" +
    "\000\012\012\u0241\022\u0243\310\u0242\313\u023f\001\002\000" +
    "\006\046\ufe42\051\ufe42\001\002\000\006\046\ufe3e\051\ufe3e" +
    "\001\002\000\004\061\u025d\001\002\000\004\051\u024f\001" +
    "\002\000\014\065\u0253\133\007\140\025\236\040\251\041" +
    "\001\002\000\006\325\352\u010b\350\001\002\000\006\325" +
    "\ufe57\u010b\ufe57\001\002\000\006\325\ufe33\u010b\ufe33\001\002" +
    "\000\012\133\007\140\025\236\040\251\041\001\002\000" +
    "\004\274\u0255\001\002\000\006\325\ufe34\u010b\ufe34\001\002" +
    "\000\020\133\007\140\025\236\040\251\041\274\ufe30\325" +
    "\ufe30\u010b\ufe30\001\002\000\006\325\352\u010b\350\001\002" +
    "\000\010\274\ufe32\325\ufe32\u010b\ufe32\001\002\000\020\133" +
    "\007\140\025\236\040\251\041\274\ufe2e\325\ufe2e\u010b\ufe2e" +
    "\001\002\000\006\325\352\u010b\350\001\002\000\010\274" +
    "\ufe31\325\ufe31\u010b\ufe31\001\002\000\010\274\ufe2f\325\ufe2f" +
    "\u010b\ufe2f\001\002\000\004\051\ufe36\001\002\000\012\046" +
    "\ufe54\051\ufe54\312\ufe54\u0117\ufe54\001\002\000\004\u0110\u0260" +
    "\001\002\000\006\u0111\ufe2b\u0117\u0227\001\002\000\004\u0111" +
    "\u026e\001\002\000\006\u010c\u026b\u0111\ufe27\001\002\000\004" +
    "\u0111\ufe2c\001\002\000\070\051\u0265\337\ufe25\340\ufe25\341" +
    "\ufe25\342\ufe25\343\ufe25\344\ufe25\345\ufe25\346\ufe25\347\ufe25" +
    "\350\ufe25\351\ufe25\352\ufe25\353\ufe25\354\ufe25\355\ufe25\356" +
    "\ufe25\357\ufe25\360\ufe25\361\ufe25\362\ufe25\363\ufe25\364\ufe25" +
    "\365\ufe25\366\ufe25\367\ufe25\370\ufe25\001\002\000\072\065" +
    "\ufe26\072\ufe26\337\ufe26\340\ufe26\341\ufe26\342\ufe26\343\ufe26" +
    "\344\ufe26\345\ufe26\346\ufe26\347\ufe26\350\ufe26\351\ufe26\352" +
    "\ufe26\353\ufe26\354\ufe26\355\ufe26\356\ufe26\357\ufe26\360\ufe26" +
    "\361\ufe26\362\ufe26\363\ufe26\364\ufe26\365\ufe26\366\ufe26\367" +
    "\ufe26\370\ufe26\001\002\000\066\337\u0194\340\u0191\341\u01a2" +
    "\342\u01a8\343\u01a1\344\u0193\345\u018d\346\u01a5\347\u0198\350" +
    "\u01a0\351\u01a7\352\u0196\353\u0190\354\u0197\355\u018f\356\u01a4" +
    "\357\u01a3\360\u0195\361\u01a6\362\u019d\363\u019a\364\u01aa\365" +
    "\u01a9\366\u018e\367\u0192\370\u019f\001\002\000\012\011\ufe49" +
    "\u010c\ufe49\u0111\ufe49\u0123\u0232\001\002\000\010\011\u026a\u010c" +
    "\ufe23\u0111\ufe23\001\002\000\006\u010c\ufe29\u0111\ufe29\001\002" +
    "\000\006\u010c\ufe24\u0111\ufe24\001\002\000\004\u0117\u0227\001" +
    "\002\000\004\u0111\ufe2a\001\002\000\004\u0111\ufe28\001\002" +
    "\000\004\013\u026f\001\002\000\070\174\u0273\337\u0194\340" +
    "\u0191\341\u01a2\342\u01a8\343\u01a1\344\u0193\345\u018d\346\u01a5" +
    "\347\u0198\350\u01a0\351\u01a7\352\u0196\353\u0190\354\u0197\355" +
    "\u018f\356\u01a4\357\u01a3\360\u0195\361\u01a6\362\u019d\363\u019a" +
    "\364\u01aa\365\u01a9\366\u018e\367\u0192\370\u019f\001\002\000" +
    "\006\325\ufe21\u010b\ufe21\001\002\000\006\325\ufe2d\u010b\ufe2d" +
    "\001\002\000\010\051\ufe1e\065\ufe1e\312\u0276\001\002\000" +
    "\010\051\ufe1e\072\ufe1e\312\u0276\001\002\000\006\325\ufe22" +
    "\u010b\ufe22\001\002\000\006\051\u0265\072\ufe25\001\002\000" +
    "\014\012\u027c\013\u0278\014\u0279\015\u027a\313\u0277\001\002" +
    "\000\004\051\u0287\001\002\000\004\220\u0283\001\002\000" +
    "\012\051\ufe1a\065\ufe1a\072\ufe1a\u010c\ufe1a\001\002\000\004" +
    "\237\u0280\001\002\000\012\051\ufe1c\065\ufe1c\072\ufe1c\u010c" +
    "\u027e\001\002\000\012\051\ufe1b\065\ufe1b\072\ufe1b\u010c\ufe1b" +
    "\001\002\000\010\051\ufe1f\065\ufe1f\072\ufe1f\001\002\000" +
    "\012\051\ufe1e\065\ufe1e\072\ufe1e\312\u0276\001\002\000\010" +
    "\051\ufe1d\065\ufe1d\072\ufe1d\001\002\000\004\220\u0281\001" +
    "\002\000\004\u0101\u0282\001\002\000\012\051\ufe18\065\ufe18" +
    "\072\ufe18\u010c\ufe18\001\002\000\004\237\u0284\001\002\000" +
    "\004\220\u0285\001\002\000\004\u0101\u0286\001\002\000\012" +
    "\051\ufe19\065\ufe19\072\ufe19\u010c\ufe19\001\002\000\014\017" +
    "\u0246\020\u0249\021\u0245\u010e\047\u0129\046\001\002\000\012" +
    "\051\ufe17\065\ufe17\072\ufe17\u010c\ufe17\001\002\000\004\072" +
    "\u028a\001\002\000\006\133\007\u0110\u028c\001\002\000\006" +
    "\325\ufe20\u010b\ufe20\001\002\000\004\133\007\001\002\000" +
    "\006\325\ufe15\u010b\ufe15\001\002\000\004\u0111\u028f\001\002" +
    "\000\006\325\ufe16\u010b\ufe16\001\002\000\006\051\u0265\065" +
    "\ufe25\001\002\000\004\065\u0292\001\002\000\012\133\007" +
    "\140\025\236\040\251\041\001\002\000\006\325\352\u010b" +
    "\350\001\002\000\004\072\u0295\001\002\000\006\u0117\u0227" +
    "\u0128\u0296\001\002\000\004\274\ufe12\001\002\000\004\274" +
    "\u0299\001\002\000\004\274\ufe13\001\002\000\006\325\ufe14" +
    "\u010b\ufe14\001\002\000\010\146\u029c\u010e\uff3f\u0129\uff3f\001" +
    "\002\000\006\u010e\047\u0129\046\001\002\000\006\u010e\uff40" +
    "\u0129\uff40\001\002\000\010\233\uff3d\265\uff3d\u0110\u0127\001" +
    "\002\000\006\233\uff3e\265\uff3e\001\002\000\006\233\u02a0" +
    "\265\u02a1\001\002\000\004\265\u02b6\001\002\000\004\u0110" +
    "\u02a3\001\002\000\006\325\uff41\u010b\uff41\001\002\000\014" +
    "\233\u02a4\u0124\u02aa\u0127\u02a6\u0128\u02a5\u012b\u02a7\001\002\000" +
    "\006\u010c\uff3b\u0111\uff3b\001\002\000\006\u010c\uff3a\u0111\uff3a" +
    "\001\002\000\006\u010c\uff39\u0111\uff39\001\002\000\006\u010c" +
    "\uff37\u0111\uff37\001\002\000\006\u010c\u02b2\u0111\uff35\001\002" +
    "\000\004\u0111\u02ab\001\002\000\006\u010c\uff38\u0111\uff38\001" +
    "\002\000\010\325\uff31\u010b\uff31\u010c\u02ac\001\002\000\004" +
    "\u0110\u02ae\001\002\000\006\325\uff34\u010b\uff34\001\002\000" +
    "\014\233\u02a4\u0124\u02aa\u0127\u02a6\u0128\u02a5\u012b\u02a7\001\002" +
    "\000\004\u0111\u02b0\001\002\000\010\325\uff31\u010b\uff31\u010c" +
    "\u02ac\001\002\000\006\325\uff32\u010b\uff32\001\002\000\014" +
    "\233\u02a4\u0124\u02aa\u0127\u02a6\u0128\u02a5\u012b\u02a7\001\002\000" +
    "\004\u0111\uff3c\001\002\000\006\u010c\u02b2\u0111\uff35\001\002" +
    "\000\004\u0111\uff36\001\002\000\006\325\uff33\u010b\uff33\001" +
    "\002\000\006\325\uff1b\u010b\uff1b\001\002\000\006\325\uff1d" +
    "\u010b\uff1d\001\002\000\006\325\uff19\u010b\uff19\001\002\000" +
    "\006\325\uff1c\u010b\uff1c\001\002\000\006\u010e\047\u0129\046" +
    "\001\002\000\006\325\uff1e\u010b\uff1e\001\002\000\006\325" +
    "\uff1f\u010b\uff1f\001\002\000\006\u010e\047\u0129\046\001\002" +
    "\000\010\126\ufef0\132\ufef0\212\ufef0\001\002\000\010\126" +
    "\u014f\132\ufeae\212\u0150\001\002\000\006\u010e\047\u0129\046" +
    "\001\002\000\006\u010e\047\u0129\046\001\002\000\006\325" +
    "\uff18\u010b\uff18\001\002\000\006\325\uff1a\u010b\uff1a\001\002" +
    "\000\004\u0110\u02c6\001\002\000\022\052\ufeb4\115\ufeb4\132" +
    "\u0145\150\u0146\243\ufeb4\314\ufeb4\u010e\047\u0129\046\001\002" +
    "\000\006\u010c\u01fe\u0111\ufed8\001\002\000\004\u0111\u02c9\001" +
    "\002\000\010\237\u02cb\325\ufee4\u010b\ufee4\001\002\000\006" +
    "\325\ufee6\u010b\ufee6\001\002\000\004\314\u02cc\001\002\000" +
    "\006\325\ufee5\u010b\ufee5\001\002\000\004\051\u02ce\001\002" +
    "\000\004\133\007\001\002\000\006\325\ufef2\u010b\ufef2\001" +
    "\002\000\004\132\u02d1\001\002\000\006\u010e\047\u0129\046" +
    "\001\002\000\004\237\u02d3\001\002\000\006\u010e\047\u0129" +
    "\046\001\002\000\004\u0110\u02d6\001\002\000\014\237\ufee9" +
    "\304\ufee9\323\u02e1\325\ufee9\u010b\ufee9\001\002\000\006\u010e" +
    "\047\u0129\046\001\002\000\012\054\u0156\244\u0155\u010c\uff5d" +
    "\u0111\uff5d\001\002\000\004\u0111\u02d9\001\002\000\014\237" +
    "\ufeee\304\ufeee\323\ufeee\325\ufeee\u010b\ufeee\001\002\000\006" +
    "\u010c\u02db\u0111\ufeeb\001\002\000\006\u010e\047\u0129\046\001" +
    "\002\000\004\u0111\ufeed\001\002\000\012\054\u0156\244\u0155" +
    "\u010c\uff5d\u0111\uff5d\001\002\000\006\u010c\u02db\u0111\ufeeb\001" +
    "\002\000\004\u0111\ufeec\001\002\000\012\237\uff6a\304\134" +
    "\325\uff6a\u010b\uff6a\001\002\000\004\u0110\u0127\001\002\000" +
    "\012\237\ufeea\304\ufeea\325\ufeea\u010b\ufeea\001\002\000\010" +
    "\237\u02e4\325\ufee7\u010b\ufee7\001\002\000\006\u010e\047\u0129" +
    "\046\001\002\000\006\325\ufef1\u010b\ufef1\001\002\000\004" +
    "\u0110\u02e7\001\002\000\006\u010e\047\u0129\046\001\002\000" +
    "\004\u0111\u02e9\001\002\000\006\325\ufee8\u010b\ufee8\001\002" +
    "\000\006\325\uff17\u010b\uff17\001\002\000\012\134\uff13\237" +
    "\u02ed\325\uff13\u010b\uff13\001\002\000\006\325\uff16\u010b\uff16" +
    "\001\002\000\006\314\u02f2\u0110\uff0f\001\002\000\010\134" +
    "\u02f0\325\uff11\u010b\uff11\001\002\000\006\325\uff15\u010b\uff15" +
    "\001\002\000\006\u010e\047\u0129\046\001\002\000\006\325" +
    "\uff12\u010b\uff12\001\002\000\004\u0110\uff10\001\002\000\004" +
    "\u0110\u02f5\001\002\000\012\134\uff0d\325\uff0d\u010b\uff0d\u010c" +
    "\u0320\001\002\000\006\372\u02f8\373\u02f9\001\002\000\010" +
    "\134\uff14\325\uff14\u010b\uff14\001\002\000\004\u0123\u02fa\001" +
    "\002\000\004\u0123\uff0b\001\002\000\004\u0123\uff0a\001\002" +
    "\000\004\u0124\u02fb\001\002\000\004\u010c\u02fc\001\002\000" +
    "\006\040\u02ff\371\u02fd\001\002\000\004\u0123\uff09\001\002" +
    "\000\004\u0123\u0300\001\002\000\004\u0123\uff08\001\002\000" +
    "\004\u0124\u0301\001\002\000\006\u010c\u0302\u0111\uff06\001\002" +
    "\000\010\374\u030b\375\u0309\376\u0307\001\002\000\004\u0111" +
    "\u0304\001\002\000\012\134\uff0c\325\uff0c\u010b\uff0c\u010c\uff0c" +
    "\001\002\000\006\u010c\uff05\u0111\uff05\001\002\000\006\u010c" +
    "\u0302\u0111\uff06\001\002\000\004\u0123\u031a\001\002\000\006" +
    "\u010c\uff04\u0111\uff04\001\002\000\004\u0123\u0314\001\002\000" +
    "\006\u010c\uff03\u0111\uff03\001\002\000\004\u0123\u030c\001\002" +
    "\000\004\u0128\u030d\001\002\000\016\333\u0311\334\u0312\335" +
    "\u0310\336\u0313\u010c\uff00\u0111\uff00\001\002\000\006\u010c\uff01" +
    "\u0111\uff01\001\002\000\006\u010c\uff02\u0111\uff02\001\002\000" +
    "\006\u010c\ufefc\u0111\ufefc\001\002\000\006\u010c\ufeff\u0111\ufeff" +
    "\001\002\000\006\u010c\ufefd\u0111\ufefd\001\002\000\006\u010c" +
    "\ufefe\u0111\ufefe\001\002\000\004\u0128\u0315\001\002\000\020" +
    "\333\u0311\334\u0312\335\u0310\336\u0313\377\u0319\u010c\ufef7\u0111" +
    "\ufef7\001\002\000\006\u010c\ufefb\u0111\ufefb\001\002\000\006" +
    "\u010c\ufef9\u0111\ufef9\001\002\000\006\u010c\ufefa\u0111\ufefa\001" +
    "\002\000\006\u010c\ufef8\u0111\ufef8\001\002\000\004\u0128\u031b" +
    "\001\002\000\020\333\u0311\334\u0312\335\u0310\336\u0313\u010a" +
    "\u031e\u010c\ufef3\u0111\ufef3\001\002\000\006\u010c\ufef5\u0111\ufef5" +
    "\001\002\000\006\u010c\ufef6\u0111\ufef6\001\002\000\006\u010c" +
    "\ufef4\u0111\ufef4\001\002\000\004\u0111\uff07\001\002\000\004" +
    "\u0110\u02f5\001\002\000\010\134\uff0e\325\uff0e\u010b\uff0e\001" +
    "\002\000\016\325\ufe66\372\ufe66\u010b\ufe66\u010e\ufe66\u0117\ufe66" +
    "\u0129\ufe66\001\002\000\010\325\ufe6c\372\u0325\u010b\ufe6c\001" +
    "\002\000\016\325\ufe67\372\ufe67\u010b\ufe67\u010e\ufe67\u0117\ufe67" +
    "\u0129\ufe67\001\002\000\010\312\u0327\325\ufe6a\u010b\ufe6a\001" +
    "\002\000\006\325\ufe6e\u010b\ufe6e\001\002\000\004\023\u0329" +
    "\001\002\000\006\325\ufe6d\u010b\ufe6d\001\002\000\010\325" +
    "\ufe68\u010b\ufe68\u0124\u032b\001\002\000\006\325\ufe6b\u010b\ufe6b" +
    "\001\002\000\006\325\ufe69\u010b\ufe69\001\002\000\006\325" +
    "\ufe5d\u010b\ufe5d\001\002\000\014\325\ufe61\u010b\ufe61\u010e\047" +
    "\u0117\u0227\u0129\046\001\002\000\006\325\ufe63\u010b\ufe63\001" +
    "\002\000\006\325\ufe5c\u010b\ufe5c\001\002\000\006\325\ufe62" +
    "\u010b\ufe62\001\002\000\006\325\ufe60\u010b\ufe60\001\002\000" +
    "\014\325\ufe61\u010b\ufe61\u010e\047\u0117\u0227\u0129\046\001\002" +
    "\000\006\325\ufe5f\u010b\ufe5f\001\002\000\006\u010e\047\u0129" +
    "\046\001\002\000\006\325\uffa8\u010b\uffa8\001\002\000\004" +
    "\002\001\001\002\000\040\002\ufffe\003\034\037\030\065" +
    "\023\106\021\122\006\133\007\140\025\142\022\167\024" +
    "\227\012\230\043\236\040\251\041\263\031\001\002\000" +
    "\004\002\000\001\002\000\040\213\uff67\220\uff67\326\uff67" +
    "\327\uff67\330\uff67\331\uff67\332\uff67\u0108\uff67\u010e\uff67\u0110" +
    "\uff67\u0124\uff67\u0127\uff67\u0128\uff67\u0129\uff67\u012b\uff67\001\002" +
    "\000\040\213\112\220\uff84\326\uff84\327\uff84\330\uff84\331" +
    "\uff84\332\uff84\u0108\uff84\u010e\uff84\u0110\uff84\u0124\uff84\u0127\uff84" +
    "\u0128\uff84\u0129\uff84\u012b\uff84\001\002\000\040\213\uff68\220" +
    "\uff68\326\uff68\327\uff68\330\uff68\331\uff68\332\uff68\u0108\uff68" +
    "\u010e\uff68\u0110\uff68\u0124\uff68\u0127\uff68\u0128\uff68\u0129\uff68\u012b" +
    "\uff68\001\002\000\036\220\171\326\153\327\164\330\172" +
    "\331\170\332\165\u0108\u033e\u010e\047\u0110\167\u0124\151\u0127" +
    "\155\u0128\156\u0129\046\u012b\166\001\002\000\036\046\uffa5" +
    "\051\u0345\063\uffa5\102\uffa5\105\uffa5\267\uffa5\304\uffa5\325" +
    "\uffa5\u010b\uffa5\u010c\uffa5\u010e\047\u0111\uffa5\u0124\u0347\u0129\046" +
    "\001\002\000\026\046\uff46\063\uff46\102\uff46\105\uff46\267" +
    "\uff46\304\uff46\325\uff46\u010b\uff46\u010c\u0376\u0111\uff46\001\002" +
    "\000\024\046\uff55\063\u0341\102\uff55\105\uff55\267\uff55\304" +
    "\uff55\325\uff55\u010b\uff55\u0111\uff55\001\002\000\022\046\uff6a" +
    "\102\uff6a\105\uff6a\267\uff6a\304\134\325\uff6a\u010b\uff6a\u0111" +
    "\uff6a\001\002\000\006\u010e\047\u0129\046\001\002\000\046" +
    "\046\uffa5\051\u0345\066\uffa5\102\uffa5\103\uffa5\105\uffa5\135" +
    "\uffa5\154\uffa5\165\uffa5\267\uffa5\304\uffa5\325\uffa5\u010b\uffa5" +
    "\u010c\uffa5\u010e\047\u0111\uffa5\u0124\u0347\u0129\046\001\002\000" +
    "\042\046\uffa4\063\uffa4\066\uffa4\102\uffa4\103\uffa4\105\uffa4" +
    "\135\uffa4\154\uffa4\165\uffa4\237\uffa4\267\uffa4\304\uffa4\325" +
    "\uffa4\u010b\uffa4\u010c\uffa4\u0111\uffa4\001\002\000\036\046\uff51" +
    "\066\u034d\102\uff51\103\u034c\105\uff51\135\u034a\154\uff4c\165" +
    "\u0349\267\uff51\304\uff51\325\uff51\u010b\uff51\u010c\uff51\u0111\uff51" +
    "\001\002\000\010\u010e\047\u0124\u0347\u0129\046\001\002\000" +
    "\042\046\uffa6\063\uffa6\066\uffa6\102\uffa6\103\uffa6\105\uffa6" +
    "\135\uffa6\154\uffa6\165\uffa6\237\uffa6\267\uffa6\304\uffa6\325" +
    "\uffa6\u010b\uffa6\u010c\uffa6\u0111\uffa6\001\002\000\042\046\uffa3" +
    "\063\uffa3\066\uffa3\102\uffa3\103\uffa3\105\uffa3\135\uffa3\154" +
    "\uffa3\165\uffa3\237\uffa3\267\uffa3\304\uffa3\325\uffa3\u010b\uffa3" +
    "\u010c\uffa3\u0111\uffa3\001\002\000\042\046\uffa7\063\uffa7\066" +
    "\uffa7\102\uffa7\103\uffa7\105\uffa7\135\uffa7\154\uffa7\165\uffa7" +
    "\237\uffa7\267\uffa7\304\uffa7\325\uffa7\u010b\uffa7\u010c\uffa7\u0111" +
    "\uffa7\001\002\000\006\154\uff4a\272\u0355\001\002\000\004" +
    "\154\uff50\001\002\000\024\046\uff53\102\uff53\105\uff53\267" +
    "\uff53\304\uff53\325\uff53\u010b\uff53\u010c\u0358\u0111\uff53\001\002" +
    "\000\006\154\uff4a\272\u0355\001\002\000\006\154\uff4a\272" +
    "\u0355\001\002\000\004\154\u034f\001\002\000\006\u010e\047" +
    "\u0129\046\001\002\000\014\051\u0345\237\uffa5\u010e\047\u0124" +
    "\u0347\u0129\046\001\002\000\004\237\u0352\001\002\000\036" +
    "\215\137\220\uff86\326\uff86\327\uff86\330\uff86\331\uff86\332" +
    "\uff86\u010e\uff86\u0110\141\u0124\uff86\u0127\uff86\u0128\uff86\u0129\uff86" +
    "\u012b\uff86\001\002\000\036\046\uff51\066\u034d\102\uff51\103" +
    "\u034c\105\uff51\135\u034a\154\uff4c\165\u0349\267\uff51\304\uff51" +
    "\325\uff51\u010b\uff51\u010c\uff51\u0111\uff51\001\002\000\024\046" +
    "\uff52\102\uff52\105\uff52\267\uff52\304\uff52\325\uff52\u010b\uff52" +
    "\u010c\uff52\u0111\uff52\001\002\000\004\154\uff4b\001\002\000" +
    "\004\154\uff4d\001\002\000\004\154\uff4f\001\002\000\006" +
    "\u010e\047\u0129\046\001\002\000\022\046\uff56\102\uff56\105" +
    "\uff56\267\uff56\304\uff56\325\uff56\u010b\uff56\u0111\uff56\001\002" +
    "\000\044\046\uffa5\051\u0345\066\uffa5\102\uffa5\103\uffa5\105" +
    "\uffa5\135\uffa5\154\uffa5\165\uffa5\267\uffa5\304\uffa5\325\uffa5" +
    "\u010b\uffa5\u010e\047\u0111\uffa5\u0124\u0347\u0129\046\001\002\000" +
    "\034\046\uff51\066\u034d\102\uff51\103\u034c\105\uff51\135\u034a" +
    "\154\uff4c\165\u0349\267\uff51\304\uff51\325\uff51\u010b\uff51\u0111" +
    "\uff51\001\002\000\022\046\uff54\102\uff54\105\uff54\267\uff54" +
    "\304\uff54\325\uff54\u010b\uff54\u0111\uff54\001\002\000\004\154" +
    "\uff4e\001\002\000\020\046\uff59\102\u035f\105\uff59\267\uff59" +
    "\325\uff59\u010b\uff59\u0111\uff59\001\002\000\004\104\u0370\001" +
    "\002\000\016\046\uff64\105\u0361\267\uff64\325\uff64\u010b\uff64" +
    "\u0111\uff64\001\002\000\036\215\137\220\uff86\326\uff86\327" +
    "\uff86\330\uff86\331\uff86\332\uff86\u010e\uff86\u0110\141\u0124\uff86" +
    "\u0127\uff86\u0128\uff86\u0129\uff86\u012b\uff86\001\002\000\014\046" +
    "\uff62\267\u0363\325\uff62\u010b\uff62\u0111\uff62\001\002\000\004" +
    "\104\u0365\001\002\000\012\046\uff69\325\uff69\u010b\uff69\u0111" +
    "\uff69\001\002\000\034\220\171\326\153\327\164\330\172" +
    "\331\170\332\165\u010e\047\u0110\167\u0124\151\u0127\155\u0128" +
    "\156\u0129\046\u012b\166\001\002\000\052\046\uff60\054\uff60" +
    "\134\u0367\220\uff60\244\uff60\325\uff60\326\uff60\327\uff60\330" +
    "\uff60\331\uff60\332\uff60\u010b\uff60\u010e\uff60\u0110\uff60\u0111\uff60" +
    "\u0124\uff60\u0127\uff60\u0128\uff60\u0129\uff60\u012b\uff60\001\002\000" +
    "\006\u010e\047\u0129\046\001\002\000\050\046\uff5d\054\u0156" +
    "\220\uff5d\244\u0155\325\uff5d\326\uff5d\327\uff5d\330\uff5d\331" +
    "\uff5d\332\uff5d\u010b\uff5d\u010e\uff5d\u0110\uff5d\u0111\uff5d\u0124\uff5d" +
    "\u0127\uff5d\u0128\uff5d\u0129\uff5d\u012b\uff5d\001\002\000\044\046" +
    "\uff5b\220\171\325\uff5b\326\153\327\164\330\172\331\170" +
    "\332\165\u010b\uff5b\u010e\047\u0110\167\u0111\uff5b\u0124\151\u0127" +
    "\155\u0128\156\u0129\046\u012b\166\001\002\000\020\046\uff60" +
    "\054\uff60\134\u0367\244\uff60\325\uff60\u010b\uff60\u0111\uff60\001" +
    "\002\000\012\046\uff63\325\uff63\u010b\uff63\u0111\uff63\001\002" +
    "\000\016\046\uff5d\054\u0156\244\u0155\325\uff5d\u010b\uff5d\u0111" +
    "\uff5d\001\002\000\012\046\uff5c\325\uff5c\u010b\uff5c\u0111\uff5c" +
    "\001\002\000\050\046\uff61\054\uff61\220\uff61\244\uff61\325" +
    "\uff61\326\uff61\327\uff61\330\uff61\331\uff61\332\uff61\u010b\uff61" +
    "\u010e\uff61\u0110\uff61\u0111\uff61\u0124\uff61\u0127\uff61\u0128\uff61\u0129" +
    "\uff61\u012b\uff61\001\002\000\014\046\uff65\267\uff65\325\uff65" +
    "\u010b\uff65\u0111\uff65\001\002\000\034\220\171\326\153\327" +
    "\164\330\172\331\170\332\165\u010e\047\u0110\167\u0124\151" +
    "\u0127\155\u0128\156\u0129\046\u012b\166\001\002\000\020\046" +
    "\uff57\105\uff57\267\uff57\325\uff57\u010b\uff57\u010c\u0372\u0111\uff57" +
    "\001\002\000\034\220\171\326\153\327\164\330\172\331" +
    "\170\332\165\u010e\047\u0110\167\u0124\151\u0127\155\u0128\156" +
    "\u0129\046\u012b\166\001\002\000\016\046\uff5a\105\uff5a\267" +
    "\uff5a\325\uff5a\u010b\uff5a\u0111\uff5a\001\002\000\020\046\uff57" +
    "\105\uff57\267\uff57\325\uff57\u010b\uff57\u010c\u0372\u0111\uff57\001" +
    "\002\000\016\046\uff58\105\uff58\267\uff58\325\uff58\u010b\uff58" +
    "\u0111\uff58\001\002\000\034\220\171\326\153\327\164\330" +
    "\172\331\170\332\165\u010e\047\u0110\167\u0124\151\u0127\155" +
    "\u0128\156\u0129\046\u012b\166\001\002\000\024\046\uff48\063" +
    "\uff48\102\uff48\105\uff48\267\uff48\304\uff48\325\uff48\u010b\uff48" +
    "\u0111\uff48\001\002\000\036\046\uffa5\051\u0345\063\uffa5\102" +
    "\uffa5\105\uffa5\267\uffa5\304\uffa5\325\uffa5\u010b\uffa5\u010c\uffa5" +
    "\u010e\047\u0111\uffa5\u0124\u0347\u0129\046\001\002\000\026\046" +
    "\uff46\063\uff46\102\uff46\105\uff46\267\uff46\304\uff46\325\uff46" +
    "\u010b\uff46\u010c\u0376\u0111\uff46\001\002\000\024\046\uff47\063" +
    "\uff47\102\uff47\105\uff47\267\uff47\304\uff47\325\uff47\u010b\uff47" +
    "\u0111\uff47\001\002\000\026\046\uff46\063\uff46\102\uff46\105" +
    "\uff46\267\uff46\304\uff46\325\uff46\u010b\uff46\u010c\u0376\u0111\uff46" +
    "\001\002\000\024\046\uff49\063\uff49\102\uff49\105\uff49\267" +
    "\uff49\304\uff49\325\uff49\u010b\uff49\u0111\uff49\001\002\000\010" +
    "\u010e\047\u0117\u0227\u0129\046\001\002\000\006\325\ufe5a\u010b" +
    "\ufe5a\001\002\000\006\325\ufe65\u010b\ufe65\001\002\000\006" +
    "\325\ufe64\u010b\ufe64\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u037e\000\050\002\010\003\007\004\016\005\012\006" +
    "\034\007\032\027\026\043\004\070\025\113\043\123\013" +
    "\131\014\136\041\244\015\270\035\277\017\301\036\303" +
    "\003\351\031\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\274\u037c\001\001\000\004\071\u0339\001\001\000" +
    "\004\010\u0336\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\274\u0331\300\u0330\001\001\000\006\274\u032c\302\u032b\001" +
    "\001\000\004\274\u0322\001\001\000\026\137\u02bc\140\u02c3" +
    "\141\u02b6\165\u02b8\166\u02c2\167\u02bf\175\u02b9\304\u0117\305" +
    "\u02bb\332\u02b7\001\001\000\004\057\u0299\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\245\u011a\246\u0120\251" +
    "\u011c\252\u011f\254\u0115\304\u0117\305\u0118\332\u0116\001\001" +
    "\000\016\030\360\031\353\033\365\035\361\036\357\040" +
    "\364\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\350\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\057\326\001\001\000\004\057\110" +
    "\001\001\000\002\001\001\000\004\011\044\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\352" +
    "\054\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\353\056\001\001\000\002\001\001\000\004\354\060\001" +
    "\001\000\002\001\001\000\004\355\065\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\356\071\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\070\074\001\001\000\004\357\075\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\360\100\001" +
    "\001\000\002\001\001\000\006\011\102\111\103\001\001" +
    "\000\004\112\104\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\106\001\001\000\004\112\107\001\001" +
    "\000\002\001\001\000\006\011\117\014\120\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\060\116\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\015\317\001\001\000\002\001\001\000\006\011\122" +
    "\132\123\001\001\000\002\001\001\000\004\135\124\001" +
    "\001\000\004\067\134\001\001\000\006\011\117\014\126" +
    "\001\001\000\004\127\130\001\001\000\006\011\117\014" +
    "\131\001\001\000\002\001\001\000\004\127\132\001\001" +
    "\000\002\001\001\000\006\056\135\061\137\001\001\000" +
    "\002\001\001\000\020\011\156\016\153\046\151\050\162" +
    "\052\160\053\157\063\161\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\056\135\061\141\001\001\000\002" +
    "\001\001\000\006\062\143\066\145\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\056\135\061\147\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\056\240\064\252\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\017" +
    "\233\001\001\000\002\001\001\000\004\051\224\001\001" +
    "\000\006\062\223\066\145\001\001\000\004\047\214\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\011\156\016\153\046\206\050\162\052\160\053" +
    "\157\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\011\156\016\175\054\173\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\011\156" +
    "\016\175\054\205\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\011\156\016\175\054\211" +
    "\001\001\000\002\001\001\000\010\011\156\016\175\054" +
    "\213\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\011\156\016\153\050\221\052\160\053\157\001\001\000" +
    "\014\011\156\016\153\050\217\052\160\053\157\001\001" +
    "\000\004\047\220\001\001\000\002\001\001\000\004\047" +
    "\222\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\011\156\016\153\052\231\053\157\001" +
    "\001\000\012\011\156\016\153\052\227\053\157\001\001" +
    "\000\004\051\230\001\001\000\002\001\001\000\004\051" +
    "\232\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\011\117\014\235\001\001\000\002\001\001\000\010\011" +
    "\156\016\175\054\237\001\001\000\002\001\001\000\004" +
    "\065\274\001\001\000\016\011\156\016\153\046\270\050" +
    "\162\052\160\053\157\001\001\000\016\011\156\016\153" +
    "\046\267\050\162\052\160\053\157\001\001\000\016\011" +
    "\156\016\153\046\266\050\162\052\160\053\157\001\001" +
    "\000\016\011\156\016\153\046\265\050\162\052\160\053" +
    "\157\001\001\000\016\011\156\016\153\046\264\050\162" +
    "\052\160\053\157\001\001\000\016\011\156\016\153\046" +
    "\263\050\162\052\160\053\157\001\001\000\016\011\156" +
    "\016\153\046\262\050\162\052\160\053\157\001\001\000" +
    "\016\011\156\016\153\046\261\050\162\052\160\053\157" +
    "\001\001\000\016\011\156\016\153\046\260\050\162\052" +
    "\160\053\157\001\001\000\002\001\001\000\016\011\156" +
    "\016\153\046\257\050\162\052\160\053\157\001\001\000" +
    "\004\056\255\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\056\135\061\307\001\001\000\002\001\001" +
    "\000\006\056\135\061\275\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\056\135\061\277\001\001\000\002" +
    "\001\001\000\016\011\156\016\153\046\301\050\162\052" +
    "\160\053\157\001\001\000\004\055\303\001\001\000\016" +
    "\011\156\016\153\046\305\050\162\052\160\053\157\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\055\306" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\011" +
    "\156\016\153\046\311\050\162\052\160\053\157\133\312" +
    "\001\001\000\002\001\001\000\004\134\315\001\001\000" +
    "\002\001\001\000\006\011\122\132\316\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\011" +
    "\321\012\322\001\001\000\004\013\323\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\325\001\001\000" +
    "\002\001\001\000\004\124\327\001\001\000\010\011\117" +
    "\014\332\125\331\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\126\342\001\001\000\004\130\334\001\001" +
    "\000\002\001\001\000\004\011\336\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\067\346\001\001\000\006\011\117\014\344\001" +
    "\001\000\004\127\345\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\050\002\352\003\007\004" +
    "\016\005\012\006\034\007\032\027\026\043\004\070\025" +
    "\113\043\123\013\131\014\136\041\244\015\270\035\277" +
    "\017\301\036\303\003\351\031\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\020\u010f\001" +
    "\001\000\004\020\u0106\001\001\000\004\020\u0104\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\020\376\001\001\000\004\020\367\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\011" +
    "\321\012\370\001\001\000\004\034\371\001\001\000\002" +
    "\001\001\000\006\011\321\012\373\001\001\000\004\034" +
    "\374\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\011\117\014\377\001\001\000\004\032\u0100\001\001\000" +
    "\002\001\001\000\006\011\117\014\u0102\001\001\000\004" +
    "\032\u0103\001\001\000\002\001\001\000\004\011\u0105\001" +
    "\001\000\002\001\001\000\006\011\u0107\041\u0108\001\001" +
    "\000\002\001\001\000\004\042\u010a\001\001\000\006\011" +
    "\u0107\041\u010b\001\001\000\002\001\001\000\004\042\u010c" +
    "\001\001\000\002\001\001\000\006\011\117\014\u010e\001" +
    "\001\000\002\001\001\000\004\011\u0110\001\001\000\004" +
    "\037\u0112\001\001\000\004\011\u0113\001\001\000\002\001" +
    "\001\000\004\037\u0114\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\306\u0220\001\001\000" +
    "\002\001\001\000\006\011\u0214\247\u0216\001\001\000\002" +
    "\001\001\000\004\011\u0213\001\001\000\002\001\001\000" +
    "\006\011\117\014\u012b\001\001\000\006\011\321\012\u0123" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\110\u0124\253\u0125\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\011\102\111" +
    "\u0127\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\070\u012a\001\001\000\002\001\001\000\010\255\u012f\256" +
    "\u012c\263\u0130\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\011\u0146\200\u0143\205\u0140\223\u0147\235\u0141\243" +
    "\u0142\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\264\u0135\266\u0134\001\001\000\004\020\u013e\001\001\000" +
    "\002\001\001\000\004\020\u013c\001\001\000\004\265\u0137" +
    "\001\001\000\012\011\u0138\264\u013a\266\u0134\267\u0139\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\265\u013b" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\u013d\001\001\000\002\001\001\000\004\011\u013f\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\201\u01fe\001\001\000\004\011\u01fa" +
    "\001\001\000\004\011\u01f9\001\001\000\010\022\u019d\023" +
    "\u019b\024\u019a\001\001\000\004\236\u014b\001\001\000\004" +
    "\177\u0188\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\225\u014d\001\001\000\004\237\u0150" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\u0152\001\001\000\004\075\u0153\001\001" +
    "\000\004\242\u0156\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\u0158\001\001\000\004" +
    "\075\u0159\001\001\000\004\242\u015a\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\225\u015d\001\001\000\004" +
    "\237\u015e\001\001\000\002\001\001\000\004\240\u0160\001" +
    "\001\000\002\001\001\000\004\011\u0162\001\001\000\004" +
    "\241\u0163\001\001\000\002\001\001\000\004\011\u0165\001" +
    "\001\000\004\241\u0166\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\011\321\012\u0169\001\001\000\004\227" +
    "\u016b\001\001\000\004\011\u0186\001\001\000\004\230\u016d" +
    "\001\001\000\004\231\u0184\001\001\000\004\231\u016f\001" +
    "\001\000\004\232\u0183\001\001\000\004\177\u0179\001\001" +
    "\000\004\232\u0171\001\001\000\002\001\001\000\004\233" +
    "\u0175\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\202\u017b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\203\u017f\001\001\000" +
    "\004\204\u0181\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\230\u0185\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\056\135\061" +
    "\u018a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\024\u01f7\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\025\u01f1\001" +
    "\001\000\002\001\001\000\004\206\u01ab\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\011\u01ef\001\001" +
    "\000\012\213\u01b3\214\u01b2\216\u01b1\223\u01af\001\001\000" +
    "\004\212\u01eb\001\001\000\006\222\u01ea\223\u01be\001\001" +
    "\000\004\011\u01d6\001\001\000\010\224\u01d4\226\u01c6\234" +
    "\u01c2\001\001\000\002\001\001\000\004\217\u01b4\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\211\u01bd\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\220\u01ba" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\222\u01bf" +
    "\223\u01be\001\001\000\010\224\u01c0\226\u01c6\234\u01c2\001" +
    "\001\000\002\001\001\000\006\222\u01d3\223\u01be\001\001" +
    "\000\004\177\u01cf\001\001\000\004\225\u01ce\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\011\321\012\u01c8\001\001\000\004\227" +
    "\u01c9\001\001\000\004\230\u01ca\001\001\000\004\177\u01cb" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\056\135" +
    "\061\u01d1\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\222\u01d5\223\u01be\001\001\000\002" +
    "\001\001\000\004\221\u01d8\001\001\000\004\215\u01dc\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\207\u01e0\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\212\u01e5\001\001\000\004" +
    "\177\u01e1\001\001\000\004\211\u01e2\001\001\000\006\222" +
    "\u01e3\223\u01be\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\177\u01ec\001\001\000\004\211\u01ed\001\001\000\006\222" +
    "\u01ee\223\u01be\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\026\u01f4\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\225\u01fb\001\001\000\004\237\u01fc" +
    "\001\001\000\002\001\001\000\016\011\u0146\200\u01ff\205" +
    "\u0140\223\u0147\235\u0141\243\u0142\001\001\000\002\001\001" +
    "\000\004\201\u0200\001\001\000\002\001\001\000\004\011" +
    "\u0202\001\001\000\016\022\u0206\023\u019b\024\u019a\257\u0205" +
    "\260\u0204\261\u0203\001\001\000\004\262\u020f\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\206\u0209\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\210\u020a\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\250" +
    "\u0219\001\001\000\004\011\u021c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\011\321\012\u025e\001\001\000\006\011\321\012\u0221\001" +
    "\001\000\004\307\u0223\001\001\000\002\001\001\000\010" +
    "\021\u0227\310\u0225\311\u0224\001\001\000\002\001\001\000" +
    "\004\317\u023a\001\001\000\002\001\001\000\010\011\u022a" +
    "\024\u0229\313\u022b\001\001\000\002\001\001\000\004\314" +
    "\u0230\001\001\000\002\001\001\000\004\312\u022c\001\001" +
    "\000\002\001\001\000\006\021\u0227\311\u022e\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\315\u0236\316\u0235" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\316\u0238\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\325\u024d\001\001\000\010\320\u023d\321\u023c" +
    "\323\u023f\001\001\000\004\322\u024a\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\011\u0246\324" +
    "\u0247\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\320" +
    "\u024b\321\u023c\323\u023f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\004" +
    "\u024f\070\025\113\043\123\013\131\014\326\u0250\327\u0251" +
    "\001\001\000\004\010\u0255\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\004\u024f\070\025\113\043\123\013" +
    "\131\014\327\u0253\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\004\u0256\070\025\113\043\123\013\131\014" +
    "\330\u0257\001\001\000\004\010\u0258\001\001\000\002\001" +
    "\001\000\016\004\u0259\070\025\113\043\123\013\131\014" +
    "\331\u025a\001\001\000\004\010\u025b\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\021\u0263\333\u0260\334\u0262\335" +
    "\u0261\001\001\000\002\001\001\000\004\336\u026b\001\001" +
    "\000\002\001\001\000\004\337\u0265\001\001\000\002\001" +
    "\001\000\004\024\u0266\001\001\000\004\314\u0267\001\001" +
    "\000\004\340\u0268\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\021\u0263\334\u026c\335\u0261\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\024" +
    "\u0271\341\u0270\342\u0273\347\u026f\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\343\u028f\001\001\000\004\343" +
    "\u0274\001\001\000\002\001\001\000\004\337\u0288\001\001" +
    "\000\004\345\u027a\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\344\u027c" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\343" +
    "\u027e\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\011\u0246" +
    "\324\u0287\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\070\u028c\346\u028a\001\001\000\002\001\001\000\004" +
    "\070\u028d\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\337\u0290\001\001\000\002\001\001" +
    "\000\014\004\u0292\070\025\113\043\123\013\131\014\001" +
    "\001\000\004\010\u0293\001\001\000\002\001\001\000\006" +
    "\021\u0297\350\u0296\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\114\u029a" +
    "\001\001\000\006\011\117\014\u029c\001\001\000\002\001" +
    "\001\000\006\110\u029d\115\u029e\001\001\000\002\001\001" +
    "\000\004\121\u02a1\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\116\u02a8\117\u02a7\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\120\u02b2\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\122\u02ac\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\116\u02ae\117\u02a7\001\001" +
    "\000\002\001\001\000\004\122\u02b0\001\001\000\002\001" +
    "\001\000\004\117\u02b3\001\001\000\002\001\001\000\004" +
    "\120\u02b4\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\u02ea\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\u02e9\001\001\000\002\001\001" +
    "\000\004\225\u02cf\001\001\000\006\011\321\012\u02cc\001" +
    "\001\000\006\011\117\014\u02c4\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\011\u0146\200" +
    "\u02c6\205\u0140\223\u0147\235\u0141\243\u0142\001\001\000\004" +
    "\201\u02c7\001\001\000\002\001\001\000\004\176\u02c9\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\070\u02ce\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\u02d1\001\001\000\002" +
    "\001\001\000\006\011\117\014\u02d3\001\001\000\004\170" +
    "\u02d4\001\001\000\004\173\u02df\001\001\000\006\011\u02d6" +
    "\171\u02d7\001\001\000\004\075\u02d9\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\172\u02db\001\001\000\004" +
    "\011\u02dc\001\001\000\002\001\001\000\004\075\u02dd\001" +
    "\001\000\004\172\u02de\001\001\000\002\001\001\000\004" +
    "\067\u02e2\001\001\000\004\110\u02e1\001\001\000\002\001" +
    "\001\000\004\174\u02e4\001\001\000\004\011\u02e5\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\u02e7\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\142\u02eb\143\u02ed\001\001\000\002\001\001\000" +
    "\004\145\u02f2\001\001\000\004\144\u02ee\001\001\000\002" +
    "\001\001\000\004\011\u02f0\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\146\u02f5\147\u02f3\001\001\000\002" +
    "\001\001\000\004\150\u02f6\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\151\u02fd\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\152\u0302\001\001\000\012\154\u0305\155" +
    "\u0304\160\u0307\163\u0309\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\152\u031e\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\156" +
    "\u030e\157\u030d\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\161\u0315\001\001\000\006\157\u0316" +
    "\162\u0317\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\157\u031b\164\u031c\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\146\u0320" +
    "\147\u02f3\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\271\u0325\001\001\000\002\001\001\000\004\272\u0327" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\273\u0329\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\011\u032d\021\u032f\276" +
    "\u032e\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\011\u032d\021\u032f\276" +
    "\u0332\001\001\000\002\001\001\000\006\011\117\014\u0334" +
    "\001\001\000\002\001\001\000\002\001\001\000\050\002" +
    "\u0337\003\007\004\016\005\012\006\034\007\032\027\026" +
    "\043\004\070\025\113\043\123\013\131\014\136\041\244" +
    "\015\270\035\277\017\301\036\303\003\351\031\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\057\u033b\001" +
    "\001\000\002\001\001\000\020\011\156\016\153\046\u033c" +
    "\050\162\052\160\053\157\106\u033e\001\001\000\010\011" +
    "\u0342\044\u037a\045\u0345\001\001\000\004\107\u0376\001\001" +
    "\000\004\101\u033f\001\001\000\004\067\u035d\001\001\000" +
    "\006\011\117\014\u0341\001\001\000\010\011\u0342\044\u0343" +
    "\045\u0345\001\001\000\002\001\001\000\006\103\u034a\104" +
    "\u034d\001\001\000\006\011\u0342\045\u0347\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\105" +
    "\u035c\001\001\000\002\001\001\000\004\102\u0358\001\001" +
    "\000\004\105\u0356\001\001\000\004\105\u0355\001\001\000" +
    "\002\001\001\000\006\011\117\014\u034f\001\001\000\010" +
    "\011\u0342\044\u0350\045\u0345\001\001\000\002\001\001\000" +
    "\006\056\135\061\u0352\001\001\000\006\103\u0353\104\u034d" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\011\117\014\u0359\001\001" +
    "\000\002\001\001\000\010\011\u0342\044\u035a\045\u0345\001" +
    "\001\000\006\103\u035b\104\u034d\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\077\u035f\001\001\000\002\001" +
    "\001\000\004\072\u0361\001\001\000\006\056\135\061\u036e" +
    "\001\001\000\004\073\u0363\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\011\156\016\153\046\u0365\050\162" +
    "\052\160\053\157\001\001\000\004\074\u0367\001\001\000" +
    "\004\011\u036d\001\001\000\004\075\u0368\001\001\000\020" +
    "\011\156\016\153\046\u0369\050\162\052\160\053\157\076" +
    "\u036a\001\001\000\004\074\u036b\001\001\000\002\001\001" +
    "\000\004\075\u036c\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\011\156\016\153\046\u0370" +
    "\050\162\052\160\053\157\001\001\000\004\100\u0372\001" +
    "\001\000\016\011\156\016\153\046\u0373\050\162\052\160" +
    "\053\157\001\001\000\002\001\001\000\004\100\u0374\001" +
    "\001\000\002\001\001\000\016\011\156\016\153\046\u0377" +
    "\050\162\052\160\053\157\001\001\000\002\001\001\000" +
    "\010\011\u0342\044\u0378\045\u0345\001\001\000\004\107\u0379" +
    "\001\001\000\002\001\001\000\004\107\u037b\001\001\000" +
    "\002\001\001\000\010\011\u037e\021\u037f\275\u037d\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public String Er = "";
    private Symbol s;

    public Symbol getS(){
    	return this.s;
    }

    public final Class getSymbolContainer() {
        return sym.class;
    }

    public void syntax_error(Symbol s){
  	this.s=s; 
 	List<Integer> ids = expected_token_ids();
	LinkedList<String> idsNames = new LinkedList<String>();
	for (Integer esperado : ids){
            idsNames.add(symbl_name_from_id(esperado));
            idsNames.add(", ");
	}
       	Er = Er + ("Error de sintaxis en Token " + s.value + ", en columna " + (s.left+1) + ", en linea " + (s.right+1) + ", esperando tokens " + idsNames.toString() + "\n\n");
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        List<Integer> ids = expected_token_ids();
	LinkedList<String> idsNames = new LinkedList<String>();
	for (Integer esperado : ids){
            idsNames.add(symbl_name_from_id(esperado));
            idsNames.add(", ");
	}
       	Er = Er + ("Error de sintaxis en Token " + s.value + ", en columna " + (s.left+1) + ", en linea " + (s.right+1) + ", esperando tokens " + idsNames.toString() + "\n\n");   
    }
    
    public String symbl_name_from_id(int id){
	Field[] fields = getSymbolContainer().getFields();
	for(Field f : fields){
            try {
		if (f.getInt(null)==id)
                    return f.getName();
            } catch (IllegalArgumentException e) {
                //e.printStackTrace();
            } catch (IllegalAccessException e) {
                //e.printStackTrace();
            }
	}
	return "invalid symbol id";
    }

    public List<Integer> expected_token_ids() {
        List<Integer> ret = new LinkedList<Integer>();
	int parse_state = ((Symbol)stack.peek()).parse_state ;
	short[] row = action_tab[parse_state];
	for (int i = 0; i<row.length; i+=2){
	    if (row[i]==-1) continue;
            if (!validate_expected_symbol(row[i])) continue;
            ret.add(new Integer(row[i]));
	}
	return ret;
    }
    
    private boolean validate_expected_symbol(int id){
	short lhs,rhs_size;
	int act;
	try {
            virtual_parse_stack vstack = new virtual_parse_stack(stack);
            /* parse until we fail or get past the lookahead input */
            for (;;){
                /* look up the action from the current state (on top of stack) */
		act = get_action(vstack.top(), id);

                /* if its an error, we fail */
		if (act == 0) return false;

                /* > 0 encodes a shift */
		if (act > 0){
                    /* push the new state on the stack */
                    vstack.push(act-1);
                    /* advance simulated input, if we run off the end, we are done */
                    if (!advance_lookahead()) return true;
		}
                    /* < 0 encodes a reduce */
		else{
                    /* if this is a reduce with the start production we are done */
                    if ((-act)-1 == start_production())  return true;

		    /* get the lhs Symbol and the rhs size */
                    lhs = production_tab[(-act)-1][0];
                    rhs_size = production_tab[(-act)-1][1];
                    /* pop handle off the stack */
                    for (int i = 0; i < rhs_size; i++) vstack.pop();
                    vstack.push(get_reduce(vstack.top(), lhs));
		}
            }
	} catch (Exception e) {
            e.printStackTrace();
	}
	return true;
    }

    protected static final int _error_sync_size(){
	return 1;
    }

    public String obtenerErrores(){
        return Er;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // Cursor7 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor7",238, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // Cursor7 ::= OF ListaColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor7",238, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // Cursor6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor6",237, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // Cursor6 ::= FOR UPDATE Cursor7 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor6",237, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // Cursor5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor5",236, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // Cursor5 ::= TYPE_WARNING 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor5",236, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // Cursor4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",235, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // Cursor4 ::= OPTIMISTIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",235, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // Cursor4 ::= SCROLL_LOCKS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",235, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // Cursor4 ::= READ_ONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor4",235, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // Cursor3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",234, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // Cursor3 ::= FASTFORWARD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",234, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // Cursor3 ::= DYNAMIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",234, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // Cursor3 ::= KEYSET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",234, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // Cursor3 ::= STATIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor3",234, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // Cursor2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",233, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // Cursor2 ::= SCROLL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",233, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // Cursor2 ::= FORWARDONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor2",233, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // Cursor1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",232, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // Cursor1 ::= GLOBAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",232, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // Cursor1 ::= LOCAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor1",232, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // Cursor ::= DECLARE ID CURSOR Cursor1 Cursor2 Cursor3 Cursor4 Cursor5 FOR Select Cursor6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Cursor",231, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // ReturnData1 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData1",230, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // ReturnData1 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData1",230, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // ReturnData ::= TipoDeDato3 ReturnTable1 AsWord BEGIN SentenciasDML Fin RETURN ReturnData1 END 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnData",229, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // SelectOption ::= Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectOption",228, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // SelectOption ::= Aparentesis Select Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectOption",228, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // FunctionOption ::= EXECUTE AS ExecuteType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",227, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // FunctionOption ::= CALLED ON NULL INPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",227, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // FunctionOption ::= RETURNS NULL ON NULL INPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",227, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // FunctionOption ::= SCHEMABINDING 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",227, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // FunctionOption ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionOption",227, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // ReturnTable2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable2",226, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // ReturnTable2 ::= Coma ReturnTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable2",226, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // ReturnTable1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable1",225, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // ReturnTable1 ::= WITH FunctionOption ReturnTable2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable1",225, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // ReturnTable ::= TABLE ReturnTable1 AsWord RETURN SelectOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnTable",224, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // ReturnType ::= ReturnData 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnType",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // ReturnType ::= ReturnTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReturnType",223, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // ReadOnlyWord ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReadOnlyWord",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // ReadOnlyWord ::= READONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ReadOnlyWord",222, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // AsWord ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsWord",221, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // AsWord ::= AS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsWord",221, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // FunctionParam3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam3",220, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // FunctionParam3 ::= Coma FunctionParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam3",220, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // FunctionParam2 ::= Var AsWord TipoDeDato3 ProcedureDataType1 ReadOnlyWord 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam2",219, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // FunctionParam1 ::= FunctionParam2 FunctionParam3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam1",218, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // FunctionParam ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam",217, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // FunctionParam ::= FunctionParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FunctionParam",217, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // Function ::= OrAlter FUNCTION IDL1 Aparentesis FunctionParam Cparentesis RETURNS ReturnType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Function",216, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // ProcedureStatement2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement2",215, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // ProcedureStatement2 ::= SentenciasDML Fin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement2",215, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // ProcedureStatement1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement1",214, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // ProcedureStatement1 ::= SentenciasDML Fin ProcedureStatement2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement1",214, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // ProcedureStatement ::= SentenciasDML Fin ProcedureStatement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureStatement",213, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // BeginProcedure ::= ProcedureStatement 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BeginProcedure",212, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // BeginProcedure ::= BEGIN ProcedureStatement END 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("BeginProcedure",212, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // ProcedureReplication ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureReplication",211, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // ProcedureReplication ::= FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureReplication",211, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // ExecuteType ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",210, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // ExecuteType ::= OWNER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",210, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // ExecuteType ::= SELF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",210, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // ExecuteType ::= CALLER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ExecuteType",210, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // Execute ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Execute",209, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // Execute ::= EXEC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Execute",209, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // ProcedureOption3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption3",208, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // ProcedureOption3 ::= Coma ProcedureOption1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption3",208, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // ProcedureOption2 ::= Execute AS ExecuteType 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // ProcedureOption2 ::= RECOMPILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // ProcedureOption2 ::= ENCRYPTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption2",207, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // ProcedureOption1 ::= ProcedureOption2 ProcedureOption3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption1",206, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // ProcedureOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption",205, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // ProcedureOption ::= WITH ProcedureOption1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureOption",205, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // ProcedureDataType3 ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType3",204, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // ProcedureDataType3 ::= OUT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType3",204, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // ProcedureDataType2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType2",203, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // ProcedureDataType2 ::= ProcedureDataType3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType2",203, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // ProcedureDataType1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType1",202, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // ProcedureDataType1 ::= Igual DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType1",202, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // ProcedureDataType ::= ID READONLY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",201, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // ProcedureDataType ::= CURSOR VARYING ProcedureDataType3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",201, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // ProcedureDataType ::= TipoDeDato3 ProcedureDataType1 ProcedureDataType2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureDataType",201, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // ProcedureParam2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam2",200, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // ProcedureParam2 ::= Coma ProcedureParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam2",200, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // ProcedureParam1 ::= Var ProcedureDataType ProcedureParam2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam1",199, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // ProcedureParam ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam",198, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // ProcedureParam ::= ProcedureParam1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureParam",198, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // ProcedureNum ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureNum",197, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // ProcedureNum ::= PuntoYComa Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureNum",197, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // ProcedureName ::= PROCEDURE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureName",196, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // ProcedureName ::= PROC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ProcedureName",196, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // Procedure ::= OrAlter ProcedureName IDL1 ProcedureNum ProcedureParam ProcedureOption ProcedureReplication AS BeginProcedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Procedure",195, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // OrAlter ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrAlter",194, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // OrAlter ::= OR ALTER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrAlter",194, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // Save ::= SAVE TransactName Name 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Save",193, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // Commit1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit1",192, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // Commit1 ::= TransactName Name1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit1",192, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // Commit ::= COMMIT Commit1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Commit",191, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // Rollback1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback1",190, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // Rollback1 ::= TransactName Name1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback1",190, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // Rollback ::= ROLLBACK Rollback1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Rollback",189, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // Name1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",188, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // Name1 ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",188, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // Name1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name1",188, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // Name ::= Var 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name",187, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // Name ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Name",187, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // TransactName ::= TRANSACTION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TransactName",186, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // TransactName ::= TRAN 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TransactName",186, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // Transact3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact3",185, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // Transact3 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact3",185, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // Transact2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact2",184, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // Transact2 ::= WITH MARK Transact3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact2",184, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // Transact1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact1",183, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // Transact1 ::= NAME Transact2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact1",183, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // Transact ::= BEGIN TransactName Transact1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Transact",182, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // AlterTableDrop4 ::= AlterTableDrop1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop4",181, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // AlterTableDrop4 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop4",181, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // AlterTableDrop3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop3",180, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // AlterTableDrop3 ::= CONSTRAINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop3",180, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // AlterTableDrop2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop2",179, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // AlterTableDrop2 ::= Coma AlterTableDrop4 AlterTableDrop2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop2",179, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // AlterTableDrop1 ::= COLUMN IFExists ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop1",178, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // AlterTableDrop1 ::= AlterTableDrop3 IFExists ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop1",178, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // AlterTableDrop ::= DROP AlterTableDrop1 AlterTableDrop2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTableDrop",177, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // AlterColumna4 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna4",176, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // AlterColumna4 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna4",176, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // AlterColumna3 ::= DROP 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna3",175, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // AlterColumna3 ::= ADD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna3",175, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // AlterColumna2 ::= TipoDeDato DefinicionColumna1 DefinicionColumna3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna2",174, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // AlterColumna1 ::= AlterColumna3 AlterColumna4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna1",173, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // AlterColumna1 ::= AlterColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna1",173, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // AlterColumna ::= ALTER COLUMN ID AlterColumna1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterColumna",172, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // AlterTable1 ::= AlterTableDrop 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",171, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // AlterTable1 ::= ADD TableElement2 TableElement3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",171, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // AlterTable1 ::= AlterColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable1",171, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // AlterTable ::= TABLE IDL3 AlterTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterTable",170, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // AlterView1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView1",169, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // AlterView1 ::= ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView1",169, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // AlterView ::= VIEW IDL1 AlterView1 AS Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterView",168, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // AlterUser ::= USER ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterUser",167, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // AlterDataBase2 ::= SET ROLLBACK IMMEDIATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase2",166, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // AlterDataBase2 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase2",166, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // AlterDataBase1 ::= CURRENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase1",165, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // AlterDataBase1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase1",165, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // AlterDataBase ::= DATABASE AlterDataBase1 AlterDataBase2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AlterDataBase",164, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // Alter1 ::= Function 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // Alter1 ::= Procedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // Alter1 ::= AlterTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // Alter1 ::= AlterView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // Alter1 ::= AlterDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // Alter1 ::= AlterUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter1",163, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // Alter ::= ALTER Alter1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Alter",162, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // IndexTabla ::= INDEX ID ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexTabla",161, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // ConstraintTabla5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla5",160, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // ConstraintTabla5 ::= Coma ID OrderBy2 ConstraintTabla5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla5",160, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // ConstraintTabla4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla4",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // ConstraintTabla4 ::= Coma ID ConstraintTabla4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla4",159, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // ConstraintTabla3 ::= Aparentesis ID ConstraintTabla4 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla3",158, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // ConstraintTabla2 ::= Aparentesis ID OrderBy2 ConstraintTabla5 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla2",157, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // ConstraintTabla1 ::= CHECK TableElement1 Aparentesis Condicion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // ConstraintTabla1 ::= FOREIGN KEY ConstraintTabla3 REFERENCES IDL1 ConstraintColumna5 ConstraintColumna6 ConstraintColumna7 TableElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // ConstraintTabla1 ::= UNIQUE ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // ConstraintTabla1 ::= PRIMARY KEY ConstraintColumna3 ConstraintTabla2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla1",156, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // ConstraintTabla ::= ConstraintColumna1 ConstraintTabla1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintTabla",155, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // ConstraintColumna10 ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna10",154, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // ConstraintColumna10 ::= PRIMARY KEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna10",154, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // ConstraintColumna9 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna9",153, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // ConstraintColumna9 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna9",153, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // ConstraintColumna8 ::= SET ConstraintColumna9 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna8",152, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // ConstraintColumna8 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna8",152, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // ConstraintColumna7 ::= UPDATE ConstraintColumna8 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna7",151, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // ConstraintColumna7 ::= DELETE ConstraintColumna8 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna7",151, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ConstraintColumna6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna6",150, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ConstraintColumna6 ::= ON ConstraintColumna7 ConstraintColumna6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna6",150, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ConstraintColumna5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna5",149, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ConstraintColumna5 ::= Aparentesis ID Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna5",149, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // ConstraintColumna4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna4",148, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // ConstraintColumna4 ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna4",148, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // ConstraintColumna3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // ConstraintColumna3 ::= NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // ConstraintColumna3 ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna3",147, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // ConstraintColumna2 ::= CHECK TableElement1 Aparentesis Condicion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",146, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // ConstraintColumna2 ::= ConstraintColumna4 REFERENCES IDL1 ConstraintColumna5 ConstraintColumna6 TableElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",146, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // ConstraintColumna2 ::= ConstraintColumna10 ConstraintColumna3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna2",146, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // ConstraintColumna1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna1",145, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // ConstraintColumna1 ::= CONSTRAINT ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna1",145, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // ConstraintColumna ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna",144, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // ConstraintColumna ::= ConstraintColumna1 ConstraintColumna2 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ConstraintColumna",144, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // DefinicionColumna12 ::= DEFAULT DefinicionColumna8 DefinicionColumna2 TableElement1 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna12",143, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // DefinicionColumna11 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // DefinicionColumna11 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // DefinicionColumna11 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna11",142, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // DefinicionColumna10 ::= FOR REPLICATION DefinicionColumna11 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna10",141, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // DefinicionColumna10 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna10",141, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // DefinicionColumna9 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna9",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // DefinicionColumna9 ::= NOT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna9",140, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // DefinicionColumna8 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // DefinicionColumna8 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // DefinicionColumna8 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // DefinicionColumna8 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // DefinicionColumna8 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna8",139, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // DefinicionColumna7 ::= ConstraintColumna1 ConstraintColumna2 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // DefinicionColumna7 ::= ROWGUIDCOL ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // DefinicionColumna7 ::= DefinicionColumna9 DefinicionColumna10 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // DefinicionColumna7 ::= IDENTITY DefinicionColumna5 TableElement1 DefinicionColumna4 ConstraintColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna7",138, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // DefinicionColumna6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",137, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // DefinicionColumna6 ::= DefinicionColumna7 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",137, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // DefinicionColumna6 ::= CONSTRAINT ID DefinicionColumna12 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna6",137, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // DefinicionColumna5 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna5",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // DefinicionColumna5 ::= Aparentesis Bit Coma Bit Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna5",136, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // DefinicionColumna4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna4",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // DefinicionColumna4 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna4",135, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // DefinicionColumna3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // DefinicionColumna3 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // DefinicionColumna3 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna3",134, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // DefinicionColumna2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna2",133, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // DefinicionColumna2 ::= IDENTITY DefinicionColumna5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna2",133, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // DefinicionColumna1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna1",132, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // DefinicionColumna1 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna1",132, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // DefinicionColumna ::= ID TipoDeDato DefinicionColumna1 DefinicionColumna6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinicionColumna",131, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // TableElement3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement3",127, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // TableElement3 ::= Coma TableElement2 TableElement3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement3",127, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // TableElement2 ::= IndexTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // TableElement2 ::= ConstraintTabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // TableElement2 ::= DefinicionColumna 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement2",126, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // TableElement6 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement6",130, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // TableElement5 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement5",129, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // TableElement5 ::= NOT TableElement6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement5",129, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // TableElement4 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement4",128, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // TableElement4 ::= FOR REPLICATION TableElement5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement4",128, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // TableElement1 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement1",125, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // TableElement1 ::= NOT TableElement4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableElement1",125, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // TableOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableOption",124, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // TableOption ::= ON PRIMARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TableOption",124, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // CreateTable ::= TABLE IDL3 Aparentesis TableElement2 TableElement3 Cparentesis TableOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateTable",123, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // OnOption ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OnOption",122, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // OnOption ::= ON ID Aparentesis ID Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OnOption",122, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // IndexInclude ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexInclude",121, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // IndexInclude ::= INCLUDE ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexInclude",121, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // IndexColumna2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna2",120, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // IndexColumna2 ::= Coma ID OrderBy2 IndexColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna2",120, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // IndexColumna1 ::= ID OrderBy2 IndexColumna2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna1",119, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // IndexColumna ::= Aparentesis IndexColumna1 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IndexColumna",118, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // CreateIndex1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex1",117, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // CreateIndex1 ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex1",117, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // CreateIndex ::= CreateIndex1 ConstraintColumna3 INDEX ID ON IDL3 IndexColumna IndexInclude Where OnOption 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex",116, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // CreateView ::= VIEW IDL1 AS Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateView",115, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // FileGrowth1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",114, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // FileGrowth1 ::= Porce 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",114, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // FileGrowth1 ::= Size2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth1",114, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // FileGrowth ::= FILEGROWTH Igual Integer FileGrowth1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileGrowth",113, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // MaxSize2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize2",112, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // MaxSize2 ::= UNLIMITED 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize2",112, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // MaxSize2 ::= Size2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize2",112, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // MaxSize1 ::= Integer MaxSize2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize1",111, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // MaxSize ::= MAXSIZE Igual MaxSize1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MaxSize",110, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // Size2 ::= TB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // Size2 ::= GB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // Size2 ::= MB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // Size2 ::= KB 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size2",109, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // Size1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size1",108, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // Size1 ::= Size2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size1",108, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // Size ::= SIZE Igual Integer Size1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Size",107, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // DefinitionOption ::= FileGrowth 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",106, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // DefinitionOption ::= MaxSize 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",106, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // DefinitionOption ::= Size 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOption",106, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // DefinitionOptions ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOptions",104, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // DefinitionOptions ::= Coma DefinitionOption DefinitionOptions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionOptions",104, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // FileName ::= FILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileName",103, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // FileName ::= FILENAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FileName",103, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // DefinitionName ::= NAMES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionName",102, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // DefinitionName ::= NAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DefinitionName",102, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // Definition ::= Aparentesis DefinitionName Igual Varchar Coma FileName Igual Varchar DefinitionOptions Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definition",101, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // Definitions ::= Definition 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definitions",100, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // Definitions ::= Definition Coma Definitions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Definitions",100, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // Primary ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Primary",99, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // Primary ::= PRIMARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Primary",99, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // CollateDataBase ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CollateDataBase",98, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // CollateDataBase ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CollateDataBase",98, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // CreateDataBase2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase2",97, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // CreateDataBase2 ::= ON Primary Definitions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase2",97, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // CreateDataBase1 ::= CreateDataBase2 CollateDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase1",96, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // CreateDataBase ::= DATABASE ID CreateDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateDataBase",95, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // CreateUser ::= USER ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CreateUser",94, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // Create1 ::= CreateIndex 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // Create1 ::= CreateView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // Create1 ::= CreateUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // Create1 ::= CreateDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // Create1 ::= CreateTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // Create1 ::= Function 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // Create1 ::= Procedure 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create1",93, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // Create ::= CREATE Create1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Create",92, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // UpdateFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("UpdateFrom",91, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // UpdateFrom ::= FROM IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("UpdateFrom",91, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // Update3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update3",90, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // Update3 ::= Coma Update1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update3",90, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // Update2 ::= Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update2",89, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // Update2 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update2",89, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // Update1 ::= ID Igual Update2 Update3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update1",88, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // Update ::= UPDATE Top IDL3 SET Update1 UpdateFrom Where 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Update",87, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // DeleteServer ::= Aparentesis ID Coma Varchar Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteServer",86, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // Delete3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete3",85, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // Delete3 ::= Coma IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete3",85, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // Delete2 ::= FROM IDL3 Delete3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete2",84, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // Delete1 ::= IDL3 Delete2 Where 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete1",83, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // Delete1 ::= OPENQUERY DeleteServer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete1",83, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // DeleteFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteFrom",82, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // DeleteFrom ::= FROM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DeleteFrom",82, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // Delete ::= DELETE Top DeleteFrom Delete1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Delete",81, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // InsertValores1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores1",80, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // InsertValores1 ::= Coma Aparentesis InsertTipo Cparentesis InsertValores1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores1",80, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // InsertValores ::= DEFAULT VALUES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores",79, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // InsertValores ::= VALUES Aparentesis InsertTipo Cparentesis InsertValores1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertValores",79, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // InsertTipo2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo2",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // InsertTipo2 ::= Coma InsertTipo1 InsertTipo2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo2",78, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // InsertTipo1 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // InsertTipo1 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // InsertTipo1 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // InsertTipo1 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // InsertTipo1 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo1",77, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // InsertTipo ::= InsertTipo1 InsertTipo2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertTipo",76, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // InsertListaColumna ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertListaColumna",75, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // InsertListaColumna ::= ListaColumnas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertListaColumna",75, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // InsertInto ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertInto",74, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // InsertInto ::= INTO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("InsertInto",74, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // Insert ::= INSERT Top InsertInto IDL3 InsertListaColumna InsertValores 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Insert",73, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // ListaColumnas2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas2",72, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // ListaColumnas2 ::= Coma ID ListaColumnas2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas2",72, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // ListaColumnas1 ::= ID ListaColumnas2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas1",71, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // ListaColumnas ::= Aparentesis ListaColumnas1 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ListaColumnas",70, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // SelectColumnas1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas1",69, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // SelectColumnas1 ::= Coma Operacion AsElement SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas1",69, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // SelectColumnas ::= Mul SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas",68, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // SelectColumnas ::= Operacion AsElement SelectColumnas1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectColumnas",68, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // JoinOuter ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinOuter",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // JoinOuter ::= OUTER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinOuter",67, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // JoinType ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // JoinType ::= FULL JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // JoinType ::= LEFT JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // JoinType ::= RIGHT JoinOuter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // JoinType ::= INNER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("JoinType",66, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // SelectFromJoin ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFromJoin",65, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // SelectFromJoin ::= JoinType JOIN IDL3 AsElement ON Condicion SelectFromJoin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFromJoin",65, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // SelectFrom1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom1",64, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // SelectFrom1 ::= Coma IDL3 AsElement SelectFromJoin 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom1",64, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // SelectFrom ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom",63, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // SelectFrom ::= FROM IDL3 AsElement SelectFromJoin SelectFrom1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SelectFrom",63, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // GroupBy1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy1",62, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // GroupBy1 ::= Coma Operacion GroupBy1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy1",62, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // GroupBy ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy",61, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // GroupBy ::= GROUP BY Operacion GroupBy1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("GroupBy",61, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // OrderBy3 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy3",60, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // OrderBy3 ::= Operacion OrderBy1 OrderBy2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy3",60, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // OrderBy2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // OrderBy2 ::= DESC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // OrderBy2 ::= ASC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy2",59, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // OrderBy1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy1",58, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // OrderBy1 ::= COLLATE ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy1",58, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // OrderBy ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy",57, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // OrderBy ::= ORDER BY Operacion OrderBy1 OrderBy2 OrderBy3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OrderBy",57, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // Having ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Having",56, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // Having ::= HAVING Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Having",56, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // Select1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",55, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // Select1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",55, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Select1 ::= ALL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select1",55, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Select ::= SELECT Select1 Top SelectColumnas SelectFrom Where GroupBy Having OrderBy 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Select",54, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Where ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Where",53, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Where ::= WHERE Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Where",53, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Condicion5 ::= OR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion5",52, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Condicion5 ::= AND 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion5",52, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Condicion4 ::= LIKE Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Condicion4 ::= BETWEEN Condicion AND Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Condicion4 ::= IN Aparentesis Operacion Operaciones Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion4",51, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Condicion3 ::= Not Condicion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Condicion3 ::= IS Not NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Condicion3 ::= Igual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Condicion3 ::= Exclamacion Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Condicion3 ::= Dbarra Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Condicion3 ::= Dampersand Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Condicion3 ::= Diferente Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Condicion3 ::= Digual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Condicion3 ::= MayorIgual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // Condicion3 ::= Mayor Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // Condicion3 ::= MenorIgual Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // Condicion3 ::= Menor Operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion3",50, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Condicion2 ::= Operacion Condicion3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion2",49, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // Condicion1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion1",48, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Condicion1 ::= Condicion5 Condicion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion1",48, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Condicion ::= Aparentesis Condicion Cparentesis Condicion1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion",47, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Condicion ::= Not Condicion2 Condicion1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Condicion",47, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // Top1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top1",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // Top1 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top1",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Top ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Top ::= TOP Aparentesis Integer Cparentesis Top1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Top",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Not ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Not",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Not ::= NOT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Not",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Operaciones ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operaciones",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Operaciones ::= Coma Operacion Operaciones 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operaciones",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Operacion6 ::= Mul Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Operacion6 ::= Bit Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Operacion6 ::= Integer Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Operacion6 ::= IDL5 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Operacion5 ::= COUNT Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Operacion5 ::= MAX Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Operacion5 ::= MIN Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Operacion5 ::= AVG Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Operacion5 ::= SUM Aparentesis Operacion6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Operacion5 ::= NULL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Operacion5 ::= Bit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Operacion5 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Operacion5 ::= Float 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Operacion5 ::= Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Operacion5 ::= IDL5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Operacion3 ::= Operacion5 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion3",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Operacion3 ::= Aparentesis Operacion Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion3",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Operacion4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Operacion4 ::= Div Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Operacion4 ::= Mul Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion4",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Operacion1 ::= Operacion3 Operacion4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion1",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Operacion2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Operacion2 ::= Resta Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Operacion2 ::= Suma Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion2",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Operacion ::= Operacion1 Operacion2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Operacion",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // AsElement1 ::= Varchar 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement1",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // AsElement1 ::= ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement1",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // AsElement ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // AsElement ::= AsElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // AsElement ::= AS AsElement1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AsElement",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Truncate ::= TRUNCATE TABLE IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Truncate",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // DropIndex2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex2",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // DropIndex2 ::= Coma DropIndex1 DropIndex2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex2",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // DropIndex1 ::= ID ON IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex1",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // DropIndex ::= INDEX IFExists DropIndex1 DropIndex2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropIndex",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // DropDataBase1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase1",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // DropDataBase1 ::= Coma ID DropDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase1",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // DropDataBase ::= DATABASE IFExists ID DropDataBase1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropDataBase",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // DropUser ::= USER IFExists ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropUser",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // DropView1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView1",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // DropView1 ::= Coma IDL1 DropView1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView1",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // DropView ::= VIEW IFExists IDL1 DropView1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropView",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // DropTable1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable1",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // DropTable1 ::= Coma IDL3 DropTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable1",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // DropTable ::= TABLE IFExists IDL3 DropTable1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropTable",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // DropOptions ::= DropIndex 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // DropOptions ::= DropDataBase 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // DropOptions ::= DropView 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // DropOptions ::= DropUser 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // DropOptions ::= DropTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DropOptions",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Drop ::= DROP DropOptions 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Drop",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // TipoDeDato4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato4",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // TipoDeDato4 ::= Coma Integer 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato4",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // TipoDeDato2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato2",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // TipoDeDato2 ::= Aparentesis Integer TipoDeDato4 Cparentesis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato2",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // TipoDeDato3 ::= VARBINARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // TipoDeDato3 ::= IMAGE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // TipoDeDato3 ::= BINARY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // TipoDeDato3 ::= NVARCHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // TipoDeDato3 ::= NTEXT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // TipoDeDato3 ::= NCHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // TipoDeDato3 ::= VARCHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // TipoDeDato3 ::= TEXT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // TipoDeDato3 ::= CHAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // TipoDeDato3 ::= TIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // TipoDeDato3 ::= SMALLDATETIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // TipoDeDato3 ::= DATETIMEOFFSET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // TipoDeDato3 ::= DATETIME2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // TipoDeDato3 ::= DATETIME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // TipoDeDato3 ::= DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // TipoDeDato3 ::= REAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // TipoDeDato3 ::= FLOAT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // TipoDeDato3 ::= SMALLMONEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // TipoDeDato3 ::= NUMERIC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // TipoDeDato3 ::= MONEY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // TipoDeDato3 ::= DECIMAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // TipoDeDato3 ::= BIT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // TipoDeDato3 ::= TINYINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // TipoDeDato3 ::= SMALLINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // TipoDeDato3 ::= INT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // TipoDeDato3 ::= BIGINT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato3",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // TipoDeDato1 ::= Acorchete TipoDeDato3 Ccorchete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato1",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // TipoDeDato1 ::= TipoDeDato3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato1",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // TipoDeDato ::= TipoDeDato1 TipoDeDato2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TipoDeDato",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Var ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Var",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // IFExists ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IFExists",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // IDL6 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL6",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // IDL6 ::= Punto IDL3 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL6",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // IDL5 ::= ID IDL6 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL5",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // IDL4 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL4",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // IDL4 ::= Punto IDL1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL4",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // IDL3 ::= ID IDL4 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL3",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // IDL2 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL2",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // IDL2 ::= Punto ID 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL2",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // IDL1 ::= ID IDL2 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDL1",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ID ::= Acorchete Identificador Ccorchete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ID",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ID ::= Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ID",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Fin ::= GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Fin",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Fin ::= PuntoYComa 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Fin",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SentenciasTSQL ::= Cursor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTSQL",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SentenciasTCL ::= Save 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SentenciasTCL ::= Commit 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SentenciasTCL ::= Rollback 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // SentenciasTCL ::= Transact 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasTCL",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // SentenciasDDL ::= Drop 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // SentenciasDDL ::= Alter 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // SentenciasDDL ::= Truncate 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SentenciasDDL ::= Create 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDDL",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SentenciasDML ::= Update 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // SentenciasDML ::= Delete 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // SentenciasDML ::= Insert 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // SentenciasDML ::= Select 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SentenciasDML",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Inicio2 ::= SentenciasTSQL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Inicio2 ::= SentenciasTCL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Inicio2 ::= SentenciasDDL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Inicio2 ::= SentenciasDML 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio2",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Inicio1 ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Inicio1 ::= error Fin Inicio1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Inicio1 ::= Inicio2 Fin Inicio1 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("Inicio1",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Inicio1 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

